// Code generated by protoc-gen-go.
// source: ddz_desk.proto
// DO NOT EDIT!

package ddzproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from ddz_base.proto

// Ignoring public import of Poker from ddz_base.proto

// Ignoring public import of WeixinInfo from ddz_base.proto

// Ignoring public import of RoomTypeInfo from ddz_base.proto

// Ignoring public import of PlayerInfo from ddz_base.proto

// Ignoring public import of DeskGameInfo from ddz_base.proto

// Ignoring public import of EProtoId from ddz_base.proto

// Ignoring public import of ErrorCode from ddz_base.proto

// Ignoring public import of PokerColor from ddz_base.proto

// Ignoring public import of DdzPaiType from ddz_base.proto

// Ignoring public import of ActType from ddz_base.proto

// Ignoring public import of DDZGameStatus from ddz_base.proto

// Ignoring public import of PlayerGameStatus from ddz_base.proto

// Ignoring public import of DDZRoomType from ddz_base.proto

// Ignoring public import of DeskGameStatus from ddz_base.proto

// 房主解散房间(未开局)
type Game_DissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DissolveDesk) Reset()                    { *m = Game_DissolveDesk{} }
func (m *Game_DissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_DissolveDesk) ProtoMessage()               {}
func (*Game_DissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Game_DissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DissolveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 解散房间回复
type Game_AckDissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,3,opt,name=deskId" json:"deskId,omitempty"`
	PassWord         *string      `protobuf:"bytes,4,opt,name=passWord" json:"passWord,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckDissolveDesk) Reset()                    { *m = Game_AckDissolveDesk{} }
func (m *Game_AckDissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_AckDissolveDesk) ProtoMessage()               {}
func (*Game_AckDissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Game_AckDissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckDissolveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckDissolveDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *Game_AckDissolveDesk) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

// 申请解散房间(游戏中)
type Game_ReqDissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ReqDissolveDesk) Reset()                    { *m = Game_ReqDissolveDesk{} }
func (m *Game_ReqDissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_ReqDissolveDesk) ProtoMessage()               {}
func (*Game_ReqDissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Game_ReqDissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ReqDissolveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_AckReqDissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserIdAgree      []uint32     `protobuf:"varint,2,rep,name=userIdAgree" json:"userIdAgree,omitempty"`
	UserIdWait       []uint32     `protobuf:"varint,3,rep,name=userIdWait" json:"userIdWait,omitempty"`
	UserIdDisagree   []uint32     `protobuf:"varint,4,rep,name=userIdDisagree" json:"userIdDisagree,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckReqDissolveDesk) Reset()                    { *m = Game_AckReqDissolveDesk{} }
func (m *Game_AckReqDissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_AckReqDissolveDesk) ProtoMessage()               {}
func (*Game_AckReqDissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Game_AckReqDissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckReqDissolveDesk) GetUserIdAgree() []uint32 {
	if m != nil {
		return m.UserIdAgree
	}
	return nil
}

func (m *Game_AckReqDissolveDesk) GetUserIdWait() []uint32 {
	if m != nil {
		return m.UserIdWait
	}
	return nil
}

func (m *Game_AckReqDissolveDesk) GetUserIdDisagree() []uint32 {
	if m != nil {
		return m.UserIdDisagree
	}
	return nil
}

// 离开房间
type Game_LeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_LeaveDesk) Reset()                    { *m = Game_LeaveDesk{} }
func (m *Game_LeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_LeaveDesk) ProtoMessage()               {}
func (*Game_LeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Game_LeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 离开房间的回复
type Game_AckLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckLeaveDesk) Reset()                    { *m = Game_AckLeaveDesk{} }
func (m *Game_AckLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_AckLeaveDesk) ProtoMessage()               {}
func (*Game_AckLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Game_AckLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 准备游戏
type Game_Ready struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsShowHandPokers *bool        `protobuf:"varint,3,opt,name=isShowHandPokers" json:"isShowHandPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Ready) Reset()                    { *m = Game_Ready{} }
func (m *Game_Ready) String() string            { return proto.CompactTextString(m) }
func (*Game_Ready) ProtoMessage()               {}
func (*Game_Ready) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Game_Ready) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Ready) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Ready) GetIsShowHandPokers() bool {
	if m != nil && m.IsShowHandPokers != nil {
		return *m.IsShowHandPokers
	}
	return false
}

// 准备游戏的结果
type Game_AckReady struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Msg              *string      `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckReady) Reset()                    { *m = Game_AckReady{} }
func (m *Game_AckReady) String() string            { return proto.CompactTextString(m) }
func (*Game_AckReady) ProtoMessage()               {}
func (*Game_AckReady) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *Game_AckReady) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckReady) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Game_AckReady) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 聊天的内容
type Game_Message struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,6,opt,name=deskId" json:"deskId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Message) Reset()                    { *m = Game_Message{} }
func (m *Game_Message) String() string            { return proto.CompactTextString(m) }
func (*Game_Message) ProtoMessage()               {}
func (*Game_Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Game_Message) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Message) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *Game_Message) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_Message) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Game_Message) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Message) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

// 消息广播
type Game_SendMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SendMessage) Reset()                    { *m = Game_SendMessage{} }
func (m *Game_SendMessage) String() string            { return proto.CompactTextString(m) }
func (*Game_SendMessage) ProtoMessage()               {}
func (*Game_SendMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *Game_SendMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *Game_SendMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_SendMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Game_SendMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 赢牌信息：谁赢了多少
type WinCoinInfo struct {
	NickName         *string `protobuf:"bytes,1,opt,name=nickName" json:"nickName,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	BaseValue        *int32  `protobuf:"varint,3,opt,name=baseValue" json:"baseValue,omitempty"`
	WinCoin          *int64  `protobuf:"varint,4,opt,name=winCoin" json:"winCoin,omitempty"`
	Coin             *int64  `protobuf:"varint,5,opt,name=coin" json:"coin,omitempty"`
	IsDiZhu          *bool   `protobuf:"varint,6,opt,name=isDiZhu" json:"isDiZhu,omitempty"`
	Rate             *int32  `protobuf:"varint,7,opt,name=rate" json:"rate,omitempty"`
	Description      *string `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WinCoinInfo) Reset()                    { *m = WinCoinInfo{} }
func (m *WinCoinInfo) String() string            { return proto.CompactTextString(m) }
func (*WinCoinInfo) ProtoMessage()               {}
func (*WinCoinInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *WinCoinInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *WinCoinInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *WinCoinInfo) GetBaseValue() int32 {
	if m != nil && m.BaseValue != nil {
		return *m.BaseValue
	}
	return 0
}

func (m *WinCoinInfo) GetWinCoin() int64 {
	if m != nil && m.WinCoin != nil {
		return *m.WinCoin
	}
	return 0
}

func (m *WinCoinInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *WinCoinInfo) GetIsDiZhu() bool {
	if m != nil && m.IsDiZhu != nil {
		return *m.IsDiZhu
	}
	return false
}

func (m *WinCoinInfo) GetRate() int32 {
	if m != nil && m.Rate != nil {
		return *m.Rate
	}
	return 0
}

func (m *WinCoinInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type EndLotteryInfo struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	BigWin           *bool   `protobuf:"varint,3,opt,name=bigWin" json:"bigWin,omitempty"`
	IsOwner          *bool   `protobuf:"varint,4,opt,name=isOwner" json:"isOwner,omitempty"`
	WinCoin          *int64  `protobuf:"varint,5,opt,name=winCoin" json:"winCoin,omitempty"`
	MaxWinCoin       *int32  `protobuf:"varint,6,opt,name=maxWinCoin" json:"maxWinCoin,omitempty"`
	CountBomb        *int32  `protobuf:"varint,7,opt,name=countBomb" json:"countBomb,omitempty"`
	CountWin         *int32  `protobuf:"varint,8,opt,name=countWin" json:"countWin,omitempty"`
	CountLose        *int32  `protobuf:"varint,9,opt,name=countLose" json:"countLose,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EndLotteryInfo) Reset()                    { *m = EndLotteryInfo{} }
func (m *EndLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*EndLotteryInfo) ProtoMessage()               {}
func (*EndLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *EndLotteryInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *EndLotteryInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *EndLotteryInfo) GetBigWin() bool {
	if m != nil && m.BigWin != nil {
		return *m.BigWin
	}
	return false
}

func (m *EndLotteryInfo) GetIsOwner() bool {
	if m != nil && m.IsOwner != nil {
		return *m.IsOwner
	}
	return false
}

func (m *EndLotteryInfo) GetWinCoin() int64 {
	if m != nil && m.WinCoin != nil {
		return *m.WinCoin
	}
	return 0
}

func (m *EndLotteryInfo) GetMaxWinCoin() int32 {
	if m != nil && m.MaxWinCoin != nil {
		return *m.MaxWinCoin
	}
	return 0
}

func (m *EndLotteryInfo) GetCountBomb() int32 {
	if m != nil && m.CountBomb != nil {
		return *m.CountBomb
	}
	return 0
}

func (m *EndLotteryInfo) GetCountWin() int32 {
	if m != nil && m.CountWin != nil {
		return *m.CountWin
	}
	return 0
}

func (m *EndLotteryInfo) GetCountLose() int32 {
	if m != nil && m.CountLose != nil {
		return *m.CountLose
	}
	return 0
}

// 本局结果(广播)
type Game_SendCurrentResult struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	WinCoinInfo      []*WinCoinInfo `protobuf:"bytes,2,rep,name=winCoinInfo" json:"winCoinInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_SendCurrentResult) Reset()                    { *m = Game_SendCurrentResult{} }
func (m *Game_SendCurrentResult) String() string            { return proto.CompactTextString(m) }
func (*Game_SendCurrentResult) ProtoMessage()               {}
func (*Game_SendCurrentResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *Game_SendCurrentResult) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendCurrentResult) GetWinCoinInfo() []*WinCoinInfo {
	if m != nil {
		return m.WinCoinInfo
	}
	return nil
}

// 牌局结束(广播)
type Game_SendEndLottery struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CoinInfo         []*EndLotteryInfo `protobuf:"bytes,2,rep,name=coinInfo" json:"coinInfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Game_SendEndLottery) Reset()                    { *m = Game_SendEndLottery{} }
func (m *Game_SendEndLottery) String() string            { return proto.CompactTextString(m) }
func (*Game_SendEndLottery) ProtoMessage()               {}
func (*Game_SendEndLottery) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *Game_SendEndLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendEndLottery) GetCoinInfo() []*EndLotteryInfo {
	if m != nil {
		return m.CoinInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*Game_DissolveDesk)(nil), "ddzproto.game_DissolveDesk")
	proto.RegisterType((*Game_AckDissolveDesk)(nil), "ddzproto.game_AckDissolveDesk")
	proto.RegisterType((*Game_ReqDissolveDesk)(nil), "ddzproto.game_ReqDissolveDesk")
	proto.RegisterType((*Game_AckReqDissolveDesk)(nil), "ddzproto.game_AckReqDissolveDesk")
	proto.RegisterType((*Game_LeaveDesk)(nil), "ddzproto.game_LeaveDesk")
	proto.RegisterType((*Game_AckLeaveDesk)(nil), "ddzproto.game_AckLeaveDesk")
	proto.RegisterType((*Game_Ready)(nil), "ddzproto.game_Ready")
	proto.RegisterType((*Game_AckReady)(nil), "ddzproto.game_AckReady")
	proto.RegisterType((*Game_Message)(nil), "ddzproto.game_Message")
	proto.RegisterType((*Game_SendMessage)(nil), "ddzproto.game_SendMessage")
	proto.RegisterType((*WinCoinInfo)(nil), "ddzproto.WinCoinInfo")
	proto.RegisterType((*EndLotteryInfo)(nil), "ddzproto.EndLotteryInfo")
	proto.RegisterType((*Game_SendCurrentResult)(nil), "ddzproto.game_SendCurrentResult")
	proto.RegisterType((*Game_SendEndLottery)(nil), "ddzproto.game_SendEndLottery")
}

var fileDescriptor1 = []byte{
	// 561 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0xb9, 0x4e, 0x5a, 0x67, 0xd2, 0xe6, 0x97, 0xba, 0x50, 0x2c, 0x4e, 0xc8, 0x12, 0x12,
	0xe2, 0x90, 0x03, 0x17, 0x24, 0x6e, 0x6d, 0x83, 0x94, 0xa2, 0x14, 0xa2, 0x06, 0x11, 0x09, 0x09,
	0x55, 0x1b, 0x7b, 0x48, 0x56, 0x49, 0xbc, 0x61, 0xd7, 0x26, 0x84, 0x0b, 0xe2, 0x43, 0xf0, 0x3d,
	0xf8, 0x88, 0xcc, 0x8e, 0x9d, 0x7f, 0xe5, 0x92, 0x54, 0x15, 0x17, 0xcb, 0xf3, 0x67, 0xdf, 0x7b,
	0x33, 0x6f, 0x17, 0x6a, 0x71, 0xfc, 0xfd, 0x26, 0x46, 0x33, 0x6a, 0x4c, 0xb5, 0x4a, 0x95, 0xef,
	0x51, 0xcc, 0x7f, 0x8f, 0xb9, 0xd2, 0x17, 0x06, 0xf3, 0x4a, 0xf8, 0x06, 0x8e, 0x07, 0x62, 0x82,
	0x37, 0x4d, 0x69, 0x8c, 0x1a, 0x7f, 0xc5, 0x26, 0x1d, 0xf2, 0x9f, 0xc2, 0xfe, 0x10, 0x45, 0x8c,
	0x3a, 0x70, 0x9e, 0x38, 0xcf, 0xaa, 0x2f, 0x1e, 0x36, 0x16, 0xe7, 0x1b, 0x1d, 0xfb, 0x6d, 0x71,
	0xd1, 0xaf, 0xc1, 0x7e, 0x66, 0x50, 0x5f, 0xc6, 0xc1, 0x1e, 0xb5, 0x1d, 0x85, 0x0a, 0x1e, 0x30,
	0xd6, 0x59, 0x34, 0xba, 0x07, 0x38, 0x1b, 0xdb, 0x11, 0x28, 0x76, 0x29, 0x2e, 0xfb, 0x75, 0xf0,
	0xa6, 0xc2, 0x98, 0x9e, 0xd2, 0x71, 0x50, 0xa2, 0x4c, 0x25, 0xbc, 0x2a, 0x08, 0xaf, 0xf1, 0xcb,
	0x7d, 0xe8, 0xff, 0xe9, 0xc0, 0xa3, 0xc5, 0x00, 0x77, 0x84, 0x3c, 0x81, 0x6a, 0x0e, 0x79, 0x36,
	0xd0, 0x88, 0x84, 0xeb, 0xd2, 0x20, 0x3e, 0x40, 0x9e, 0xec, 0x09, 0x99, 0xd2, 0x30, 0x36, 0x77,
	0x0a, 0xb5, 0x3c, 0x47, 0x2c, 0x82, 0x7b, 0x4b, 0x36, 0x1f, 0xbe, 0x84, 0x1a, 0x4b, 0x68, 0xa3,
	0xd8, 0x89, 0x39, 0x7c, 0x55, 0x18, 0x49, 0xda, 0x77, 0x3e, 0xfb, 0x09, 0xa0, 0xd8, 0xa3, 0x88,
	0xe7, 0x77, 0xb5, 0x2b, 0x80, 0xba, 0x34, 0xdd, 0xa1, 0x9a, 0xb5, 0x44, 0x12, 0x77, 0xd4, 0x08,
	0xb5, 0x61, 0xe3, 0xbc, 0xb0, 0x0b, 0x47, 0xab, 0xb5, 0xee, 0xc0, 0x50, 0x05, 0x77, 0x62, 0x06,
	0x0c, 0x5f, 0x59, 0xa3, 0x73, 0xd9, 0xac, 0x1f, 0x70, 0xc8, 0xa0, 0x57, 0x68, 0x68, 0x81, 0xb8,
	0x2d, 0xe6, 0xff, 0x70, 0x40, 0x98, 0xef, 0xe7, 0x53, 0x64, 0xdc, 0x32, 0x79, 0xb3, 0x27, 0x17,
	0x37, 0xac, 0x20, 0x2c, 0xdd, 0x22, 0x2c, 0xdf, 0xba, 0x8e, 0xfb, 0xb6, 0x39, 0x34, 0x50, 0x67,
	0x01, 0x5d, 0x4c, 0xe2, 0x7f, 0x25, 0x22, 0xfc, 0xe5, 0x40, 0xb5, 0x27, 0x93, 0x0b, 0x25, 0x93,
	0xcb, 0xe4, 0xb3, 0xb2, 0x6f, 0x22, 0x91, 0xd1, 0xe8, 0x2d, 0x09, 0x61, 0xca, 0xca, 0x5f, 0xb6,
	0x1c, 0x43, 0xc5, 0x3e, 0xf7, 0x0f, 0x62, 0x9c, 0x61, 0xc1, 0x40, 0xf4, 0xb3, 0x1c, 0x83, 0x59,
	0x5c, 0xff, 0x10, 0x4a, 0x91, 0x8d, 0xca, 0x1c, 0x51, 0x59, 0x9a, 0xa6, 0xfc, 0x38, 0xcc, 0x78,
	0x52, 0xcf, 0x96, 0xb5, 0x48, 0x31, 0x38, 0xe0, 0xd3, 0x74, 0xc5, 0x69, 0x0f, 0x91, 0x96, 0xd3,
	0x54, 0xaa, 0x24, 0xf0, 0xf8, 0x25, 0xfe, 0x76, 0xa0, 0xf6, 0x3a, 0x89, 0xdb, 0x2a, 0x4d, 0x51,
	0xcf, 0x59, 0xda, 0x4a, 0x88, 0xc3, 0x42, 0xd6, 0xa5, 0x2e, 0x2d, 0xed, 0xcb, 0x01, 0x8d, 0x93,
	0xdf, 0x93, 0x9c, 0xf8, 0xdd, 0x2c, 0xa1, 0xf5, 0x95, 0x16, 0x89, 0x85, 0xd0, 0x5c, 0x1a, 0x2d,
	0x6a, 0x22, 0xbe, 0x15, 0x0b, 0xc8, 0x7d, 0xb0, 0x03, 0x46, 0x2a, 0x4b, 0xd2, 0x73, 0x35, 0xe9,
	0x17, 0x12, 0x89, 0x8a, 0x53, 0x16, 0xda, 0xdb, 0x68, 0x6a, 0x2b, 0x83, 0x41, 0x85, 0xfd, 0x1b,
	0xc1, 0xe9, 0xd2, 0xbf, 0x8b, 0x4c, 0x6b, 0x4c, 0xd2, 0x6b, 0x34, 0xd9, 0x38, 0xdd, 0xd6, 0xc5,
	0xe7, 0x50, 0x9d, 0xad, 0xac, 0xe0, 0xb7, 0xbe, 0xd1, 0xbb, 0xe6, 0x53, 0x38, 0x84, 0x93, 0x25,
	0xd9, 0x6a, 0x4f, 0xdb, 0x33, 0x79, 0xd1, 0x26, 0x4d, 0xb0, 0x6a, 0xdc, 0x5c, 0xfb, 0xf9, 0x5e,
	0xcb, 0xed, 0xfc, 0xf7, 0x27, 0x00, 0x00, 0xff, 0xff, 0x17, 0x61, 0x96, 0x56, 0x01, 0x06, 0x00,
	0x00,
}
