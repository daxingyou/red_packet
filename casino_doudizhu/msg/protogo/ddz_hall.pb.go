// Code generated by protoc-gen-go.
// source: ddz_hall.proto
// DO NOT EDIT!

package ddzproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from ddz_base.proto

// Ignoring public import of Poker from ddz_base.proto

// Ignoring public import of WeixinInfo from ddz_base.proto

// Ignoring public import of RoomTypeInfo from ddz_base.proto

// Ignoring public import of PlayerInfo from ddz_base.proto

// Ignoring public import of DdzDeskInfo from ddz_base.proto

// Ignoring public import of EProtoId from ddz_base.proto

// Ignoring public import of ErrorCode from ddz_base.proto

// Ignoring public import of PokerColor from ddz_base.proto

// Ignoring public import of DdzPaiType from ddz_base.proto

// Ignoring public import of ActType from ddz_base.proto

// Ignoring public import of DDZGameStatus from ddz_base.proto

// Ignoring public import of PlayerGameStatus from ddz_base.proto

// Ignoring public import of DDZRoomType from ddz_base.proto

// Ignoring public import of DeskGameStatus from ddz_base.proto

// 服务器信息
type ServerInfo struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Status           *int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ServerInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 接入服务器
type DdzQuickConn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChannelId        *string      `protobuf:"bytes,2,opt,name=channelId" json:"channelId,omitempty"`
	GameId           *int32       `protobuf:"varint,3,opt,name=gameId" json:"gameId,omitempty"`
	CurrVersion      *int32       `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	LanguageId       *int32       `protobuf:"varint,5,opt,name=languageId" json:"languageId,omitempty"`
	UserId           *uint32      `protobuf:"varint,6,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzQuickConn) Reset()                    { *m = DdzQuickConn{} }
func (m *DdzQuickConn) String() string            { return proto.CompactTextString(m) }
func (*DdzQuickConn) ProtoMessage()               {}
func (*DdzQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *DdzQuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzQuickConn) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *DdzQuickConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *DdzQuickConn) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *DdzQuickConn) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return 0
}

func (m *DdzQuickConn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type DdzAckQuickConn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GameServer       *ServerInfo  `protobuf:"bytes,2,opt,name=gameServer" json:"gameServer,omitempty"`
	ReleaseTag       *int32       `protobuf:"varint,3,opt,name=releaseTag" json:"releaseTag,omitempty"`
	CurrVersion      *int32       `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	IsUpdate         *int32       `protobuf:"varint,5,opt,name=isUpdate" json:"isUpdate,omitempty"`
	DownloadUrl      *string      `protobuf:"bytes,6,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	VersionInfo      *string      `protobuf:"bytes,7,opt,name=versionInfo" json:"versionInfo,omitempty"`
	IsMaintain       *int32       `protobuf:"varint,8,opt,name=isMaintain" json:"isMaintain,omitempty"`
	MaintainMsg      *string      `protobuf:"bytes,9,opt,name=maintainMsg" json:"maintainMsg,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzAckQuickConn) Reset()                    { *m = DdzAckQuickConn{} }
func (m *DdzAckQuickConn) String() string            { return proto.CompactTextString(m) }
func (*DdzAckQuickConn) ProtoMessage()               {}
func (*DdzAckQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *DdzAckQuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzAckQuickConn) GetGameServer() *ServerInfo {
	if m != nil {
		return m.GameServer
	}
	return nil
}

func (m *DdzAckQuickConn) GetReleaseTag() int32 {
	if m != nil && m.ReleaseTag != nil {
		return *m.ReleaseTag
	}
	return 0
}

func (m *DdzAckQuickConn) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *DdzAckQuickConn) GetIsUpdate() int32 {
	if m != nil && m.IsUpdate != nil {
		return *m.IsUpdate
	}
	return 0
}

func (m *DdzAckQuickConn) GetDownloadUrl() string {
	if m != nil && m.DownloadUrl != nil {
		return *m.DownloadUrl
	}
	return ""
}

func (m *DdzAckQuickConn) GetVersionInfo() string {
	if m != nil && m.VersionInfo != nil {
		return *m.VersionInfo
	}
	return ""
}

func (m *DdzAckQuickConn) GetIsMaintain() int32 {
	if m != nil && m.IsMaintain != nil {
		return *m.IsMaintain
	}
	return 0
}

func (m *DdzAckQuickConn) GetMaintainMsg() string {
	if m != nil && m.MaintainMsg != nil {
		return *m.MaintainMsg
	}
	return ""
}

// 游戏登录请求
type DdzLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ProtoVersion     *int32       `protobuf:"varint,3,opt,name=protoVersion" json:"protoVersion,omitempty"`
	WxInfo           *WeixinInfo  `protobuf:"bytes,4,opt,name=wxInfo" json:"wxInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzLogin) Reset()                    { *m = DdzLogin{} }
func (m *DdzLogin) String() string            { return proto.CompactTextString(m) }
func (*DdzLogin) ProtoMessage()               {}
func (*DdzLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *DdzLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzLogin) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *DdzLogin) GetProtoVersion() int32 {
	if m != nil && m.ProtoVersion != nil {
		return *m.ProtoVersion
	}
	return 0
}

func (m *DdzLogin) GetWxInfo() *WeixinInfo {
	if m != nil {
		return m.WxInfo
	}
	return nil
}

// 游戏登录回复
type DdzAckLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	NickName         *string      `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	RoomPassword     *string      `protobuf:"bytes,4,opt,name=roomPassword" json:"roomPassword,omitempty"`
	CostCreateRoom   *int64       `protobuf:"varint,5,opt,name=costCreateRoom" json:"costCreateRoom,omitempty"`
	CostRebuy        *int64       `protobuf:"varint,6,opt,name=costRebuy" json:"costRebuy,omitempty"`
	Championship     *bool        `protobuf:"varint,7,opt,name=championship" json:"championship,omitempty"`
	Chip             *int64       `protobuf:"varint,8,opt,name=chip" json:"chip,omitempty"`
	MailCount        *int32       `protobuf:"varint,9,opt,name=mailCount" json:"mailCount,omitempty"`
	Notice           *string      `protobuf:"bytes,10,opt,name=notice" json:"notice,omitempty"`
	GameStatus       *int32       `protobuf:"varint,11,opt,name=gameStatus" json:"gameStatus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzAckLogin) Reset()                    { *m = DdzAckLogin{} }
func (m *DdzAckLogin) String() string            { return proto.CompactTextString(m) }
func (*DdzAckLogin) ProtoMessage()               {}
func (*DdzAckLogin) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DdzAckLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzAckLogin) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *DdzAckLogin) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *DdzAckLogin) GetRoomPassword() string {
	if m != nil && m.RoomPassword != nil {
		return *m.RoomPassword
	}
	return ""
}

func (m *DdzAckLogin) GetCostCreateRoom() int64 {
	if m != nil && m.CostCreateRoom != nil {
		return *m.CostCreateRoom
	}
	return 0
}

func (m *DdzAckLogin) GetCostRebuy() int64 {
	if m != nil && m.CostRebuy != nil {
		return *m.CostRebuy
	}
	return 0
}

func (m *DdzAckLogin) GetChampionship() bool {
	if m != nil && m.Championship != nil {
		return *m.Championship
	}
	return false
}

func (m *DdzAckLogin) GetChip() int64 {
	if m != nil && m.Chip != nil {
		return *m.Chip
	}
	return 0
}

func (m *DdzAckLogin) GetMailCount() int32 {
	if m != nil && m.MailCount != nil {
		return *m.MailCount
	}
	return 0
}

func (m *DdzAckLogin) GetNotice() string {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return ""
}

func (m *DdzAckLogin) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

type DdzNotice struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,2,opt,name=noticeType" json:"noticeType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzNotice) Reset()                    { *m = DdzNotice{} }
func (m *DdzNotice) String() string            { return proto.CompactTextString(m) }
func (*DdzNotice) ProtoMessage()               {}
func (*DdzNotice) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *DdzNotice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

// 公告的内容
type DdzAckNotice struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,2,opt,name=noticeType" json:"noticeType,omitempty"`
	NoticeTitle      *string      `protobuf:"bytes,3,opt,name=noticeTitle" json:"noticeTitle,omitempty"`
	NoticeContent    *string      `protobuf:"bytes,4,opt,name=noticeContent" json:"noticeContent,omitempty"`
	NoticeMemo       *string      `protobuf:"bytes,5,opt,name=noticeMemo" json:"noticeMemo,omitempty"`
	Id               *int32       `protobuf:"varint,6,opt,name=id" json:"id,omitempty"`
	Fileds           []string     `protobuf:"bytes,7,rep,name=fileds" json:"fileds,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzAckNotice) Reset()                    { *m = DdzAckNotice{} }
func (m *DdzAckNotice) String() string            { return proto.CompactTextString(m) }
func (*DdzAckNotice) ProtoMessage()               {}
func (*DdzAckNotice) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *DdzAckNotice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzAckNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *DdzAckNotice) GetNoticeTitle() string {
	if m != nil && m.NoticeTitle != nil {
		return *m.NoticeTitle
	}
	return ""
}

func (m *DdzAckNotice) GetNoticeContent() string {
	if m != nil && m.NoticeContent != nil {
		return *m.NoticeContent
	}
	return ""
}

func (m *DdzAckNotice) GetNoticeMemo() string {
	if m != nil && m.NoticeMemo != nil {
		return *m.NoticeMemo
	}
	return ""
}

func (m *DdzAckNotice) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DdzAckNotice) GetFileds() []string {
	if m != nil {
		return m.Fileds
	}
	return nil
}

// 游戏战绩
type DdzGameRecord struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id               *int32       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzGameRecord) Reset()                    { *m = DdzGameRecord{} }
func (m *DdzGameRecord) String() string            { return proto.CompactTextString(m) }
func (*DdzGameRecord) ProtoMessage()               {}
func (*DdzGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *DdzGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzGameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DdzGameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

//
type BeanUserRecord struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	NickName         *string      `protobuf:"bytes,3,opt,name=NickName" json:"NickName,omitempty"`
	WinAmount        *int64       `protobuf:"varint,4,opt,name=WinAmount" json:"WinAmount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BeanUserRecord) Reset()                    { *m = BeanUserRecord{} }
func (m *BeanUserRecord) String() string            { return proto.CompactTextString(m) }
func (*BeanUserRecord) ProtoMessage()               {}
func (*BeanUserRecord) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *BeanUserRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BeanUserRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *BeanUserRecord) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *BeanUserRecord) GetWinAmount() int64 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

//
type BeanGameRecord struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id               *int32            `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	DeskId           *int32            `protobuf:"varint,3,opt,name=deskId" json:"deskId,omitempty"`
	BeginTime        *string           `protobuf:"bytes,4,opt,name=beginTime" json:"beginTime,omitempty"`
	Users            []*BeanUserRecord `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *BeanGameRecord) Reset()                    { *m = BeanGameRecord{} }
func (m *BeanGameRecord) String() string            { return proto.CompactTextString(m) }
func (*BeanGameRecord) ProtoMessage()               {}
func (*BeanGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *BeanGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BeanGameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BeanGameRecord) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *BeanGameRecord) GetBeginTime() string {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return ""
}

func (m *BeanGameRecord) GetUsers() []*BeanUserRecord {
	if m != nil {
		return m.Users
	}
	return nil
}

//
type DdzAckGameRecord struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32           `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Records          []*BeanGameRecord `protobuf:"bytes,3,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DdzAckGameRecord) Reset()                    { *m = DdzAckGameRecord{} }
func (m *DdzAckGameRecord) String() string            { return proto.CompactTextString(m) }
func (*DdzAckGameRecord) ProtoMessage()               {}
func (*DdzAckGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *DdzAckGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzAckGameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *DdzAckGameRecord) GetRecords() []*BeanGameRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 反馈信息的协议
type DdzFeedback struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Message          *string      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzFeedback) Reset()                    { *m = DdzFeedback{} }
func (m *DdzFeedback) String() string            { return proto.CompactTextString(m) }
func (*DdzFeedback) ProtoMessage()               {}
func (*DdzFeedback) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *DdzFeedback) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzFeedback) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// 创建房间
type DdzCreateRoom struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RoomTypeInfo     *RoomTypeInfo `protobuf:"bytes,2,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DdzCreateRoom) Reset()                    { *m = DdzCreateRoom{} }
func (m *DdzCreateRoom) String() string            { return proto.CompactTextString(m) }
func (*DdzCreateRoom) ProtoMessage()               {}
func (*DdzCreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *DdzCreateRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzCreateRoom) GetRoomTypeInfo() *RoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 创建房间回复的信息
type DdzAckCreateRoom struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskId           *int32        `protobuf:"varint,2,opt,name=deskId" json:"deskId,omitempty"`
	Password         *string       `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	UserBalance      *int64        `protobuf:"varint,4,opt,name=userBalance" json:"userBalance,omitempty"`
	CreateFee        *int64        `protobuf:"varint,5,opt,name=createFee" json:"createFee,omitempty"`
	RoomTypeInfo     *RoomTypeInfo `protobuf:"bytes,6,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DdzAckCreateRoom) Reset()                    { *m = DdzAckCreateRoom{} }
func (m *DdzAckCreateRoom) String() string            { return proto.CompactTextString(m) }
func (*DdzAckCreateRoom) ProtoMessage()               {}
func (*DdzAckCreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *DdzAckCreateRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzAckCreateRoom) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *DdzAckCreateRoom) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *DdzAckCreateRoom) GetUserBalance() int64 {
	if m != nil && m.UserBalance != nil {
		return *m.UserBalance
	}
	return 0
}

func (m *DdzAckCreateRoom) GetCreateFee() int64 {
	if m != nil && m.CreateFee != nil {
		return *m.CreateFee
	}
	return 0
}

func (m *DdzAckCreateRoom) GetRoomTypeInfo() *RoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 客户端请求进入 room, 服务器返回DdzSendGameInfo
type DdzEnterRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *int32       `protobuf:"varint,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	PassWord         *string      `protobuf:"bytes,4,opt,name=PassWord" json:"PassWord,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzEnterRoom) Reset()                    { *m = DdzEnterRoom{} }
func (m *DdzEnterRoom) String() string            { return proto.CompactTextString(m) }
func (*DdzEnterRoom) ProtoMessage()               {}
func (*DdzEnterRoom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *DdzEnterRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DdzEnterRoom) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *DdzEnterRoom) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *DdzEnterRoom) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

func (m *DdzEnterRoom) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type DdzAckEnterRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DdzAckEnterRoom) Reset()                    { *m = DdzAckEnterRoom{} }
func (m *DdzAckEnterRoom) String() string            { return proto.CompactTextString(m) }
func (*DdzAckEnterRoom) ProtoMessage()               {}
func (*DdzAckEnterRoom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *DdzAckEnterRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerInfo)(nil), "ddzproto.ServerInfo")
	proto.RegisterType((*DdzQuickConn)(nil), "ddzproto.DdzQuickConn")
	proto.RegisterType((*DdzAckQuickConn)(nil), "ddzproto.DdzAckQuickConn")
	proto.RegisterType((*DdzLogin)(nil), "ddzproto.DdzLogin")
	proto.RegisterType((*DdzAckLogin)(nil), "ddzproto.DdzAckLogin")
	proto.RegisterType((*DdzNotice)(nil), "ddzproto.DdzNotice")
	proto.RegisterType((*DdzAckNotice)(nil), "ddzproto.DdzAckNotice")
	proto.RegisterType((*DdzGameRecord)(nil), "ddzproto.DdzGameRecord")
	proto.RegisterType((*BeanUserRecord)(nil), "ddzproto.BeanUserRecord")
	proto.RegisterType((*BeanGameRecord)(nil), "ddzproto.BeanGameRecord")
	proto.RegisterType((*DdzAckGameRecord)(nil), "ddzproto.DdzAckGameRecord")
	proto.RegisterType((*DdzFeedback)(nil), "ddzproto.DdzFeedback")
	proto.RegisterType((*DdzCreateRoom)(nil), "ddzproto.DdzCreateRoom")
	proto.RegisterType((*DdzAckCreateRoom)(nil), "ddzproto.DdzAckCreateRoom")
	proto.RegisterType((*DdzEnterRoom)(nil), "ddzproto.DdzEnterRoom")
	proto.RegisterType((*DdzAckEnterRoom)(nil), "ddzproto.DdzAckEnterRoom")
}

var fileDescriptor2 = []byte{
	// 788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x3e, 0x89, 0x93, 0x10, 0x4f, 0x48, 0xe0, 0xf8, 0x00, 0xb2, 0xce, 0x55, 0x65, 0xb5, 0x2a,
	0x95, 0x2a, 0x2e, 0xb8, 0xa8, 0x7a, 0x0b, 0x14, 0x0a, 0x52, 0x41, 0x34, 0x25, 0xe5, 0xb2, 0xda,
	0xd8, 0x4b, 0x62, 0xc5, 0xd9, 0x8d, 0x76, 0xd7, 0xfc, 0x49, 0x7d, 0x86, 0xaa, 0x0f, 0xd1, 0x07,
	0xe8, 0x9b, 0x55, 0x7d, 0x82, 0xce, 0xce, 0xc6, 0x18, 0xa2, 0x0a, 0x25, 0xe2, 0x02, 0x94, 0x9d,
	0x9d, 0x9d, 0xf9, 0xe6, 0x9b, 0x6f, 0xc6, 0xd0, 0x49, 0x92, 0xdb, 0x2f, 0x43, 0x96, 0x65, 0x5b,
	0x13, 0x25, 0x8d, 0x0c, 0x9a, 0x78, 0xa6, 0x5f, 0xff, 0xd3, 0x4d, 0x9f, 0x69, 0xee, 0x6e, 0xa2,
	0x37, 0x00, 0x9f, 0xb8, 0xba, 0xe4, 0xea, 0x48, 0x5c, 0xc8, 0x00, 0xa0, 0x9a, 0x4e, 0xc2, 0xca,
	0xb3, 0xca, 0xa6, 0x1f, 0x2c, 0x43, 0x6d, 0x22, 0x95, 0x09, 0xab, 0x78, 0xaa, 0x07, 0x1d, 0x68,
	0x68, 0xc3, 0x4c, 0xae, 0x43, 0xcf, 0x9e, 0xa3, 0xef, 0x15, 0x58, 0x7e, 0x97, 0xdc, 0x7e, 0xcc,
	0xd3, 0x78, 0xb4, 0x27, 0x85, 0x08, 0x5e, 0x40, 0x63, 0xc8, 0x59, 0xc2, 0x15, 0x3d, 0x6f, 0x6d,
	0xaf, 0x6f, 0x15, 0x39, 0xb7, 0x4e, 0xed, 0xff, 0x43, 0xba, 0x0c, 0xfe, 0x05, 0x3f, 0x1e, 0x32,
	0x21, 0x78, 0x76, 0x94, 0x50, 0x68, 0xdf, 0x86, 0x1e, 0xb0, 0x31, 0xc7, 0x33, 0x85, 0x0e, 0xfe,
	0x83, 0x56, 0x9c, 0x2b, 0xf5, 0x99, 0x2b, 0x9d, 0x4a, 0x11, 0xd6, 0xc8, 0x88, 0xd0, 0x32, 0x26,
	0x06, 0x39, 0x1b, 0x58, 0xc7, 0x7a, 0x81, 0x29, 0xd7, 0x88, 0x3c, 0x09, 0x1b, 0x78, 0x6e, 0x47,
	0xbf, 0x2a, 0xb0, 0x82, 0x98, 0x76, 0xe2, 0xd1, 0xc2, 0xb0, 0x36, 0x01, 0x2c, 0x06, 0x47, 0x05,
	0xe1, 0x6a, 0x6d, 0xaf, 0x95, 0xae, 0xf7, 0x28, 0x42, 0x20, 0x8a, 0x67, 0x1c, 0x19, 0x3c, 0x63,
	0x83, 0xc7, 0x10, 0xaf, 0x42, 0x33, 0xd5, 0xbd, 0x49, 0xc2, 0x0c, 0x9f, 0xe2, 0x45, 0xb7, 0x44,
	0x5e, 0x89, 0x4c, 0xb2, 0xa4, 0xa7, 0x32, 0x02, 0xed, 0x5b, 0xe3, 0xa5, 0x7b, 0x67, 0xc3, 0x87,
	0x4b, 0x64, 0xc4, 0x24, 0xa9, 0x3e, 0x66, 0xa9, 0x30, 0xf8, 0x17, 0x36, 0x8b, 0xd7, 0xe3, 0xa9,
	0xe5, 0x58, 0x0f, 0x42, 0xdf, 0x3a, 0x46, 0x5f, 0xa1, 0x89, 0x15, 0x7f, 0x90, 0x83, 0x74, 0xee,
	0x52, 0x4b, 0xd6, 0x6c, 0x99, 0xed, 0x60, 0x0d, 0x96, 0xc9, 0xa9, 0x40, 0xef, 0x4a, 0x7a, 0x0e,
	0x8d, 0xab, 0x6b, 0x42, 0x54, 0x9b, 0x25, 0xe3, 0x9c, 0xa7, 0xd7, 0x29, 0xa1, 0x8d, 0x7e, 0x57,
	0xa0, 0xe5, 0x18, 0x7f, 0x12, 0x04, 0xa4, 0x4a, 0x60, 0xc3, 0x4e, 0xb0, 0x03, 0x94, 0xde, 0xb7,
	0xa0, 0x94, 0x94, 0xe3, 0x53, 0xa6, 0xf5, 0x95, 0x54, 0x09, 0x81, 0xf0, 0x83, 0x0d, 0xe8, 0xc4,
	0x52, 0x9b, 0x3d, 0xc5, 0x91, 0xd4, 0x2e, 0xde, 0x13, 0xb1, 0x1e, 0x89, 0x0a, 0xed, 0x5d, 0xde,
	0xcf, 0x6f, 0x88, 0x56, 0xcf, 0x06, 0x40, 0x9d, 0x8d, 0x27, 0x58, 0x91, 0x1e, 0xa2, 0xa6, 0x2d,
	0xaf, 0x4d, 0xab, 0xe9, 0xd8, 0x9e, 0x9a, 0xc5, 0x33, 0x64, 0x34, 0xdb, 0x93, 0xb9, 0x30, 0xc4,
	0x27, 0x49, 0x4a, 0x48, 0x93, 0xc6, 0x3c, 0x84, 0xa2, 0x11, 0xa4, 0x0b, 0x27, 0xfd, 0x16, 0x49,
	0xff, 0x00, 0x7c, 0xac, 0xf9, 0x84, 0xdc, 0xe6, 0xad, 0x18, 0xe3, 0xb8, 0xb8, 0x67, 0x37, 0x13,
	0xee, 0x46, 0x2a, 0xfa, 0xe1, 0x46, 0x08, 0xc9, 0x7b, 0x72, 0x2c, 0x2b, 0x8e, 0xa9, 0x2d, 0x35,
	0x59, 0x41, 0xe2, 0x3a, 0xb4, 0x9d, 0x11, 0x27, 0xc1, 0x70, 0xac, 0xb1, 0x56, 0xd4, 0xe4, 0xcc,
	0xc7, 0x7c, 0x2c, 0x89, 0x41, 0x9f, 0x06, 0xdf, 0x8d, 0x11, 0x71, 0x70, 0x91, 0x66, 0x3c, 0xd1,
	0x48, 0x9a, 0x87, 0x1a, 0xeb, 0x42, 0x1b, 0x61, 0xbe, 0x47, 0x1a, 0xba, 0x3c, 0xc6, 0x66, 0xcc,
	0x8b, 0xd3, 0xc5, 0xac, 0xce, 0x8c, 0xaa, 0x47, 0xa3, 0x9a, 0x41, 0x67, 0x97, 0x33, 0xd1, 0x43,
	0xdb, 0x62, 0x41, 0x31, 0x50, 0x6f, 0x46, 0x3a, 0x27, 0x0f, 0xa5, 0x83, 0x5d, 0x3d, 0x4f, 0xc5,
	0xce, 0x98, 0xba, 0x6a, 0x2b, 0xf6, 0xa2, 0x6f, 0x15, 0x97, 0xee, 0xc9, 0x35, 0x24, 0x5c, 0x8f,
	0xee, 0xf6, 0x14, 0x26, 0xea, 0x73, 0x54, 0xfd, 0x59, 0x8a, 0xb9, 0x1d, 0xb5, 0x2f, 0xa1, 0x6e,
	0xcb, 0xd4, 0xc8, 0xaa, 0x87, 0x41, 0xc3, 0x32, 0xe8, 0xc3, 0x6a, 0x23, 0x03, 0xab, 0xae, 0xf5,
	0x8b, 0x43, 0x9a, 0x1d, 0x9e, 0x57, 0xb0, 0xa4, 0x28, 0x80, 0x5d, 0xcd, 0x7f, 0xc9, 0x5a, 0x66,
	0x88, 0xf6, 0x69, 0x5a, 0x0f, 0x38, 0x4f, 0xfa, 0x2c, 0x1e, 0xcd, 0x9b, 0x70, 0x05, 0x96, 0xc6,
	0x5c, 0x6b, 0xdc, 0xbc, 0x6e, 0x61, 0x47, 0x09, 0x09, 0xa2, 0x9c, 0xc2, 0x79, 0x03, 0xbd, 0x76,
	0x43, 0x6d, 0x65, 0x4b, 0x9b, 0xc5, 0xad, 0xd9, 0x8d, 0xd2, 0xb9, 0x7b, 0xef, 0x36, 0xfa, 0x59,
	0x29, 0x38, 0x5a, 0x3c, 0x53, 0xd9, 0xaa, 0x6a, 0xb1, 0x8b, 0x27, 0xc5, 0x2a, 0xf1, 0x8a, 0xb5,
	0x6b, 0x59, 0xdc, 0x65, 0xf8, 0x55, 0x89, 0x5d, 0xfb, 0xdc, 0x1e, 0xa1, 0x5c, 0x48, 0xd1, 0x74,
	0xb5, 0xcc, 0x62, 0x6e, 0x3c, 0x8a, 0xf9, 0x86, 0x26, 0x7a, 0x1f, 0xa7, 0x4d, 0x2d, 0x02, 0xd7,
	0x32, 0xcc, 0x4c, 0x3c, 0xbc, 0xc3, 0x8b, 0x06, 0xc3, 0xfa, 0x59, 0xf9, 0x4d, 0xc4, 0x02, 0xec,
	0x2e, 0x3c, 0x2f, 0x77, 0x61, 0x29, 0x83, 0x3a, 0x4d, 0xd4, 0xdb, 0xe2, 0xdb, 0xb7, 0x68, 0xf6,
	0xdd, 0xea, 0xa1, 0x77, 0xfa, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xf8, 0x77, 0x6d,
	0x33, 0x08, 0x00, 0x00,
}
