// Code generated by protoc-gen-go.
// source: ddz_play.proto
// DO NOT EDIT!

package ddzproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from ddz_base.proto

// Ignoring public import of Poker from ddz_base.proto

// Ignoring public import of WeixinInfo from ddz_base.proto

// Ignoring public import of RoomTypeInfo from ddz_base.proto

// Ignoring public import of PlayerInfo from ddz_base.proto

// Ignoring public import of DeskGameInfo from ddz_base.proto

// Ignoring public import of EProtoId from ddz_base.proto

// Ignoring public import of ErrorCode from ddz_base.proto

// Ignoring public import of PokerColor from ddz_base.proto

// Ignoring public import of DdzPaiType from ddz_base.proto

// Ignoring public import of ActType from ddz_base.proto

// Ignoring public import of DDZGameStatus from ddz_base.proto

// Ignoring public import of PlayerGameStatus from ddz_base.proto

// Ignoring public import of DDZRoomType from ddz_base.proto

// Ignoring public import of DeskGameStatus from ddz_base.proto

// 开局（接收服务端消息）
type Game_Opening struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Opening) Reset()                    { *m = Game_Opening{} }
func (m *Game_Opening) String() string            { return proto.CompactTextString(m) }
func (*Game_Opening) ProtoMessage()               {}
func (*Game_Opening) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Game_Opening) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 发牌
type Game_DealCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerPokers     []*Poker     `protobuf:"bytes,2,rep,name=playerPokers" json:"playerPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DealCards) Reset()                    { *m = Game_DealCards{} }
func (m *Game_DealCards) String() string            { return proto.CompactTextString(m) }
func (*Game_DealCards) ProtoMessage()               {}
func (*Game_DealCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Game_DealCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DealCards) GetPlayerPokers() []*Poker {
	if m != nil {
		return m.PlayerPokers
	}
	return nil
}

// 明牌
type Game_ShowHandPokers struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ShowHandPokers) Reset()                    { *m = Game_ShowHandPokers{} }
func (m *Game_ShowHandPokers) String() string            { return proto.CompactTextString(m) }
func (*Game_ShowHandPokers) ProtoMessage()               {}
func (*Game_ShowHandPokers) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Game_ShowHandPokers) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ShowHandPokers) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 明牌ack
type Game_ShowHandPokersAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ShowHandPokersAck) Reset()                    { *m = Game_ShowHandPokersAck{} }
func (m *Game_ShowHandPokersAck) String() string            { return proto.CompactTextString(m) }
func (*Game_ShowHandPokersAck) ProtoMessage()               {}
func (*Game_ShowHandPokersAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *Game_ShowHandPokersAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ShowHandPokersAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 叫地主
type Game_JiaoDiZhu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Score            *int32       `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_JiaoDiZhu) Reset()                    { *m = Game_JiaoDiZhu{} }
func (m *Game_JiaoDiZhu) String() string            { return proto.CompactTextString(m) }
func (*Game_JiaoDiZhu) ProtoMessage()               {}
func (*Game_JiaoDiZhu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *Game_JiaoDiZhu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_JiaoDiZhu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_JiaoDiZhu) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 叫地主回复
type Game_JiaoDiZhuAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_JiaoDiZhuAck) Reset()                    { *m = Game_JiaoDiZhuAck{} }
func (m *Game_JiaoDiZhuAck) String() string            { return proto.CompactTextString(m) }
func (*Game_JiaoDiZhuAck) ProtoMessage()               {}
func (*Game_JiaoDiZhuAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *Game_JiaoDiZhuAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_JiaoDiZhuAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 抢地主
type Game_RobDiZhu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_RobDiZhu) Reset()                    { *m = Game_RobDiZhu{} }
func (m *Game_RobDiZhu) String() string            { return proto.CompactTextString(m) }
func (*Game_RobDiZhu) ProtoMessage()               {}
func (*Game_RobDiZhu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *Game_RobDiZhu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_RobDiZhu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_RobDiZhuAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_RobDiZhuAck) Reset()                    { *m = Game_RobDiZhuAck{} }
func (m *Game_RobDiZhuAck) String() string            { return proto.CompactTextString(m) }
func (*Game_RobDiZhuAck) ProtoMessage()               {}
func (*Game_RobDiZhuAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *Game_RobDiZhuAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_RobDiZhuAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 加倍
type Game_Double struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Double           *int32       `protobuf:"varint,3,opt,name=double" json:"double,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Double) Reset()                    { *m = Game_Double{} }
func (m *Game_Double) String() string            { return proto.CompactTextString(m) }
func (*Game_Double) ProtoMessage()               {}
func (*Game_Double) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *Game_Double) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Double) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Double) GetDouble() int32 {
	if m != nil && m.Double != nil {
		return *m.Double
	}
	return 0
}

type Game_DoubleAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Double           *int32       `protobuf:"varint,3,opt,name=double" json:"double,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DoubleAck) Reset()                    { *m = Game_DoubleAck{} }
func (m *Game_DoubleAck) String() string            { return proto.CompactTextString(m) }
func (*Game_DoubleAck) ProtoMessage()               {}
func (*Game_DoubleAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *Game_DoubleAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DoubleAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_DoubleAck) GetDouble() int32 {
	if m != nil && m.Double != nil {
		return *m.Double
	}
	return 0
}

// 叫地主结束，开始游戏 (广播)
type Game_StartPlay struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FootPokers       []*Poker     `protobuf:"bytes,2,rep,name=footPokers" json:"footPokers,omitempty"`
	FootRate         *int32       `protobuf:"varint,3,opt,name=footRate" json:"footRate,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_StartPlay) Reset()                    { *m = Game_StartPlay{} }
func (m *Game_StartPlay) String() string            { return proto.CompactTextString(m) }
func (*Game_StartPlay) ProtoMessage()               {}
func (*Game_StartPlay) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *Game_StartPlay) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_StartPlay) GetFootPokers() []*Poker {
	if m != nil {
		return m.FootPokers
	}
	return nil
}

func (m *Game_StartPlay) GetFootRate() int32 {
	if m != nil && m.FootRate != nil {
		return *m.FootRate
	}
	return 0
}

// 闷抓
type Game_MenuZhua struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_MenuZhua) Reset()                    { *m = Game_MenuZhua{} }
func (m *Game_MenuZhua) String() string            { return proto.CompactTextString(m) }
func (*Game_MenuZhua) ProtoMessage()               {}
func (*Game_MenuZhua) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *Game_MenuZhua) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_MenuZhua) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_MenuZhuaAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	HandPokers       []*Poker     `protobuf:"bytes,3,rep,name=handPokers" json:"handPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_MenuZhuaAck) Reset()                    { *m = Game_MenuZhuaAck{} }
func (m *Game_MenuZhuaAck) String() string            { return proto.CompactTextString(m) }
func (*Game_MenuZhuaAck) ProtoMessage()               {}
func (*Game_MenuZhuaAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *Game_MenuZhuaAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_MenuZhuaAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_MenuZhuaAck) GetHandPokers() []*Poker {
	if m != nil {
		return m.HandPokers
	}
	return nil
}

// 看牌
type Game_SeeCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SeeCards) Reset()                    { *m = Game_SeeCards{} }
func (m *Game_SeeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_SeeCards) ProtoMessage()               {}
func (*Game_SeeCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *Game_SeeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SeeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_SeeCardsAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	HandPokers       []*Poker     `protobuf:"bytes,3,rep,name=handPokers" json:"handPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SeeCardsAck) Reset()                    { *m = Game_SeeCardsAck{} }
func (m *Game_SeeCardsAck) String() string            { return proto.CompactTextString(m) }
func (*Game_SeeCardsAck) ProtoMessage()               {}
func (*Game_SeeCardsAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *Game_SeeCardsAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SeeCardsAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_SeeCardsAck) GetHandPokers() []*Poker {
	if m != nil {
		return m.HandPokers
	}
	return nil
}

// 拉/倒
type Game_Pull struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Act              *int32       `protobuf:"varint,3,opt,name=act" json:"act,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Pull) Reset()                    { *m = Game_Pull{} }
func (m *Game_Pull) String() string            { return proto.CompactTextString(m) }
func (*Game_Pull) ProtoMessage()               {}
func (*Game_Pull) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *Game_Pull) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Pull) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Pull) GetAct() int32 {
	if m != nil && m.Act != nil {
		return *m.Act
	}
	return 0
}

type Game_PullAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Act              *int32       `protobuf:"varint,3,opt,name=act" json:"act,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_PullAck) Reset()                    { *m = Game_PullAck{} }
func (m *Game_PullAck) String() string            { return proto.CompactTextString(m) }
func (*Game_PullAck) ProtoMessage()               {}
func (*Game_PullAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *Game_PullAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_PullAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_PullAck) GetAct() int32 {
	if m != nil && m.Act != nil {
		return *m.Act
	}
	return 0
}

// 出牌
type Game_OutCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	OutCards         []*Poker     `protobuf:"bytes,2,rep,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_OutCards) Reset()                    { *m = Game_OutCards{} }
func (m *Game_OutCards) String() string            { return proto.CompactTextString(m) }
func (*Game_OutCards) ProtoMessage()               {}
func (*Game_OutCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{17} }

func (m *Game_OutCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OutCards) GetOutCards() []*Poker {
	if m != nil {
		return m.OutCards
	}
	return nil
}

type Game_OutCardsAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	CardType         *DdzPaiType  `protobuf:"varint,3,opt,name=cardType,enum=ddzproto.DdzPaiType" json:"cardType,omitempty"`
	RemainPokers     *int32       `protobuf:"varint,4,opt,name=remainPokers" json:"remainPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_OutCardsAck) Reset()                    { *m = Game_OutCardsAck{} }
func (m *Game_OutCardsAck) String() string            { return proto.CompactTextString(m) }
func (*Game_OutCardsAck) ProtoMessage()               {}
func (*Game_OutCardsAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *Game_OutCardsAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OutCardsAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_OutCardsAck) GetCardType() DdzPaiType {
	if m != nil && m.CardType != nil {
		return *m.CardType
	}
	return DdzPaiType_ERRORCARD
}

func (m *Game_OutCardsAck) GetRemainPokers() int32 {
	if m != nil && m.RemainPokers != nil {
		return *m.RemainPokers
	}
	return 0
}

// 过牌
type Game_ActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGuo) Reset()                    { *m = Game_ActGuo{} }
func (m *Game_ActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGuo) ProtoMessage()               {}
func (*Game_ActGuo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

func (m *Game_ActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGuo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

//
type Game_ActGuoAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGuoAck) Reset()                    { *m = Game_ActGuoAck{} }
func (m *Game_ActGuoAck) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGuoAck) ProtoMessage()               {}
func (*Game_ActGuoAck) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20} }

func (m *Game_ActGuoAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGuoAck) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 轮到谁操作
type Game_OverTurn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Time             *int32       `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	ActType          *ActType     `protobuf:"varint,4,opt,name=actType,enum=ddzproto.ActType" json:"actType,omitempty"`
	CanDouble        *bool        `protobuf:"varint,5,opt,name=canDouble" json:"canDouble,omitempty"`
	PullOrPush       *int32       `protobuf:"varint,6,opt,name=pullOrPush" json:"pullOrPush,omitempty"`
	CanOutCards      *bool        `protobuf:"varint,7,opt,name=canOutCards" json:"canOutCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_OverTurn) Reset()                    { *m = Game_OverTurn{} }
func (m *Game_OverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_OverTurn) ProtoMessage()               {}
func (*Game_OverTurn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{21} }

func (m *Game_OverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OverTurn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_OverTurn) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Game_OverTurn) GetActType() ActType {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return ActType_T_NORMAL_ACT
}

func (m *Game_OverTurn) GetCanDouble() bool {
	if m != nil && m.CanDouble != nil {
		return *m.CanDouble
	}
	return false
}

func (m *Game_OverTurn) GetPullOrPush() int32 {
	if m != nil && m.PullOrPush != nil {
		return *m.PullOrPush
	}
	return 0
}

func (m *Game_OverTurn) GetCanOutCards() bool {
	if m != nil && m.CanOutCards != nil {
		return *m.CanOutCards
	}
	return false
}

// 游戏信息(广播)
type Game_SendGameInfo struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerInfo       []*PlayerInfo `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
	DeskGameInfo     *DeskGameInfo `protobuf:"bytes,3,opt,name=deskGameInfo" json:"deskGameInfo,omitempty"`
	SenderUserId     *uint32       `protobuf:"varint,4,opt,name=senderUserId" json:"senderUserId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Game_SendGameInfo) Reset()                    { *m = Game_SendGameInfo{} }
func (m *Game_SendGameInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_SendGameInfo) ProtoMessage()               {}
func (*Game_SendGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22} }

func (m *Game_SendGameInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendGameInfo) GetPlayerInfo() []*PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetDeskGameInfo() *DeskGameInfo {
	if m != nil {
		return m.DeskGameInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetSenderUserId() uint32 {
	if m != nil && m.SenderUserId != nil {
		return *m.SenderUserId
	}
	return 0
}

func init() {
	proto.RegisterType((*Game_Opening)(nil), "ddzproto.game_Opening")
	proto.RegisterType((*Game_DealCards)(nil), "ddzproto.game_DealCards")
	proto.RegisterType((*Game_ShowHandPokers)(nil), "ddzproto.game_ShowHandPokers")
	proto.RegisterType((*Game_ShowHandPokersAck)(nil), "ddzproto.game_ShowHandPokersAck")
	proto.RegisterType((*Game_JiaoDiZhu)(nil), "ddzproto.game_JiaoDiZhu")
	proto.RegisterType((*Game_JiaoDiZhuAck)(nil), "ddzproto.game_JiaoDiZhuAck")
	proto.RegisterType((*Game_RobDiZhu)(nil), "ddzproto.game_RobDiZhu")
	proto.RegisterType((*Game_RobDiZhuAck)(nil), "ddzproto.game_RobDiZhuAck")
	proto.RegisterType((*Game_Double)(nil), "ddzproto.game_Double")
	proto.RegisterType((*Game_DoubleAck)(nil), "ddzproto.game_DoubleAck")
	proto.RegisterType((*Game_StartPlay)(nil), "ddzproto.game_StartPlay")
	proto.RegisterType((*Game_MenuZhua)(nil), "ddzproto.game_MenuZhua")
	proto.RegisterType((*Game_MenuZhuaAck)(nil), "ddzproto.game_MenuZhuaAck")
	proto.RegisterType((*Game_SeeCards)(nil), "ddzproto.game_SeeCards")
	proto.RegisterType((*Game_SeeCardsAck)(nil), "ddzproto.game_SeeCardsAck")
	proto.RegisterType((*Game_Pull)(nil), "ddzproto.game_Pull")
	proto.RegisterType((*Game_PullAck)(nil), "ddzproto.game_PullAck")
	proto.RegisterType((*Game_OutCards)(nil), "ddzproto.game_OutCards")
	proto.RegisterType((*Game_OutCardsAck)(nil), "ddzproto.game_OutCardsAck")
	proto.RegisterType((*Game_ActGuo)(nil), "ddzproto.game_ActGuo")
	proto.RegisterType((*Game_ActGuoAck)(nil), "ddzproto.game_ActGuoAck")
	proto.RegisterType((*Game_OverTurn)(nil), "ddzproto.game_OverTurn")
	proto.RegisterType((*Game_SendGameInfo)(nil), "ddzproto.game_SendGameInfo")
}

var fileDescriptor3 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x26, 0xeb, 0xcf, 0xba, 0xd3, 0x1f, 0x56, 0x6f, 0x4c, 0x11, 0x57, 0x23, 0x08, 0xd4, 0x0b,
	0xd4, 0x8b, 0x4a, 0x3c, 0x40, 0xa1, 0xa2, 0xed, 0x04, 0x6a, 0xd4, 0x16, 0x10, 0x5c, 0x30, 0xb9,
	0xb1, 0xb7, 0x46, 0x6d, 0xed, 0xca, 0x49, 0x40, 0xdb, 0x0b, 0xf0, 0x2a, 0x3c, 0x00, 0x0f, 0x88,
	0xed, 0xd8, 0x5b, 0x2b, 0x36, 0xd4, 0x25, 0xe2, 0x26, 0x8a, 0x73, 0xce, 0xf9, 0xce, 0x77, 0xbe,
	0x73, 0x7c, 0x02, 0x0d, 0x42, 0xae, 0xcf, 0xd7, 0x4b, 0x7c, 0xd5, 0x5e, 0x0b, 0x1e, 0x73, 0x54,
	0x91, 0x67, 0xfd, 0xf6, 0x54, 0x5b, 0x66, 0x38, 0xa2, 0xa9, 0xc5, 0x7b, 0x0d, 0xb5, 0x4b, 0xbc,
	0xa2, 0xe7, 0xa3, 0x35, 0x65, 0x21, 0xbb, 0x44, 0x2f, 0xa0, 0x3c, 0xa7, 0x98, 0x50, 0xe1, 0x3a,
	0xa7, 0x4e, 0xab, 0xda, 0x79, 0xd2, 0xb6, 0xa1, 0x6d, 0x5f, 0x3d, 0x07, 0xda, 0xe8, 0x7d, 0x83,
	0x86, 0x0e, 0xeb, 0x51, 0xbc, 0x7c, 0x8b, 0x05, 0x89, 0x76, 0x0c, 0x94, 0x6e, 0x35, 0xc5, 0x8b,
	0x0a, 0x9f, 0x2f, 0xa8, 0x88, 0xdc, 0xbd, 0xd3, 0x82, 0x74, 0x7e, 0xbc, 0xe1, 0xac, 0xbe, 0x7b,
	0xef, 0xe1, 0x48, 0xe3, 0x4f, 0xe6, 0xfc, 0xc7, 0x00, 0x33, 0x92, 0x7a, 0xef, 0x9a, 0xa4, 0x01,
	0xe5, 0x24, 0xa2, 0x62, 0x48, 0x24, 0xbc, 0xd3, 0xaa, 0x7b, 0x23, 0x38, 0xb9, 0x03, 0xad, 0x1b,
	0x2c, 0xb2, 0x02, 0x7e, 0x32, 0xe5, 0x9f, 0x85, 0x98, 0xf7, 0xc2, 0xaf, 0xf3, 0x24, 0x23, 0x10,
	0xaa, 0x43, 0x29, 0x0a, 0xb8, 0xa0, 0x6e, 0x41, 0x1e, 0x4b, 0xde, 0x19, 0x34, 0xb7, 0x71, 0x73,
	0x70, 0x7c, 0x07, 0x75, 0x8d, 0x35, 0xe6, 0xb3, 0x3c, 0x14, 0xbd, 0x21, 0x1c, 0x6e, 0xe1, 0xe4,
	0xa0, 0x34, 0x85, 0x6a, 0x3a, 0x35, 0x3c, 0x99, 0x2d, 0x69, 0x56, 0xcd, 0xe4, 0x99, 0x68, 0x00,
	0x23, 0xda, 0x67, 0x3b, 0x8b, 0xfa, 0x63, 0x76, 0x7a, 0x7f, 0x01, 0x33, 0x03, 0x3c, 0x89, 0xb1,
	0x88, 0x7d, 0x39, 0xb5, 0xbb, 0x02, 0x3f, 0x07, 0xb8, 0xe0, 0x3c, 0xfe, 0xe7, 0x88, 0xa3, 0x43,
	0xa8, 0x28, 0xa7, 0x31, 0x8e, 0x6d, 0x3e, 0xdb, 0xb1, 0x0f, 0x94, 0x25, 0x52, 0x68, 0x9c, 0x55,
	0x66, 0x66, 0x3a, 0x66, 0x71, 0x72, 0x48, 0x22, 0x2b, 0x99, 0xdf, 0x5c, 0x18, 0x49, 0xf3, 0xce,
	0xcb, 0x6a, 0x79, 0x4f, 0x28, 0x7d, 0xd0, 0x2e, 0xb8, 0x8f, 0xb7, 0xc5, 0xf9, 0xdf, 0xbc, 0x47,
	0x70, 0xa0, 0xf3, 0xf9, 0xc9, 0x72, 0x99, 0x35, 0x51, 0x15, 0x0a, 0x38, 0x88, 0x4d, 0x03, 0xc7,
	0x66, 0x99, 0x2a, 0xc0, 0x1c, 0xe4, 0xb7, 0x30, 0xbf, 0x18, 0x71, 0x47, 0x49, 0xfc, 0x20, 0x71,
	0x9f, 0x41, 0x85, 0x9b, 0x90, 0xfb, 0x96, 0xec, 0x4f, 0xc7, 0x08, 0x6e, 0xb1, 0x73, 0x70, 0x7e,
	0x09, 0x95, 0x40, 0x42, 0x4c, 0xaf, 0xd6, 0xe9, 0x34, 0x37, 0x3a, 0xc7, 0xb7, 0x81, 0x3d, 0x72,
	0xed, 0xe3, 0x50, 0xd9, 0xd0, 0x31, 0xd4, 0x04, 0x5d, 0xe1, 0x90, 0x99, 0xd6, 0x14, 0x75, 0x91,
	0x3d, 0xb3, 0x18, 0xba, 0x41, 0xdc, 0x4f, 0x78, 0xd6, 0xf9, 0xe9, 0x9b, 0xfb, 0x9a, 0xa2, 0xe4,
	0xd8, 0x53, 0xbf, 0x1d, 0x2b, 0xfa, 0x77, 0x2a, 0xa6, 0x89, 0x60, 0x59, 0x55, 0xa9, 0x41, 0x31,
	0x0e, 0x57, 0xe6, 0x7e, 0x23, 0x0f, 0xf6, 0x65, 0x5f, 0xb5, 0x44, 0x45, 0x2d, 0x51, 0xf3, 0x16,
	0xa5, 0x9b, 0x1a, 0x50, 0x13, 0x0e, 0x02, 0xcc, 0xd2, 0x55, 0xe6, 0x96, 0xa4, 0x57, 0x05, 0x21,
	0x80, 0xb5, 0x1c, 0xa8, 0x91, 0xf0, 0x93, 0x68, 0xee, 0x96, 0x35, 0xd4, 0x11, 0x54, 0xa5, 0x9b,
	0xed, 0x9b, 0xbb, 0xaf, 0x1c, 0xbd, 0x5f, 0x8e, 0xf9, 0x7d, 0x4c, 0x28, 0x23, 0x7d, 0xf9, 0x32,
	0x64, 0x17, 0x3b, 0x8b, 0xd9, 0x92, 0x59, 0xf4, 0x8f, 0x59, 0x05, 0x99, 0x89, 0xd9, 0x68, 0xa1,
	0x7f, 0x63, 0x43, 0xaf, 0xa0, 0x46, 0x68, 0xb4, 0xb0, 0x09, 0x74, 0x71, 0xd5, 0xce, 0xc9, 0x46,
	0xbb, 0x37, 0xac, 0xaa, 0xe1, 0x91, 0xa4, 0x43, 0xc5, 0xc7, 0x54, 0x18, 0x55, 0x79, 0xfd, 0xcd,
	0xde, 0xa0, 0xe0, 0x3f, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x92, 0xf5, 0x66, 0xa7, 0x08,
	0x00, 0x00,
}
