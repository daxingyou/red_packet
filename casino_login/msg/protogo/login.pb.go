// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

/*
Package loginproto is a generated protocol buffer package.

It is generated from these files:
	login.proto

It has these top-level messages:
	ProtoHeader
	ServerInfo
	Game_QuickConn
	Game_AckQuickConn
*/
package loginproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtoHeader struct {
	Version          *string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Code             *int32  `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHeader) Reset()                    { *m = ProtoHeader{} }
func (m *ProtoHeader) String() string            { return proto.CompactTextString(m) }
func (*ProtoHeader) ProtoMessage()               {}
func (*ProtoHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoHeader) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ProtoHeader) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ProtoHeader) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ProtoHeader) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

// 服务器信息
type ServerInfo struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Status           *int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServerInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 接入服务器
type Game_QuickConn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChannelId        *string      `protobuf:"bytes,2,opt,name=channelId" json:"channelId,omitempty"`
	GameId           *int32       `protobuf:"varint,3,opt,name=gameId" json:"gameId,omitempty"`
	CurrVersion      *int32       `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	LanguageId       *int32       `protobuf:"varint,5,opt,name=languageId" json:"languageId,omitempty"`
	UserId           *uint32      `protobuf:"varint,6,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_QuickConn) Reset()                    { *m = Game_QuickConn{} }
func (m *Game_QuickConn) String() string            { return proto.CompactTextString(m) }
func (*Game_QuickConn) ProtoMessage()               {}
func (*Game_QuickConn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Game_QuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_QuickConn) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Game_QuickConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *Game_QuickConn) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *Game_QuickConn) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return 0
}

func (m *Game_QuickConn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_AckQuickConn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GameServer       *ServerInfo  `protobuf:"bytes,2,opt,name=gameServer" json:"gameServer,omitempty"`
	ReleaseTag       *int32       `protobuf:"varint,3,opt,name=releaseTag" json:"releaseTag,omitempty"`
	CurrVersion      *int32       `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	IsUpdate         *int32       `protobuf:"varint,5,opt,name=isUpdate" json:"isUpdate,omitempty"`
	DownloadUrl      *string      `protobuf:"bytes,6,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	VersionInfo      *string      `protobuf:"bytes,7,opt,name=versionInfo" json:"versionInfo,omitempty"`
	IsMaintain       *int32       `protobuf:"varint,8,opt,name=isMaintain" json:"isMaintain,omitempty"`
	MaintainMsg      *string      `protobuf:"bytes,9,opt,name=maintainMsg" json:"maintainMsg,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckQuickConn) Reset()                    { *m = Game_AckQuickConn{} }
func (m *Game_AckQuickConn) String() string            { return proto.CompactTextString(m) }
func (*Game_AckQuickConn) ProtoMessage()               {}
func (*Game_AckQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Game_AckQuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckQuickConn) GetGameServer() *ServerInfo {
	if m != nil {
		return m.GameServer
	}
	return nil
}

func (m *Game_AckQuickConn) GetReleaseTag() int32 {
	if m != nil && m.ReleaseTag != nil {
		return *m.ReleaseTag
	}
	return 0
}

func (m *Game_AckQuickConn) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *Game_AckQuickConn) GetIsUpdate() int32 {
	if m != nil && m.IsUpdate != nil {
		return *m.IsUpdate
	}
	return 0
}

func (m *Game_AckQuickConn) GetDownloadUrl() string {
	if m != nil && m.DownloadUrl != nil {
		return *m.DownloadUrl
	}
	return ""
}

func (m *Game_AckQuickConn) GetVersionInfo() string {
	if m != nil && m.VersionInfo != nil {
		return *m.VersionInfo
	}
	return ""
}

func (m *Game_AckQuickConn) GetIsMaintain() int32 {
	if m != nil && m.IsMaintain != nil {
		return *m.IsMaintain
	}
	return 0
}

func (m *Game_AckQuickConn) GetMaintainMsg() string {
	if m != nil && m.MaintainMsg != nil {
		return *m.MaintainMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*ProtoHeader)(nil), "loginproto.ProtoHeader")
	proto.RegisterType((*ServerInfo)(nil), "loginproto.ServerInfo")
	proto.RegisterType((*Game_QuickConn)(nil), "loginproto.game_QuickConn")
	proto.RegisterType((*Game_AckQuickConn)(nil), "loginproto.game_AckQuickConn")
}

var fileDescriptor0 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xb6, 0x69, 0x9b, 0x0b, 0x2d, 0x34, 0x48, 0xe0, 0x11, 0x65, 0x01, 0x31, 0x74,
	0xe8, 0xc0, 0x0e, 0x2c, 0xad, 0x50, 0x25, 0x10, 0x94, 0x15, 0x59, 0xc9, 0x91, 0x5a, 0x4d, 0xed,
	0xe8, 0xec, 0xc0, 0x93, 0xf0, 0xaa, 0xcc, 0xd8, 0xae, 0x2b, 0x3a, 0x31, 0x30, 0x44, 0xf2, 0x9d,
	0xfe, 0xfb, 0xfc, 0x9d, 0x03, 0x69, 0xad, 0x2a, 0x21, 0xa7, 0x0d, 0x29, 0xa3, 0x32, 0xf0, 0x85,
	0x3f, 0xe7, 0x0f, 0x90, 0x3e, 0xba, 0xc3, 0x1c, 0x79, 0x89, 0x94, 0x1d, 0xc3, 0xe0, 0x03, 0x49,
	0x0b, 0x25, 0x59, 0x74, 0x11, 0x5d, 0x25, 0xd9, 0x18, 0xfa, 0xad, 0x46, 0x5a, 0x94, 0xac, 0x63,
	0xeb, 0x51, 0x76, 0x04, 0xbd, 0x42, 0x95, 0xc8, 0xba, 0xb6, 0x8a, 0xb3, 0x11, 0xc4, 0x48, 0xa4,
	0x88, 0xf5, 0x5c, 0x38, 0xbf, 0x01, 0x78, 0x46, 0xb2, 0x80, 0x85, 0x7c, 0xb7, 0xd7, 0x40, 0x47,
	0x34, 0x01, 0x63, 0xc7, 0x1a, 0x45, 0xc6, 0x43, 0x62, 0x07, 0xd5, 0x86, 0x9b, 0x56, 0xef, 0x30,
	0xf9, 0x57, 0x04, 0xe3, 0x8a, 0x6f, 0xf1, 0xed, 0xa9, 0x15, 0xc5, 0xe6, 0x5e, 0x49, 0x99, 0x5d,
	0x42, 0x7f, 0xed, 0x95, 0x3c, 0x20, 0x9d, 0x9d, 0x4f, 0x7f, 0xa5, 0xa7, 0x87, 0xc6, 0x13, 0x48,
	0x8a, 0x35, 0x97, 0x12, 0xeb, 0xe0, 0xe8, 0x9d, 0x1d, 0xcd, 0xd6, 0x3b, 0xcb, 0x53, 0x48, 0x8b,
	0x96, 0xe8, 0x35, 0x2c, 0xd6, 0xf3, 0x4d, 0xab, 0x57, 0x73, 0x59, 0xb5, 0xbc, 0x72, 0xc1, 0x78,
	0xef, 0x15, 0x96, 0xed, 0xbb, 0x65, 0xf3, 0xef, 0x08, 0x26, 0xde, 0xeb, 0xb6, 0xd8, 0xfc, 0x43,
	0xed, 0x1a, 0xc0, 0x4d, 0xef, 0x9e, 0xc4, 0xbb, 0xa5, 0xb3, 0xb3, 0xc3, 0xf0, 0xc1, 0x63, 0x59,
	0x1d, 0xc2, 0x1a, 0xb9, 0xc6, 0x17, 0x5e, 0xfd, 0xe5, 0x7d, 0x02, 0x43, 0xa1, 0x57, 0x4d, 0xc9,
	0x0d, 0x06, 0x6b, 0x1b, 0x2b, 0xd5, 0xa7, 0xac, 0x15, 0x2f, 0x57, 0x54, 0x7b, 0xf5, 0xc4, 0x35,
	0xc3, 0x8f, 0x74, 0x78, 0x36, 0xf0, 0x4d, 0x7b, 0x89, 0xd0, 0x4b, 0x2e, 0xa4, 0xb1, 0x1f, 0x1b,
	0xee, 0xa7, 0xb7, 0xa1, 0xb3, 0xd4, 0x15, 0x4b, 0x5c, 0xf0, 0xae, 0x33, 0xef, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x24, 0x47, 0x65, 0x40, 0x33, 0x02, 0x00, 0x00,
}
