// Code generated by protoc-gen-go.
// source: skill.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from bbproto.proto

// Ignoring public import of FriendData from bbproto.proto

// Ignoring public import of FriendInfo from bbproto.proto

// Ignoring public import of FriendList from bbproto.proto

// Ignoring public import of ReqGetFriend from bbproto.proto

// Ignoring public import of RspGetFriend from bbproto.proto

// Ignoring public import of ReqFindFriend from bbproto.proto

// Ignoring public import of RspFindFriend from bbproto.proto

// Ignoring public import of ReqAddFriend from bbproto.proto

// Ignoring public import of RspAddFriend from bbproto.proto

// Ignoring public import of ReqDelFriend from bbproto.proto

// Ignoring public import of RspDelFriend from bbproto.proto

// Ignoring public import of ReqAcceptFriend from bbproto.proto

// Ignoring public import of RspAcceptFriend from bbproto.proto

// Ignoring public import of ReqGetPremiumHelper from bbproto.proto

// Ignoring public import of RspGetPremiumHelper from bbproto.proto

// Ignoring public import of GeneralProtoRsp from bbproto.proto

// Ignoring public import of EventDataParam from bbproto.proto

// Ignoring public import of EventData from bbproto.proto

// Ignoring public import of ReqUploadStat from bbproto.proto

// Ignoring public import of RspUploadStat from bbproto.proto

// Ignoring public import of ReqGetServerTime from bbproto.proto

// Ignoring public import of RspGetServerTime from bbproto.proto

// Ignoring public import of ReqAcceptStarBonus from bbproto.proto

// Ignoring public import of RspAcceptStarBonus from bbproto.proto

// Ignoring public import of ParamQuestPass from bbproto.proto

// Ignoring public import of RspQuestPass from bbproto.proto

// Ignoring public import of ParamQuestStar from bbproto.proto

// Ignoring public import of RspQuestStar from bbproto.proto

// Ignoring public import of ParamUserMoney from bbproto.proto

// Ignoring public import of RspUserMoney from bbproto.proto

// Ignoring public import of ParamUserStone from bbproto.proto

// Ignoring public import of RspUserStone from bbproto.proto

// Ignoring public import of ParamUserRank from bbproto.proto

// Ignoring public import of RspUserRank from bbproto.proto

// Ignoring public import of ParamUserUnit from bbproto.proto

// Ignoring public import of RspUserUnit from bbproto.proto

// Ignoring public import of ParamUserFriend from bbproto.proto

// Ignoring public import of RspUserFriend from bbproto.proto

// Ignoring public import of ReqStatSettingTool from bbproto.proto

// Ignoring public import of RspStatSettingTool from bbproto.proto

// Ignoring public import of ReqClientLog from bbproto.proto

// Ignoring public import of RspClientLog from bbproto.proto

// Ignoring public import of QuestStatus from bbproto.proto

// Ignoring public import of QuestLog from bbproto.proto

// Ignoring public import of NumRange from bbproto.proto

// Ignoring public import of ColorPercent from bbproto.proto

// Ignoring public import of StarConfig from bbproto.proto

// Ignoring public import of QuestFloorConfig from bbproto.proto

// Ignoring public import of QuestConfig from bbproto.proto

// Ignoring public import of EnemyInfo from bbproto.proto

// Ignoring public import of EnemyInfoConf from bbproto.proto

// Ignoring public import of DropUnit from bbproto.proto

// Ignoring public import of QuestGrid from bbproto.proto

// Ignoring public import of QuestFloor from bbproto.proto

// Ignoring public import of QuestDungeonData from bbproto.proto

// Ignoring public import of Position from bbproto.proto

// Ignoring public import of QuestBoost from bbproto.proto

// Ignoring public import of QuestInfo from bbproto.proto

// Ignoring public import of Period from bbproto.proto

// Ignoring public import of StageInfo from bbproto.proto

// Ignoring public import of CityInfo from bbproto.proto

// Ignoring public import of WorldMapInfo from bbproto.proto

// Ignoring public import of QuestStarObj from bbproto.proto

// Ignoring public import of CopyPassInfo from bbproto.proto

// Ignoring public import of ReqStartQuest from bbproto.proto

// Ignoring public import of RspStartQuest from bbproto.proto

// Ignoring public import of ReqClearQuest from bbproto.proto

// Ignoring public import of RspClearQuest from bbproto.proto

// Ignoring public import of ReqRetireQuest from bbproto.proto

// Ignoring public import of RspRetireQuest from bbproto.proto

// Ignoring public import of ReqResumeQuest from bbproto.proto

// Ignoring public import of RspResumeQuest from bbproto.proto

// Ignoring public import of ReqRedoQuest from bbproto.proto

// Ignoring public import of RspRedoQuest from bbproto.proto

// Ignoring public import of ReqGetQuestColors from bbproto.proto

// Ignoring public import of RspGetQuestColors from bbproto.proto

// Ignoring public import of ReqGetQuestInfo from bbproto.proto

// Ignoring public import of RspGetQuestInfo from bbproto.proto

// Ignoring public import of TrapInjuredValue from bbproto.proto

// Ignoring public import of TrapInfo from bbproto.proto

// Ignoring public import of StoreBattleData from bbproto.proto

// Ignoring public import of ClearQuestParam from bbproto.proto

// Ignoring public import of AttackInfoProto from bbproto.proto

// Ignoring public import of ActiveSkillData from bbproto.proto

// Ignoring public import of ReqShopBuy from bbproto.proto

// Ignoring public import of RspShopBuy from bbproto.proto

// Ignoring public import of ReqBuyMoney from bbproto.proto

// Ignoring public import of RspBuyMoney from bbproto.proto

// Ignoring public import of TaskConf from bbproto.proto

// Ignoring public import of TaskObj from bbproto.proto

// Ignoring public import of ReqTaskList from bbproto.proto

// Ignoring public import of AchievedTaskRspObj from bbproto.proto

// Ignoring public import of UnAchievedTaskRspObj from bbproto.proto

// Ignoring public import of TaskTypeRsp from bbproto.proto

// Ignoring public import of RspTaskList from bbproto.proto

// Ignoring public import of ReqAcceptTaskBonus from bbproto.proto

// Ignoring public import of RspAcceptTaskBonus from bbproto.proto

// Ignoring public import of UnitResource from bbproto.proto

// Ignoring public import of UserUnit from bbproto.proto

// Ignoring public import of UnitInfo from bbproto.proto

// Ignoring public import of UVPosition from bbproto.proto

// Ignoring public import of UnitGetWay from bbproto.proto

// Ignoring public import of PowerValue from bbproto.proto

// Ignoring public import of PowerTable from bbproto.proto

// Ignoring public import of PowerInfo from bbproto.proto

// Ignoring public import of PowerType from bbproto.proto

// Ignoring public import of HelperRequire from bbproto.proto

// Ignoring public import of EvolveInfo from bbproto.proto

// Ignoring public import of GachaConfig from bbproto.proto

// Ignoring public import of GachaUnitList from bbproto.proto

// Ignoring public import of GachaStarInfo from bbproto.proto

// Ignoring public import of ReqGetUnitResource from bbproto.proto

// Ignoring public import of RspGetUnitResource from bbproto.proto

// Ignoring public import of ReqGetUserUnit from bbproto.proto

// Ignoring public import of RspGetUserUnit from bbproto.proto

// Ignoring public import of ReqLevelUp from bbproto.proto

// Ignoring public import of RspLevelUp from bbproto.proto

// Ignoring public import of ReqEvolveStart from bbproto.proto

// Ignoring public import of RspEvolveStart from bbproto.proto

// Ignoring public import of ReqEvolveDone from bbproto.proto

// Ignoring public import of RspEvolveDone from bbproto.proto

// Ignoring public import of ReqEvolve from bbproto.proto

// Ignoring public import of RspEvolve from bbproto.proto

// Ignoring public import of ReqGacha from bbproto.proto

// Ignoring public import of RspGacha from bbproto.proto

// Ignoring public import of ReqSellUnit from bbproto.proto

// Ignoring public import of RspSellUnit from bbproto.proto

// Ignoring public import of ReqUnitFavorite from bbproto.proto

// Ignoring public import of RspUnitFavorite from bbproto.proto

// Ignoring public import of ReqUserGuideEvolveUnit from bbproto.proto

// Ignoring public import of RspUserGuideEvolveUnit from bbproto.proto

// Ignoring public import of ReqFragsFusion from bbproto.proto

// Ignoring public import of RspFragsFusion from bbproto.proto

// Ignoring public import of UserInfo from bbproto.proto

// Ignoring public import of UserInfoDetail from bbproto.proto

// Ignoring public import of MonthCard from bbproto.proto

// Ignoring public import of AccountInfo from bbproto.proto

// Ignoring public import of StageClearItem from bbproto.proto

// Ignoring public import of QuestClearInfo from bbproto.proto

// Ignoring public import of PartyItem from bbproto.proto

// Ignoring public import of UnitParty from bbproto.proto

// Ignoring public import of PartyInfo from bbproto.proto

// Ignoring public import of TerminalInfo from bbproto.proto

// Ignoring public import of GiftItem from bbproto.proto

// Ignoring public import of BonusInfo from bbproto.proto

// Ignoring public import of LoginInfo from bbproto.proto

// Ignoring public import of PresentInfo from bbproto.proto

// Ignoring public import of SessionInfo from bbproto.proto

// Ignoring public import of ReqGetUserInfo from bbproto.proto

// Ignoring public import of RspGetUserInfo from bbproto.proto

// Ignoring public import of NoticeItem from bbproto.proto

// Ignoring public import of NoticeInfo from bbproto.proto

// Ignoring public import of DataCount from bbproto.proto

// Ignoring public import of ReqAuthUser from bbproto.proto

// Ignoring public import of RspAuthUser from bbproto.proto

// Ignoring public import of ReqLoginPack from bbproto.proto

// Ignoring public import of RspLoginPack from bbproto.proto

// Ignoring public import of ReqRenameNick from bbproto.proto

// Ignoring public import of RspRenameNick from bbproto.proto

// Ignoring public import of ReqRestoreStamina from bbproto.proto

// Ignoring public import of RspRestoreStamina from bbproto.proto

// Ignoring public import of ReqChangeParty from bbproto.proto

// Ignoring public import of RspChangeParty from bbproto.proto

// Ignoring public import of ReqUnitMaxExpand from bbproto.proto

// Ignoring public import of RspUnitMaxExpand from bbproto.proto

// Ignoring public import of ReqFriendMaxExpand from bbproto.proto

// Ignoring public import of RspFriendMaxExpand from bbproto.proto

// Ignoring public import of ReqFinishUserGuide from bbproto.proto

// Ignoring public import of RspFinishUserGuide from bbproto.proto

// Ignoring public import of ReqAcceptBonus from bbproto.proto

// Ignoring public import of RspAcceptBonus from bbproto.proto

// Ignoring public import of ReqBonusList from bbproto.proto

// Ignoring public import of RspBonusList from bbproto.proto

// Ignoring public import of RspQuestStarList from bbproto.proto

// Ignoring public import of StatHelperCount from bbproto.proto

// Ignoring public import of VipConf from bbproto.proto

// Ignoring public import of UserTaskInfo from bbproto.proto

// Ignoring public import of UserCopyInfo from bbproto.proto

// Ignoring public import of DailyUserOptCnt from bbproto.proto

// Ignoring public import of TotalUserOptCnt from bbproto.proto

// Ignoring public import of RspUserGuideStep from bbproto.proto

// Ignoring public import of RspRefreshUser from bbproto.proto

// Ignoring public import of EUnitType from bbproto.proto

// Ignoring public import of EUnitRace from bbproto.proto

// Ignoring public import of EFriendState from bbproto.proto

// Ignoring public import of IntervalSettingType from bbproto.proto

// Ignoring public import of RecoveBattleStep from bbproto.proto

// Ignoring public import of EQuestState from bbproto.proto

// Ignoring public import of ETrapType from bbproto.proto

// Ignoring public import of EQuestGridType from bbproto.proto

// Ignoring public import of EGridStar from bbproto.proto

// Ignoring public import of ECopyType from bbproto.proto

// Ignoring public import of QuestBoostType from bbproto.proto

// Ignoring public import of QuestType from bbproto.proto

// Ignoring public import of ETaskType from bbproto.proto

// Ignoring public import of EAchieveType from bbproto.proto

// Ignoring public import of MaterialType from bbproto.proto

// Ignoring public import of EUnitGetType from bbproto.proto

// Ignoring public import of EGachaType from bbproto.proto

// Ignoring public import of EFavoriteAction from bbproto.proto

// Ignoring public import of EGiftContent from bbproto.proto

type EValueType int32

const (
	EValueType_FIXED       EValueType = 1
	EValueType_MULTIPLE    EValueType = 2
	EValueType_PERCENT     EValueType = 3
	EValueType_SECOND      EValueType = 4
	EValueType_ROUND       EValueType = 5
	EValueType_COLORTYPE   EValueType = 6
	EValueType_RANDOMCOLOR EValueType = 7
)

var EValueType_name = map[int32]string{
	1: "FIXED",
	2: "MULTIPLE",
	3: "PERCENT",
	4: "SECOND",
	5: "ROUND",
	6: "COLORTYPE",
	7: "RANDOMCOLOR",
}
var EValueType_value = map[string]int32{
	"FIXED":       1,
	"MULTIPLE":    2,
	"PERCENT":     3,
	"SECOND":      4,
	"ROUND":       5,
	"COLORTYPE":   6,
	"RANDOMCOLOR": 7,
}

func (x EValueType) Enum() *EValueType {
	p := new(EValueType)
	*p = x
	return p
}
func (x EValueType) String() string {
	return proto.EnumName(EValueType_name, int32(x))
}
func (x *EValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EValueType_value, data, "EValueType")
	if err != nil {
		return err
	}
	*x = EValueType(value)
	return nil
}
func (EValueType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type EAttackType int32

const (
	EAttackType_ATK_SINGLE EAttackType = 0
	EAttackType_ATK_ALL    EAttackType = 1
	EAttackType_RECOVER_HP EAttackType = 2
)

var EAttackType_name = map[int32]string{
	0: "ATK_SINGLE",
	1: "ATK_ALL",
	2: "RECOVER_HP",
}
var EAttackType_value = map[string]int32{
	"ATK_SINGLE": 0,
	"ATK_ALL":    1,
	"RECOVER_HP": 2,
}

func (x EAttackType) Enum() *EAttackType {
	p := new(EAttackType)
	*p = x
	return p
}
func (x EAttackType) String() string {
	return proto.EnumName(EAttackType_name, int32(x))
}
func (x *EAttackType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAttackType_value, data, "EAttackType")
	if err != nil {
		return err
	}
	*x = EAttackType(value)
	return nil
}
func (EAttackType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type EBoostType int32

const (
	EBoostType_BOOST_ATTACK EBoostType = 0
	EBoostType_BOOST_HP     EBoostType = 1
	EBoostType_BOOST_ALL    EBoostType = 2
)

var EBoostType_name = map[int32]string{
	0: "BOOST_ATTACK",
	1: "BOOST_HP",
	2: "BOOST_ALL",
}
var EBoostType_value = map[string]int32{
	"BOOST_ATTACK": 0,
	"BOOST_HP":     1,
	"BOOST_ALL":    2,
}

func (x EBoostType) Enum() *EBoostType {
	p := new(EBoostType)
	*p = x
	return p
}
func (x EBoostType) String() string {
	return proto.EnumName(EBoostType_name, int32(x))
}
func (x *EBoostType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBoostType_value, data, "EBoostType")
	if err != nil {
		return err
	}
	*x = EBoostType(value)
	return nil
}
func (EBoostType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

type EBoostTarget int32

const (
	EBoostTarget_UNIT_RACE EBoostTarget = 0
	EBoostTarget_UNIT_TYPE EBoostTarget = 1
)

var EBoostTarget_name = map[int32]string{
	0: "UNIT_RACE",
	1: "UNIT_TYPE",
}
var EBoostTarget_value = map[string]int32{
	"UNIT_RACE": 0,
	"UNIT_TYPE": 1,
}

func (x EBoostTarget) Enum() *EBoostTarget {
	p := new(EBoostTarget)
	*p = x
	return p
}
func (x EBoostTarget) String() string {
	return proto.EnumName(EBoostTarget_name, int32(x))
}
func (x *EBoostTarget) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EBoostTarget_value, data, "EBoostTarget")
	if err != nil {
		return err
	}
	*x = EBoostTarget(value)
	return nil
}
func (EBoostTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

type EPeriod int32

const (
	EPeriod_EP_RIGHT_NOW   EPeriod = 0
	EPeriod_EP_EVERY_ROUND EPeriod = 1
	EPeriod_EP_EVERY_STEP  EPeriod = 2
)

var EPeriod_name = map[int32]string{
	0: "EP_RIGHT_NOW",
	1: "EP_EVERY_ROUND",
	2: "EP_EVERY_STEP",
}
var EPeriod_value = map[string]int32{
	"EP_RIGHT_NOW":   0,
	"EP_EVERY_ROUND": 1,
	"EP_EVERY_STEP":  2,
}

func (x EPeriod) Enum() *EPeriod {
	p := new(EPeriod)
	*p = x
	return p
}
func (x EPeriod) String() string {
	return proto.EnumName(EPeriod_name, int32(x))
}
func (x *EPeriod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EPeriod_value, data, "EPeriod")
	if err != nil {
		return err
	}
	*x = EPeriod(value)
	return nil
}
func (EPeriod) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

// ==================Active Skills: 14 kinds=====================================================
type SkillBase struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description      *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	SkillCooling     *int32  `protobuf:"varint,4,opt,name=skillCooling" json:"skillCooling,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SkillBase) Reset()                    { *m = SkillBase{} }
func (m *SkillBase) String() string            { return proto.CompactTextString(m) }
func (*SkillBase) ProtoMessage()               {}
func (*SkillBase) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *SkillBase) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SkillBase) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SkillBase) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *SkillBase) GetSkillCooling() int32 {
	if m != nil && m.SkillCooling != nil {
		return *m.SkillCooling
	}
	return 0
}

type SkillSingleAttack struct {
	BaseInfo         *SkillBase   `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType  `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32     `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	UnitType         *EUnitType   `protobuf:"varint,4,opt,name=unitType,enum=bbproto.EUnitType" json:"unitType,omitempty"`
	AttackRange      *EAttackType `protobuf:"varint,5,opt,name=attackRange,enum=bbproto.EAttackType" json:"attackRange,omitempty"`
	IgnoreDefense    *bool        `protobuf:"varint,6,opt,name=ignoreDefense" json:"ignoreDefense,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SkillSingleAttack) Reset()                    { *m = SkillSingleAttack{} }
func (m *SkillSingleAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillSingleAttack) ProtoMessage()               {}
func (*SkillSingleAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *SkillSingleAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillSingleAttack) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillSingleAttack) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillSingleAttack) GetUnitType() EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return EUnitType_UALL
}

func (m *SkillSingleAttack) GetAttackRange() EAttackType {
	if m != nil && m.AttackRange != nil {
		return *m.AttackRange
	}
	return EAttackType_ATK_SINGLE
}

func (m *SkillSingleAttack) GetIgnoreDefense() bool {
	if m != nil && m.IgnoreDefense != nil {
		return *m.IgnoreDefense
	}
	return false
}

type SkillAttackRecoverHP struct {
	BaseInfo         *SkillBase   `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType  `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32     `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	UnitType         *EUnitType   `protobuf:"varint,4,opt,name=unitType,enum=bbproto.EUnitType" json:"unitType,omitempty"`
	AttackType       *EAttackType `protobuf:"varint,5,opt,name=attackType,enum=bbproto.EAttackType" json:"attackType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SkillAttackRecoverHP) Reset()                    { *m = SkillAttackRecoverHP{} }
func (m *SkillAttackRecoverHP) String() string            { return proto.CompactTextString(m) }
func (*SkillAttackRecoverHP) ProtoMessage()               {}
func (*SkillAttackRecoverHP) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *SkillAttackRecoverHP) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillAttackRecoverHP) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillAttackRecoverHP) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillAttackRecoverHP) GetUnitType() EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return EUnitType_UALL
}

func (m *SkillAttackRecoverHP) GetAttackType() EAttackType {
	if m != nil && m.AttackType != nil {
		return *m.AttackType
	}
	return EAttackType_ATK_SINGLE
}

type SkillSuicideAttack struct {
	BaseInfo         *SkillBase   `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType  `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32     `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	UnitType         *EUnitType   `protobuf:"varint,4,opt,name=unitType,enum=bbproto.EUnitType" json:"unitType,omitempty"`
	AttackType       *EAttackType `protobuf:"varint,5,opt,name=attackType,enum=bbproto.EAttackType" json:"attackType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SkillSuicideAttack) Reset()                    { *m = SkillSuicideAttack{} }
func (m *SkillSuicideAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillSuicideAttack) ProtoMessage()               {}
func (*SkillSuicideAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *SkillSuicideAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillSuicideAttack) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillSuicideAttack) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillSuicideAttack) GetUnitType() EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return EUnitType_UALL
}

func (m *SkillSuicideAttack) GetAttackType() EAttackType {
	if m != nil && m.AttackType != nil {
		return *m.AttackType
	}
	return EAttackType_ATK_SINGLE
}

type SkillTargetTypeAttack struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	TargetUnitType   *EUnitType  `protobuf:"varint,5,opt,name=targetUnitType,enum=bbproto.EUnitType" json:"targetUnitType,omitempty"`
	HurtUnitType     *EUnitType  `protobuf:"varint,6,opt,name=hurtUnitType,enum=bbproto.EUnitType" json:"hurtUnitType,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillTargetTypeAttack) Reset()                    { *m = SkillTargetTypeAttack{} }
func (m *SkillTargetTypeAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillTargetTypeAttack) ProtoMessage()               {}
func (*SkillTargetTypeAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *SkillTargetTypeAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillTargetTypeAttack) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillTargetTypeAttack) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillTargetTypeAttack) GetTargetUnitType() EUnitType {
	if m != nil && m.TargetUnitType != nil {
		return *m.TargetUnitType
	}
	return EUnitType_UALL
}

func (m *SkillTargetTypeAttack) GetHurtUnitType() EUnitType {
	if m != nil && m.HurtUnitType != nil {
		return *m.HurtUnitType
	}
	return EUnitType_UALL
}

type SkillStrengthenAttack struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	PeriodValue      *int32      `protobuf:"varint,4,opt,name=periodValue" json:"periodValue,omitempty"`
	TargetType       *EUnitType  `protobuf:"varint,5,opt,name=targetType,enum=bbproto.EUnitType" json:"targetType,omitempty"`
	TargetRace       *EUnitRace  `protobuf:"varint,6,opt,name=targetRace,enum=bbproto.EUnitRace" json:"targetRace,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillStrengthenAttack) Reset()                    { *m = SkillStrengthenAttack{} }
func (m *SkillStrengthenAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillStrengthenAttack) ProtoMessage()               {}
func (*SkillStrengthenAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *SkillStrengthenAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillStrengthenAttack) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillStrengthenAttack) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillStrengthenAttack) GetPeriodValue() int32 {
	if m != nil && m.PeriodValue != nil {
		return *m.PeriodValue
	}
	return 0
}

func (m *SkillStrengthenAttack) GetTargetType() EUnitType {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return EUnitType_UALL
}

func (m *SkillStrengthenAttack) GetTargetRace() EUnitRace {
	if m != nil && m.TargetRace != nil {
		return *m.TargetRace
	}
	return EUnitRace_ALL
}

type SkillKillHP struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillKillHP) Reset()                    { *m = SkillKillHP{} }
func (m *SkillKillHP) String() string            { return proto.CompactTextString(m) }
func (*SkillKillHP) ProtoMessage()               {}
func (*SkillKillHP) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *SkillKillHP) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillKillHP) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillKillHP) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SkillRecoverHP struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	Period           *EPeriod    `protobuf:"varint,4,opt,name=period,enum=bbproto.EPeriod" json:"period,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillRecoverHP) Reset()                    { *m = SkillRecoverHP{} }
func (m *SkillRecoverHP) String() string            { return proto.CompactTextString(m) }
func (*SkillRecoverHP) ProtoMessage()               {}
func (*SkillRecoverHP) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *SkillRecoverHP) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillRecoverHP) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillRecoverHP) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillRecoverHP) GetPeriod() EPeriod {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return EPeriod_EP_RIGHT_NOW
}

type SkillRecoverSP struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillRecoverSP) Reset()                    { *m = SkillRecoverSP{} }
func (m *SkillRecoverSP) String() string            { return proto.CompactTextString(m) }
func (*SkillRecoverSP) ProtoMessage()               {}
func (*SkillRecoverSP) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *SkillRecoverSP) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillRecoverSP) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillRecoverSP) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SkillReduceHurt struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	Period           *EPeriod    `protobuf:"varint,4,opt,name=period,enum=bbproto.EPeriod" json:"period,omitempty"`
	PeriodValue      *int32      `protobuf:"varint,5,opt,name=periodValue" json:"periodValue,omitempty"`
	UnitType         *EUnitType  `protobuf:"varint,6,opt,name=unitType,enum=bbproto.EUnitType" json:"unitType,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillReduceHurt) Reset()                    { *m = SkillReduceHurt{} }
func (m *SkillReduceHurt) String() string            { return proto.CompactTextString(m) }
func (*SkillReduceHurt) ProtoMessage()               {}
func (*SkillReduceHurt) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

func (m *SkillReduceHurt) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillReduceHurt) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillReduceHurt) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillReduceHurt) GetPeriod() EPeriod {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return EPeriod_EP_RIGHT_NOW
}

func (m *SkillReduceHurt) GetPeriodValue() int32 {
	if m != nil && m.PeriodValue != nil {
		return *m.PeriodValue
	}
	return 0
}

func (m *SkillReduceHurt) GetUnitType() EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return EUnitType_UALL
}

type SkillReduceDefence struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	Period           *int32      `protobuf:"varint,4,opt,name=period" json:"period,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillReduceDefence) Reset()                    { *m = SkillReduceDefence{} }
func (m *SkillReduceDefence) String() string            { return proto.CompactTextString(m) }
func (*SkillReduceDefence) ProtoMessage()               {}
func (*SkillReduceDefence) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *SkillReduceDefence) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillReduceDefence) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillReduceDefence) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillReduceDefence) GetPeriod() int32 {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return 0
}

type SkillDeferAttackRound struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillDeferAttackRound) Reset()                    { *m = SkillDeferAttackRound{} }
func (m *SkillDeferAttackRound) String() string            { return proto.CompactTextString(m) }
func (*SkillDeferAttackRound) ProtoMessage()               {}
func (*SkillDeferAttackRound) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *SkillDeferAttackRound) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillDeferAttackRound) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillDeferAttackRound) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SkillPoison struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	RoundValue       *int32      `protobuf:"varint,4,opt,name=roundValue" json:"roundValue,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillPoison) Reset()                    { *m = SkillPoison{} }
func (m *SkillPoison) String() string            { return proto.CompactTextString(m) }
func (*SkillPoison) ProtoMessage()               {}
func (*SkillPoison) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *SkillPoison) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillPoison) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillPoison) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillPoison) GetRoundValue() int32 {
	if m != nil && m.RoundValue != nil {
		return *m.RoundValue
	}
	return 0
}

type SkillDelayTime struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	Value            *float32    `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	PeriodValue      *int32      `protobuf:"varint,4,opt,name=periodValue" json:"periodValue,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillDelayTime) Reset()                    { *m = SkillDelayTime{} }
func (m *SkillDelayTime) String() string            { return proto.CompactTextString(m) }
func (*SkillDelayTime) ProtoMessage()               {}
func (*SkillDelayTime) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *SkillDelayTime) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillDelayTime) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillDelayTime) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SkillDelayTime) GetPeriodValue() int32 {
	if m != nil && m.PeriodValue != nil {
		return *m.PeriodValue
	}
	return 0
}

type SkillConvertUnitType struct {
	BaseInfo         *SkillBase  `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Type             *EValueType `protobuf:"varint,2,opt,name=type,enum=bbproto.EValueType" json:"type,omitempty"`
	UnitType1        *EUnitType  `protobuf:"varint,3,opt,name=unitType1,enum=bbproto.EUnitType" json:"unitType1,omitempty"`
	UnitType2        *EUnitType  `protobuf:"varint,4,opt,name=unitType2,enum=bbproto.EUnitType" json:"unitType2,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SkillConvertUnitType) Reset()                    { *m = SkillConvertUnitType{} }
func (m *SkillConvertUnitType) String() string            { return proto.CompactTextString(m) }
func (*SkillConvertUnitType) ProtoMessage()               {}
func (*SkillConvertUnitType) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

func (m *SkillConvertUnitType) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillConvertUnitType) GetType() EValueType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EValueType_FIXED
}

func (m *SkillConvertUnitType) GetUnitType1() EUnitType {
	if m != nil && m.UnitType1 != nil {
		return *m.UnitType1
	}
	return EUnitType_UALL
}

func (m *SkillConvertUnitType) GetUnitType2() EUnitType {
	if m != nil && m.UnitType2 != nil {
		return *m.UnitType2
	}
	return EUnitType_UALL
}

// ==================PassiveSkill Skills: 2 kinds=====================================================
//
type SkillDodgeTrap struct {
	BaseInfo         *SkillBase `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	TrapLevel        *int32     `protobuf:"varint,2,opt,name=trapLevel" json:"trapLevel,omitempty"`
	TrapType         *ETrapType `protobuf:"varint,3,opt,name=trapType,enum=bbproto.ETrapType" json:"trapType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SkillDodgeTrap) Reset()                    { *m = SkillDodgeTrap{} }
func (m *SkillDodgeTrap) String() string            { return proto.CompactTextString(m) }
func (*SkillDodgeTrap) ProtoMessage()               {}
func (*SkillDodgeTrap) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *SkillDodgeTrap) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillDodgeTrap) GetTrapLevel() int32 {
	if m != nil && m.TrapLevel != nil {
		return *m.TrapLevel
	}
	return 0
}

func (m *SkillDodgeTrap) GetTrapType() ETrapType {
	if m != nil && m.TrapType != nil {
		return *m.TrapType
	}
	return ETrapType_Move
}

type SkillAntiAttack struct {
	BaseInfo         *SkillBase `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	Probability      *float32   `protobuf:"fixed32,2,opt,name=probability" json:"probability,omitempty"`
	AttackSource     *EUnitType `protobuf:"varint,3,opt,name=attackSource,enum=bbproto.EUnitType" json:"attackSource,omitempty"`
	AntiAttack       *EUnitType `protobuf:"varint,4,opt,name=antiAttack,enum=bbproto.EUnitType" json:"antiAttack,omitempty"`
	AntiAtkRatio     *float32   `protobuf:"fixed32,5,opt,name=antiAtkRatio" json:"antiAtkRatio,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SkillAntiAttack) Reset()                    { *m = SkillAntiAttack{} }
func (m *SkillAntiAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillAntiAttack) ProtoMessage()               {}
func (*SkillAntiAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

func (m *SkillAntiAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillAntiAttack) GetProbability() float32 {
	if m != nil && m.Probability != nil {
		return *m.Probability
	}
	return 0
}

func (m *SkillAntiAttack) GetAttackSource() EUnitType {
	if m != nil && m.AttackSource != nil {
		return *m.AttackSource
	}
	return EUnitType_UALL
}

func (m *SkillAntiAttack) GetAntiAttack() EUnitType {
	if m != nil && m.AntiAttack != nil {
		return *m.AntiAttack
	}
	return EUnitType_UALL
}

func (m *SkillAntiAttack) GetAntiAtkRatio() float32 {
	if m != nil && m.AntiAtkRatio != nil {
		return *m.AntiAtkRatio
	}
	return 0
}

type NormalSkill struct {
	BaseInfo         *SkillBase   `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	AttackType       *EAttackType `protobuf:"varint,2,opt,name=attackType,enum=bbproto.EAttackType" json:"attackType,omitempty"`
	ActiveBlocks     []uint32     `protobuf:"varint,3,rep,name=activeBlocks" json:"activeBlocks,omitempty"`
	AttackValue      *float32     `protobuf:"fixed32,4,opt,name=attackValue" json:"attackValue,omitempty"`
	AttackUnitType   *EUnitType   `protobuf:"varint,5,opt,name=attackUnitType,enum=bbproto.EUnitType" json:"attackUnitType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NormalSkill) Reset()                    { *m = NormalSkill{} }
func (m *NormalSkill) String() string            { return proto.CompactTextString(m) }
func (*NormalSkill) ProtoMessage()               {}
func (*NormalSkill) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

func (m *NormalSkill) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *NormalSkill) GetAttackType() EAttackType {
	if m != nil && m.AttackType != nil {
		return *m.AttackType
	}
	return EAttackType_ATK_SINGLE
}

func (m *NormalSkill) GetActiveBlocks() []uint32 {
	if m != nil {
		return m.ActiveBlocks
	}
	return nil
}

func (m *NormalSkill) GetAttackValue() float32 {
	if m != nil && m.AttackValue != nil {
		return *m.AttackValue
	}
	return 0
}

func (m *NormalSkill) GetAttackUnitType() EUnitType {
	if m != nil && m.AttackUnitType != nil {
		return *m.AttackUnitType
	}
	return EUnitType_UALL
}

type SkillBoost struct {
	BaseInfo         *SkillBase    `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	BoostType        *EBoostType   `protobuf:"varint,2,opt,name=boostType,enum=bbproto.EBoostType" json:"boostType,omitempty"`
	BoostValue       *float32      `protobuf:"fixed32,3,opt,name=boostValue" json:"boostValue,omitempty"`
	TargetType       *EBoostTarget `protobuf:"varint,4,opt,name=targetType,enum=bbproto.EBoostTarget" json:"targetType,omitempty"`
	TargetValue      *int32        `protobuf:"varint,5,opt,name=targetValue" json:"targetValue,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SkillBoost) Reset()                    { *m = SkillBoost{} }
func (m *SkillBoost) String() string            { return proto.CompactTextString(m) }
func (*SkillBoost) ProtoMessage()               {}
func (*SkillBoost) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{18} }

func (m *SkillBoost) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillBoost) GetBoostType() EBoostType {
	if m != nil && m.BoostType != nil {
		return *m.BoostType
	}
	return EBoostType_BOOST_ATTACK
}

func (m *SkillBoost) GetBoostValue() float32 {
	if m != nil && m.BoostValue != nil {
		return *m.BoostValue
	}
	return 0
}

func (m *SkillBoost) GetTargetType() EBoostTarget {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return EBoostTarget_UNIT_RACE
}

func (m *SkillBoost) GetTargetValue() int32 {
	if m != nil && m.TargetValue != nil {
		return *m.TargetValue
	}
	return 0
}

type SkillExtraAttack struct {
	BaseInfo         *SkillBase `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	UnitType         *EUnitType `protobuf:"varint,2,opt,name=unitType,enum=bbproto.EUnitType" json:"unitType,omitempty"`
	AttackValue      *float32   `protobuf:"fixed32,3,opt,name=attackValue" json:"attackValue,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SkillExtraAttack) Reset()                    { *m = SkillExtraAttack{} }
func (m *SkillExtraAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillExtraAttack) ProtoMessage()               {}
func (*SkillExtraAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{19} }

func (m *SkillExtraAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillExtraAttack) GetUnitType() EUnitType {
	if m != nil && m.UnitType != nil {
		return *m.UnitType
	}
	return EUnitType_UALL
}

func (m *SkillExtraAttack) GetAttackValue() float32 {
	if m != nil && m.AttackValue != nil {
		return *m.AttackValue
	}
	return 0
}

// =================add by leiliang===========================================================
type SkillMultipleAttack struct {
	BaseInfo         *SkillBase `protobuf:"bytes,1,opt,name=baseInfo" json:"baseInfo,omitempty"`
	UnitTypeCount    *int32     `protobuf:"varint,2,opt,name=unitTypeCount" json:"unitTypeCount,omitempty"`
	Value            *float32   `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SkillMultipleAttack) Reset()                    { *m = SkillMultipleAttack{} }
func (m *SkillMultipleAttack) String() string            { return proto.CompactTextString(m) }
func (*SkillMultipleAttack) ProtoMessage()               {}
func (*SkillMultipleAttack) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{20} }

func (m *SkillMultipleAttack) GetBaseInfo() *SkillBase {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SkillMultipleAttack) GetUnitTypeCount() int32 {
	if m != nil && m.UnitTypeCount != nil {
		return *m.UnitTypeCount
	}
	return 0
}

func (m *SkillMultipleAttack) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type AllSkillConfig struct {
	Normal []*NormalSkill `protobuf:"bytes,1,rep,name=Normal" json:"Normal,omitempty"`
	// active skill
	SingleAttack     []*SkillSingleAttack     `protobuf:"bytes,2,rep,name=SingleAttack" json:"SingleAttack,omitempty"`
	AttackRecoverHP  []*SkillAttackRecoverHP  `protobuf:"bytes,3,rep,name=attackRecoverHP" json:"attackRecoverHP,omitempty"`
	SuicideAttack    []*SkillSuicideAttack    `protobuf:"bytes,4,rep,name=SuicideAttack" json:"SuicideAttack,omitempty"`
	TargetTypeAttack []*SkillTargetTypeAttack `protobuf:"bytes,5,rep,name=TargetTypeAttack" json:"TargetTypeAttack,omitempty"`
	StrengthenAttack []*SkillStrengthenAttack `protobuf:"bytes,6,rep,name=StrengthenAttack" json:"StrengthenAttack,omitempty"`
	KillHP           []*SkillKillHP           `protobuf:"bytes,7,rep,name=KillHP" json:"KillHP,omitempty"`
	RecoverHP        []*SkillRecoverHP        `protobuf:"bytes,8,rep,name=RecoverHP" json:"RecoverHP,omitempty"`
	RecoverSP        []*SkillRecoverSP        `protobuf:"bytes,9,rep,name=RecoverSP" json:"RecoverSP,omitempty"`
	ReduceHurt       []*SkillReduceHurt       `protobuf:"bytes,10,rep,name=ReduceHurt" json:"ReduceHurt,omitempty"`
	ReduceDefence    []*SkillReduceDefence    `protobuf:"bytes,11,rep,name=ReduceDefence" json:"ReduceDefence,omitempty"`
	DeferAttackRound []*SkillDeferAttackRound `protobuf:"bytes,12,rep,name=DeferAttackRound" json:"DeferAttackRound,omitempty"`
	Poison           []*SkillPoison           `protobuf:"bytes,13,rep,name=Poison" json:"Poison,omitempty"`
	DelayTime        []*SkillDelayTime        `protobuf:"bytes,14,rep,name=DelayTime" json:"DelayTime,omitempty"`
	ConvertUnitType  []*SkillConvertUnitType  `protobuf:"bytes,15,rep,name=ConvertUnitType" json:"ConvertUnitType,omitempty"`
	// passive skill
	DodgeTrap  []*SkillDodgeTrap  `protobuf:"bytes,16,rep,name=DodgeTrap" json:"DodgeTrap,omitempty"`
	AntiAttack []*SkillAntiAttack `protobuf:"bytes,17,rep,name=AntiAttack" json:"AntiAttack,omitempty"`
	// leader skill
	Boost            []*SkillBoost          `protobuf:"bytes,18,rep,name=Boost" json:"Boost,omitempty"`
	Extraattack      []*SkillExtraAttack    `protobuf:"bytes,19,rep,name=Extraattack" json:"Extraattack,omitempty"`
	MultipleAttack   []*SkillMultipleAttack `protobuf:"bytes,20,rep,name=MultipleAttack" json:"MultipleAttack,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AllSkillConfig) Reset()                    { *m = AllSkillConfig{} }
func (m *AllSkillConfig) String() string            { return proto.CompactTextString(m) }
func (*AllSkillConfig) ProtoMessage()               {}
func (*AllSkillConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{21} }

func (m *AllSkillConfig) GetNormal() []*NormalSkill {
	if m != nil {
		return m.Normal
	}
	return nil
}

func (m *AllSkillConfig) GetSingleAttack() []*SkillSingleAttack {
	if m != nil {
		return m.SingleAttack
	}
	return nil
}

func (m *AllSkillConfig) GetAttackRecoverHP() []*SkillAttackRecoverHP {
	if m != nil {
		return m.AttackRecoverHP
	}
	return nil
}

func (m *AllSkillConfig) GetSuicideAttack() []*SkillSuicideAttack {
	if m != nil {
		return m.SuicideAttack
	}
	return nil
}

func (m *AllSkillConfig) GetTargetTypeAttack() []*SkillTargetTypeAttack {
	if m != nil {
		return m.TargetTypeAttack
	}
	return nil
}

func (m *AllSkillConfig) GetStrengthenAttack() []*SkillStrengthenAttack {
	if m != nil {
		return m.StrengthenAttack
	}
	return nil
}

func (m *AllSkillConfig) GetKillHP() []*SkillKillHP {
	if m != nil {
		return m.KillHP
	}
	return nil
}

func (m *AllSkillConfig) GetRecoverHP() []*SkillRecoverHP {
	if m != nil {
		return m.RecoverHP
	}
	return nil
}

func (m *AllSkillConfig) GetRecoverSP() []*SkillRecoverSP {
	if m != nil {
		return m.RecoverSP
	}
	return nil
}

func (m *AllSkillConfig) GetReduceHurt() []*SkillReduceHurt {
	if m != nil {
		return m.ReduceHurt
	}
	return nil
}

func (m *AllSkillConfig) GetReduceDefence() []*SkillReduceDefence {
	if m != nil {
		return m.ReduceDefence
	}
	return nil
}

func (m *AllSkillConfig) GetDeferAttackRound() []*SkillDeferAttackRound {
	if m != nil {
		return m.DeferAttackRound
	}
	return nil
}

func (m *AllSkillConfig) GetPoison() []*SkillPoison {
	if m != nil {
		return m.Poison
	}
	return nil
}

func (m *AllSkillConfig) GetDelayTime() []*SkillDelayTime {
	if m != nil {
		return m.DelayTime
	}
	return nil
}

func (m *AllSkillConfig) GetConvertUnitType() []*SkillConvertUnitType {
	if m != nil {
		return m.ConvertUnitType
	}
	return nil
}

func (m *AllSkillConfig) GetDodgeTrap() []*SkillDodgeTrap {
	if m != nil {
		return m.DodgeTrap
	}
	return nil
}

func (m *AllSkillConfig) GetAntiAttack() []*SkillAntiAttack {
	if m != nil {
		return m.AntiAttack
	}
	return nil
}

func (m *AllSkillConfig) GetBoost() []*SkillBoost {
	if m != nil {
		return m.Boost
	}
	return nil
}

func (m *AllSkillConfig) GetExtraattack() []*SkillExtraAttack {
	if m != nil {
		return m.Extraattack
	}
	return nil
}

func (m *AllSkillConfig) GetMultipleAttack() []*SkillMultipleAttack {
	if m != nil {
		return m.MultipleAttack
	}
	return nil
}

func init() {
	proto.RegisterType((*SkillBase)(nil), "bbproto.SkillBase")
	proto.RegisterType((*SkillSingleAttack)(nil), "bbproto.SkillSingleAttack")
	proto.RegisterType((*SkillAttackRecoverHP)(nil), "bbproto.SkillAttackRecoverHP")
	proto.RegisterType((*SkillSuicideAttack)(nil), "bbproto.SkillSuicideAttack")
	proto.RegisterType((*SkillTargetTypeAttack)(nil), "bbproto.SkillTargetTypeAttack")
	proto.RegisterType((*SkillStrengthenAttack)(nil), "bbproto.SkillStrengthenAttack")
	proto.RegisterType((*SkillKillHP)(nil), "bbproto.SkillKillHP")
	proto.RegisterType((*SkillRecoverHP)(nil), "bbproto.SkillRecoverHP")
	proto.RegisterType((*SkillRecoverSP)(nil), "bbproto.SkillRecoverSP")
	proto.RegisterType((*SkillReduceHurt)(nil), "bbproto.SkillReduceHurt")
	proto.RegisterType((*SkillReduceDefence)(nil), "bbproto.SkillReduceDefence")
	proto.RegisterType((*SkillDeferAttackRound)(nil), "bbproto.SkillDeferAttackRound")
	proto.RegisterType((*SkillPoison)(nil), "bbproto.SkillPoison")
	proto.RegisterType((*SkillDelayTime)(nil), "bbproto.SkillDelayTime")
	proto.RegisterType((*SkillConvertUnitType)(nil), "bbproto.SkillConvertUnitType")
	proto.RegisterType((*SkillDodgeTrap)(nil), "bbproto.SkillDodgeTrap")
	proto.RegisterType((*SkillAntiAttack)(nil), "bbproto.SkillAntiAttack")
	proto.RegisterType((*NormalSkill)(nil), "bbproto.NormalSkill")
	proto.RegisterType((*SkillBoost)(nil), "bbproto.SkillBoost")
	proto.RegisterType((*SkillExtraAttack)(nil), "bbproto.SkillExtraAttack")
	proto.RegisterType((*SkillMultipleAttack)(nil), "bbproto.SkillMultipleAttack")
	proto.RegisterType((*AllSkillConfig)(nil), "bbproto.AllSkillConfig")
	proto.RegisterEnum("bbproto.EValueType", EValueType_name, EValueType_value)
	proto.RegisterEnum("bbproto.EAttackType", EAttackType_name, EAttackType_value)
	proto.RegisterEnum("bbproto.EBoostType", EBoostType_name, EBoostType_value)
	proto.RegisterEnum("bbproto.EBoostTarget", EBoostTarget_name, EBoostTarget_value)
	proto.RegisterEnum("bbproto.EPeriod", EPeriod_name, EPeriod_value)
}

var fileDescriptor4 = []byte{
	// 1250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x57, 0xdd, 0x6e, 0xe3, 0x54,
	0x10, 0x5e, 0xa7, 0x4d, 0xd2, 0x8c, 0x93, 0xd4, 0xeb, 0xb6, 0xc2, 0x2c, 0x3f, 0x5a, 0x2c, 0x58,
	0x75, 0xa3, 0x55, 0x05, 0x15, 0x42, 0x08, 0xae, 0xd2, 0xd4, 0x6c, 0xa3, 0xa6, 0x89, 0xe5, 0xb8,
	0x85, 0xbd, 0x8a, 0x9c, 0xe4, 0x34, 0xb5, 0xea, 0xda, 0x91, 0xe3, 0x54, 0x54, 0x82, 0x17, 0xe0,
	0x5d, 0xe0, 0x8a, 0x4b, 0xc4, 0x1d, 0x5c, 0x23, 0xc1, 0x03, 0x31, 0xe7, 0x1c, 0x3b, 0xfe, 0x59,
	0x27, 0xb4, 0x12, 0x61, 0xb9, 0xa8, 0x14, 0x1f, 0x7f, 0x73, 0xe6, 0x9b, 0xf1, 0xcc, 0x7c, 0x53,
	0x10, 0x67, 0xd7, 0xb6, 0xe3, 0x1c, 0x4c, 0x7d, 0x2f, 0xf0, 0xe4, 0xf2, 0x70, 0xc8, 0x7e, 0x3c,
	0xa9, 0x85, 0x3f, 0xf8, 0xb9, 0xaa, 0x43, 0xa5, 0x4f, 0x61, 0x47, 0xd6, 0x8c, 0xc8, 0x00, 0x05,
	0x7b, 0xac, 0x08, 0x4f, 0x85, 0xfd, 0xa2, 0x5c, 0x85, 0x4d, 0xd7, 0xba, 0x21, 0x4a, 0x01, 0x9f,
	0x2a, 0xf2, 0x0e, 0x88, 0x63, 0x32, 0x1b, 0xf9, 0xf6, 0x34, 0xb0, 0x3d, 0x57, 0xd9, 0x60, 0x87,
	0xbb, 0x50, 0x65, 0x2e, 0x5a, 0x9e, 0xe7, 0xd8, 0xee, 0x44, 0xd9, 0xa4, 0x86, 0xea, 0x9f, 0x02,
	0x3c, 0x66, 0x57, 0xf6, 0xf1, 0xcc, 0x21, 0xcd, 0x20, 0xb0, 0x46, 0xd7, 0xf2, 0x87, 0xb0, 0x35,
	0x44, 0x17, 0x6d, 0xf7, 0xd2, 0x63, 0x0e, 0xc4, 0x43, 0xf9, 0x20, 0x62, 0x12, 0x13, 0xf8, 0x00,
	0x36, 0x83, 0xbb, 0x29, 0x77, 0x5a, 0x3f, 0xdc, 0x59, 0x20, 0xb4, 0x0b, 0xcb, 0x99, 0x13, 0x13,
	0x5f, 0xc9, 0x35, 0x28, 0xde, 0xd2, 0x07, 0xc6, 0xa1, 0x40, 0xef, 0x9d, 0xbb, 0x76, 0x40, 0x5f,
	0x31, 0xff, 0xf5, 0xc4, 0xbd, 0xda, 0x79, 0xf8, 0x46, 0x7e, 0x0e, 0xa2, 0xc5, 0x78, 0x18, 0x96,
	0x3b, 0x21, 0x4a, 0x91, 0x01, 0x77, 0x63, 0x20, 0x27, 0xc9, 0xa0, 0x7b, 0x50, 0xb3, 0x27, 0xae,
	0xe7, 0x93, 0x63, 0x72, 0x49, 0xdc, 0x19, 0x51, 0x4a, 0x08, 0xde, 0x52, 0x7f, 0x15, 0x60, 0x97,
	0xf1, 0xe4, 0x50, 0x83, 0x8c, 0xbc, 0x5b, 0xe2, 0x9f, 0xe8, 0x6f, 0x38, 0xb0, 0x7d, 0x00, 0x6b,
	0xc1, 0x7d, 0x55, 0x5c, 0xea, 0x2f, 0x02, 0xc8, 0xfc, 0xb3, 0xcc, 0xed, 0x91, 0x3d, 0xfe, 0x7f,
	0x7c, 0x97, 0xfb, 0xd3, 0xff, 0x4d, 0x80, 0x3d, 0xc6, 0xc7, 0xb4, 0xfc, 0x09, 0x61, 0xd6, 0x6b,
	0x8e, 0xa0, 0x01, 0xf5, 0x80, 0xf9, 0x8a, 0xd8, 0x86, 0xfc, 0xf2, 0xe3, 0xa8, 0x5e, 0xcd, 0xfd,
	0x18, 0x59, 0x5a, 0x86, 0x54, 0xff, 0x8a, 0xe2, 0xe8, 0x07, 0x3e, 0x71, 0x27, 0xc1, 0x15, 0x71,
	0xd7, 0x1c, 0x07, 0xb6, 0xee, 0x94, 0xf8, 0xb6, 0x37, 0x66, 0x08, 0xde, 0xa4, 0xf2, 0x33, 0x80,
	0x60, 0x91, 0xc8, 0x15, 0x81, 0x2d, 0x70, 0x86, 0x35, 0x5a, 0x12, 0x16, 0x7d, 0xa3, 0x12, 0x10,
	0x19, 0xc7, 0x53, 0xfc, 0x5b, 0x5f, 0x53, 0xa8, 0x3f, 0x08, 0x50, 0x67, 0xf6, 0xeb, 0xef, 0xbf,
	0xa7, 0x50, 0xe2, 0x69, 0x0b, 0xcb, 0x57, 0x8a, 0x6d, 0x74, 0x76, 0xae, 0x5e, 0xa5, 0xb9, 0xf4,
	0xd7, 0x17, 0xf6, 0xef, 0x02, 0x6c, 0x87, 0xae, 0xc6, 0xf3, 0x11, 0x39, 0xc1, 0x52, 0x7b, 0x73,
	0x71, 0x67, 0x0b, 0xaa, 0xc8, 0x0a, 0x2a, 0xd9, 0xef, 0xcb, 0xab, 0xff, 0xbb, 0x70, 0x06, 0xf1,
	0x38, 0xd8, 0x84, 0x1d, 0x91, 0xb5, 0x85, 0x52, 0x4f, 0x85, 0x52, 0x54, 0xbd, 0xb0, 0xf5, 0xa8,
	0x5f, 0x3f, 0x9c, 0xe3, 0xde, 0xdc, 0x1d, 0xaf, 0xed, 0xbb, 0xdd, 0x85, 0x5d, 0xa1, 0x7b, 0xf6,
	0xcc, 0x73, 0xd7, 0x16, 0x27, 0xea, 0xb6, 0x4f, 0xe3, 0x48, 0x34, 0xb8, 0xfa, 0x7d, 0x58, 0x9c,
	0xc7, 0xc4, 0xb1, 0xee, 0x4c, 0xfb, 0x86, 0xfc, 0xa7, 0xf3, 0x45, 0xfd, 0x31, 0x92, 0xcb, 0x96,
	0xe7, 0x62, 0x6f, 0x2c, 0x26, 0xe3, 0xbf, 0xc7, 0xe2, 0x23, 0xa8, 0x44, 0x05, 0xf7, 0x09, 0x63,
	0x92, 0x3f, 0xc0, 0x12, 0xb0, 0xc3, 0xe5, 0x42, 0x84, 0xa5, 0x11, 0xa6, 0xcb, 0x1b, 0x4f, 0x88,
	0xe9, 0x5b, 0xd3, 0x7b, 0x12, 0x7d, 0x0c, 0x95, 0x00, 0xd1, 0x1d, 0x72, 0x4b, 0x1c, 0xc6, 0x96,
	0x75, 0x02, 0x3d, 0x62, 0x9d, 0xf0, 0x1a, 0x2f, 0x33, 0x7c, 0xa3, 0xfe, 0x1c, 0xb5, 0x74, 0xd3,
	0x0d, 0xec, 0x07, 0x29, 0x00, 0xcd, 0xb7, 0xef, 0x0d, 0xad, 0xa1, 0xed, 0xd8, 0xc1, 0x1d, 0x73,
	0x5a, 0xa0, 0x02, 0xc4, 0x85, 0xb4, 0xef, 0xcd, 0xfd, 0x11, 0x59, 0x91, 0x10, 0x9c, 0xe8, 0xd6,
	0xc2, 0xe5, 0x0a, 0x69, 0xc6, 0xe5, 0x8e, 0xe3, 0x70, 0x67, 0xc2, 0x9d, 0x8f, 0xb5, 0x79, 0x81,
	0xd2, 0x16, 0xbb, 0x9e, 0x7f, 0x63, 0x39, 0x8c, 0xd0, 0x3d, 0x29, 0xa7, 0x65, 0xbe, 0xb0, 0x62,
	0xfb, 0xa2, 0x5e, 0x47, 0x81, 0x7d, 0x4b, 0x8e, 0x1c, 0x6f, 0x74, 0x3d, 0xc3, 0x38, 0x36, 0xf6,
	0x6b, 0x34, 0x64, 0x6e, 0x1f, 0x97, 0x18, 0xd3, 0x67, 0x7e, 0xf8, 0xcf, 0xfa, 0xac, 0xfe, 0x24,
	0x00, 0x70, 0x3a, 0x9e, 0x37, 0xbb, 0xef, 0xec, 0x7c, 0x06, 0x95, 0x21, 0x85, 0x9b, 0xb9, 0x95,
	0x78, 0x14, 0xbd, 0xa2, 0xed, 0xc7, 0x70, 0x17, 0x89, 0xa6, 0x78, 0x9e, 0xd2, 0x57, 0x9e, 0xe5,
	0xbd, 0xac, 0x31, 0x03, 0xd0, 0xe0, 0x38, 0x34, 0x31, 0x4e, 0xd5, 0x19, 0x48, 0x8c, 0x88, 0xf6,
	0x2d, 0xd6, 0xd2, 0x83, 0xca, 0x23, 0x39, 0x88, 0x0b, 0x4b, 0xbf, 0x6e, 0x26, 0xa3, 0x7c, 0x5c,
	0x59, 0xb0, 0xc3, 0xee, 0x39, 0x9b, 0x3b, 0x81, 0x3d, 0x7d, 0xe0, 0xea, 0x8e, 0x7b, 0x73, 0xe4,
	0xb7, 0x85, 0xc3, 0x28, 0x08, 0xbb, 0x21, 0x33, 0x11, 0xff, 0x28, 0x43, 0xbd, 0xe9, 0x38, 0xd1,
	0x68, 0xb8, 0xb4, 0x27, 0x78, 0x7d, 0x89, 0x57, 0x14, 0x5e, 0xbe, 0x81, 0x97, 0xc7, 0x85, 0x91,
	0x2c, 0xb4, 0x8f, 0xa1, 0x9a, 0xfc, 0x7f, 0x02, 0x6f, 0xa7, 0xd8, 0x27, 0x69, 0x22, 0xa9, 0xff,
	0x38, 0x3e, 0x83, 0x6d, 0x2b, 0xbd, 0xab, 0xb3, 0x6a, 0x12, 0x0f, 0xdf, 0x4b, 0x1b, 0x65, 0x17,
	0xfa, 0x43, 0xa8, 0xa5, 0x56, 0x64, 0xfc, 0x7a, 0xd4, 0xea, 0x9d, 0x8c, 0xab, 0xd4, 0x16, 0xfd,
	0x39, 0x48, 0xd9, 0xbd, 0x14, 0x3f, 0x24, 0x35, 0x7b, 0x3f, 0x6d, 0xf6, 0xda, 0xf6, 0x8a, 0x96,
	0xd9, 0x4d, 0x10, 0xf5, 0x33, 0xc7, 0x32, 0x67, 0x5f, 0x2c, 0xf1, 0x6d, 0x4b, 0x29, 0x67, 0xf2,
	0x96, 0xdc, 0xc4, 0x1a, 0x50, 0x89, 0xe3, 0xdf, 0x62, 0xc0, 0xb7, 0xd2, 0xc0, 0x38, 0xf2, 0x18,
	0xdb, 0xd7, 0x95, 0xca, 0x0a, 0x2c, 0xae, 0x3a, 0x2f, 0x00, 0xe2, 0x65, 0x44, 0x01, 0x06, 0x56,
	0xb2, 0xe0, 0xc5, 0xb2, 0x82, 0x39, 0x4d, 0x49, 0xbe, 0x22, 0xe6, 0xe5, 0x34, 0xbd, 0x15, 0x60,
	0x66, 0xb2, 0x42, 0xad, 0x54, 0xf3, 0x32, 0x93, 0x23, 0xe7, 0x25, 0xae, 0xb8, 0x4a, 0x2d, 0x2f,
	0x33, 0xa1, 0x1a, 0x63, 0xb4, 0x0b, 0x71, 0x54, 0xea, 0x79, 0xd1, 0xc6, 0xda, 0x89, 0xb5, 0x94,
	0x11, 0x32, 0x65, 0x3b, 0xaf, 0x96, 0xb2, 0x6a, 0x47, 0x7d, 0x44, 0x8a, 0xa2, 0x48, 0xb9, 0x3e,
	0x16, 0x82, 0x83, 0x19, 0x8d, 0xb5, 0x40, 0x79, 0x9c, 0x97, 0xd1, 0x84, 0x56, 0xa8, 0x50, 0x64,
	0x43, 0x44, 0x91, 0x19, 0x70, 0x27, 0xd3, 0x91, 0x6c, 0xcc, 0x1d, 0x80, 0xc8, 0xe6, 0x07, 0x6f,
	0x03, 0x65, 0x87, 0x21, 0xdf, 0x4e, 0x23, 0x93, 0x03, 0xe6, 0x53, 0xa8, 0xa7, 0x5b, 0x5f, 0xd9,
	0x65, 0x26, 0xef, 0xa6, 0x4d, 0xd2, 0x98, 0x86, 0x0d, 0x90, 0x90, 0xe5, 0x0a, 0x14, 0xbf, 0x6a,
	0x7f, 0xa3, 0x1d, 0x4b, 0x82, 0x5c, 0x85, 0xad, 0xb3, 0xf3, 0x8e, 0xd9, 0xd6, 0x3b, 0x9a, 0x54,
	0x90, 0x45, 0x28, 0xeb, 0x9a, 0xd1, 0xd2, 0xba, 0xa6, 0xb4, 0x81, 0x13, 0xb3, 0xd4, 0xd7, 0x5a,
	0xbd, 0xee, 0xb1, 0xb4, 0x49, 0x2d, 0x8c, 0xde, 0x39, 0xfe, 0xa4, 0xc3, 0xa2, 0xd2, 0xea, 0x75,
	0x7a, 0x86, 0xf9, 0x4a, 0xd7, 0xa4, 0x92, 0xbc, 0x0d, 0xa2, 0xd1, 0xec, 0x1e, 0xf7, 0xce, 0xd8,
	0xa1, 0x54, 0x6e, 0x7c, 0x81, 0x01, 0x25, 0xc4, 0xa2, 0x8e, 0x19, 0x33, 0x4f, 0x07, 0xfd, 0x76,
	0xf7, 0x25, 0xba, 0x78, 0x44, 0x5d, 0xd0, 0xe7, 0x66, 0xa7, 0x83, 0xde, 0xf1, 0xa5, 0x81, 0x2e,
	0x2e, 0x34, 0x63, 0x70, 0xa2, 0x4b, 0x85, 0xc6, 0x97, 0x48, 0x33, 0x9e, 0xd9, 0x12, 0x54, 0x8f,
	0x7a, 0xbd, 0xbe, 0x39, 0x68, 0x9a, 0x66, 0xb3, 0x75, 0x8a, 0xc6, 0xc8, 0x96, 0x9f, 0x20, 0x5a,
	0xa0, 0x4c, 0xc2, 0xf7, 0x78, 0x59, 0xa1, 0xf1, 0x02, 0xaa, 0xa9, 0x99, 0x8d, 0xaf, 0xcf, 0xbb,
	0x6d, 0x73, 0x60, 0x34, 0x5b, 0xd4, 0x71, 0xf4, 0xc8, 0x78, 0x0b, 0x8d, 0x23, 0x28, 0x47, 0xbb,
	0x32, 0xfa, 0xd1, 0xf4, 0x81, 0xd1, 0x7e, 0x79, 0x62, 0x0e, 0xba, 0xbd, 0xaf, 0x11, 0x2b, 0x43,
	0x1d, 0x4f, 0x34, 0xe4, 0xf5, 0x6a, 0xc0, 0xe3, 0x16, 0x70, 0x8b, 0xa8, 0x2d, 0xce, 0xfa, 0xa6,
	0x86, 0x74, 0xf5, 0x47, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xad, 0x4f, 0xb0, 0x19, 0xbf, 0x11,
	0x00, 0x00,
}
