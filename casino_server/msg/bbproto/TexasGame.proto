package bbproto;

option optimize_for = LITE_RUNTIME;

message game_ACKConfirmConnect {
    optional int32 result = 1;
}

message game_LoginGame {
    optional bytes Letter = 1;
    optional int32 result = 2;
}

//客户端请求进入match
message game_EnterMatch {
    optional bytes MatchID = 1;
    optional int32 Tableid = 2;
    optional bytes PassWord = 3; //密码(朋友桌新增)
    optional bytes sCFUserName = 4; //该渠道特有昵称（现在专指360）
    optional uint32 userId = 5; //请求的userId
    optional int32  MatchIdInt = 6; //matchId int类型

}

message game_AckEnterMatch {
    optional int32 result = 1;
    optional bytes Matchid = 2;
    optional int32 Tableid = 3;
    optional int32 nReason = 4; //原因,1为进入游戏场数大于限制数,2为输入密码失败(朋友桌添加),3为不允许游客进入(朋友桌添加)
}

message game_AddHandCoin {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 seat = 3;
    optional int64 Coin = 4;
}

message game_CardInfo {
    optional int32 color = 1;
    optional int32 value = 2;
}
message game_InitCard {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 seat = 3;
    optional int32 NextUser = 4;
    repeated game_CardInfo HandCard = 5;
    repeated game_CardInfo PublicCard = 6;
    optional int64 MinRaise = 7;
    optional int32 ActionTime = 8;
    optional int32 DelayTime = 9;

    optional int32 currPlayCount    = 10; //朋友桌:当前第几局
    optional int32 totalPlayCount   = 11; //朋友桌:总共几局
}

message game_RaiseBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
    optional int64 Coin = 4;
}

message game_AckRaiseBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
    optional int64 Coin = 4;
    optional int64 HandCoin = 5;
    optional int32 NextSeat = 6;
    optional int64 pool = 7;
    optional int64 MinRaise = 8;
    optional int32 CanRaise = 9;
}

message game_FollowBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
}

message game_AckFollowBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
    optional int32 NextSeat = 4;
    optional int64 Coin = 5;
    optional int64 HandCoin = 6;
    optional int64 pool = 7;
    optional int64 MinRaise = 8;
    optional int32 CanRaise = 9;
}

message game_FoldBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
}

message game_AckFoldBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
    optional int32 NextSeat = 4;
    optional int64 Coin = 5;
    optional int64 HandCoin = 6;
    optional int64 pool = 7;
    optional int64 MinRaise = 8;
    optional int32 CanRaise = 9;
}

message game_CheckBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
}

message game_AckCheckBet {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
    optional int32 NextSeat = 4;
    optional int64 Coin = 5;
    optional int64 HandCoin = 6;
    optional int64 pool = 8;
    optional int64 MinRaise = 9;
    optional int32 CanRaise = 10;
}

message game_SendFlopCard {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional game_CardInfo card0 = 3;
    optional game_CardInfo card1 = 4;
    optional game_CardInfo card2 = 5;
}

message game_SendTurnCard {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional game_CardInfo card = 3;

}

message game_SendRiverCard {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional game_CardInfo card = 3;
}

message game_SendOverTurn {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int64 Pool = 3;
    repeated int64 SecondPool = 4;
    optional int32 NextSeat = 5;
    repeated int64 handcoin = 6;
    repeated int64 coin = 7;
    optional int64 MinRaise = 8;
}

message game_CardType {
    optional int32 card1 = 1;
    optional int32 card2 = 2;
    optional int32 card3 = 3;
    optional int32 card4 = 4;
    optional int32 card5 = 5;
    optional int32 cardtype = 6;
}

message game_WinCoin {
    optional int32 Seat = 1;
    optional int32 poolIndex = 2;
    optional int64 coin = 3;
    optional int32 card1 = 4;
    optional int32 card2 = 5;
    optional int32 card3 = 6;
    optional int32 card4 = 7;
    optional int32 card5 = 8;
    optional int32 cardtype = 9;
    optional bytes rolename = 10;
}

//牌局的结果
message game_TestResult {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    repeated game_CardInfo handcard = 3;
    repeated int32 bShowCard = 4;
    repeated int32 bCanShowCard = 5;
    repeated game_WinCoin WinCoinInfo = 6;
    repeated int64 HandCoin = 7;
    repeated game_WinCoin CoinInfo = 8;
    optional int32 rank = 9; //查看自己的排名
    optional int32 RankUserCount = 10; //参赛总人数
    optional bool CanRebuy = 11; //是否可以重购买
    optional int32 RebuyCount = 12; //重购的次数
}

message game_LeaveMatch {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 Seat = 3;
}

message game_UserInfo {
    optional bytes UserName = 1;
    optional int32 Seat = 2;
    optional bytes sCFUserName = 3; //该渠道特有昵称（现在专指360）
}

message game_SendUserInfo {
    repeated game_UserInfo UserInfo = 1;
    optional bytes Matchid = 2;
    optional int32 Tableid = 3;
}

message game_SendRank {
    optional bytes Matchid = 1; //比赛Id
    optional int32 Tableid = 2; //桌子号
    optional bytes UserName = 3; //角色名
    optional int32 Rank = 4; //比赛名次
    optional int32 eRewardType = 5; //单个奖金类型
    optional int64 nRewardCount = 6; //用户得到的实际奖金数
    optional int64 nTotalCoin = 7;
    optional int64 nNowelterCoin = 8; //没有被防沉迷时的奖金数
    optional int32 nNowelterType = 9; //防沉迷的类型,0为未知,1为奖金全发,2为奖金发一半,3为奖金为0
    optional int64 nScore = 10; //成绩
    optional bytes RewardName = 11; //奖金描述
    optional int32 nSeat = 12; //玩家座位号
}

message game_RestMatch {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
}

message game_ChangeTable {
    optional bytes Matchid = 1;
    optional int32 NewTableid = 2;
    optional int32 Tableid = 3;
    optional bytes UserName = 4;
    optional int32 Seat = 5;
    optional bytes sCFUserName = 6; //该渠道特有昵称（现在专指360）
}

enum RoomType {
    RT_FRIENDDESK = 1;      //朋友桌
    RT_TOUNAMENTMATCH = 2;  //锦标赛
}

//发送游戏信息
message game_SendGameInfo {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional int32 GameStatus = 3;
    optional int32 ChipSeat = 4;
    optional int64 pool = 5;
    optional int32 TablePlayer = 6;
    optional int32 BankSeat = 7;
    repeated game_CardInfo publiccard = 8;
    repeated game_CardInfo handcard = 9;
    repeated int64 HandCoin = 10;
    repeated int64 TurnCoin = 11;
    optional int32 ActionTime = 12; //当前操作时间
    repeated int32 bEnable = 13; //bEnable=0表示该用户当局不能操作,//bEnable=1表示可操作
    optional int64 MinRaise = 14;
    repeated int32 bFold = 15;
    repeated int32 bAllIn = 16;
    repeated int32 bBreak = 17;
    repeated int32 bLeave = 18;
    optional int32 DelayTime = 19; //当前延时时间
    optional int32 nRebuyCount = 20; //REBUY / ADDON次数
    optional int32 nAddonCount = 21;
    optional int32 bFinalAddon = 22; //是否已完成最终ADDON 1：已完成 0：未完成
    optional int32 nInitActionTime = 23; //初始操作时间
    optional int32 nInitDelayTime = 24; //初始延时时间
    repeated string nickName = 25; //昵称
    repeated int32 seatId = 26; //座位号
    optional int32 seat = 27; //我的座位号
    repeated int64 secondPool = 28; //池子
    optional int64 turnMax = 29; //返回最大的押注值
    optional int32 result = 30; //进入房间的结果

    //① 新增字段： repeated WeixinInfo  = 31;  //微信用户信息
    //② EnterMatch时、广播新进用户时，才需返回WeixinInfo；其它广播不需要。
    repeated WeixinInfo weixinInfos = 31;
    optional int32 ownerSeat = 32; //房主的seat
    optional int32 roomType = 33; //1=朋友桌， 2=锦标赛

    optional int64 preCoin = 34; //前注的大小
    optional int64 smallBlind = 35; //小盲的大小
    optional int64 bigBlind = 36; //大盲的大小
    optional int64 initRoomCoin = 37;   //房间的初始带入金额
    optional int32 currPlayCount    = 38; //朋友桌:当前第几局
    optional int32 totalPlayCount   = 39; //朋友桌:总共几局
    repeated int32 bReady           = 40; //是否已准备
    optional uint32 senderUserId     = 41; //发起请求的人

}

message game_ShowCard {
    optional bytes matchid = 1;
    optional int32 table = 2;
    optional int32 bShow = 3; //1表示亮牌，0表示盖牌
    optional int32 Seat = 4; //座位号
}

message game_AckShowCard {
    optional bytes matchid = 1;
    optional int32 table = 2;
    repeated game_CardInfo HandCard = 3;
}

message game_TestLogin {
    optional bytes UserName = 1;
}


message game_AckTestLogin {
    optional int32 result = 1;
    optional bytes Matchid = 2;
    optional int32 Tableid = 3;
}

message game_TestStartMatch {
    optional bytes Matchid = 1;
}

message game_ReportPlayer {
    optional int32 ip = 1;
    optional int32 port = 2;
    optional int32 type = 3; //0表示MATCHSERVER，1表示GAMESERVER
    optional int32 player = 4;
}

message game_UseDelayTime {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 Seat = 3;
    optional int32 delaytime = 4;
}

//离座消息
message game_LeaveSeat {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 Seat = 3;
    optional int32 bLeave = 4; //0表示回到座位，1表示离开座位
    optional int32 bWaitBling = 5; //是否等待大盲 0为不等待，1为等待（只有在现金桌才能用到）
}

message game_MatchChip {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int64 MaxChip = 3;
    optional int64 MinChip = 4;
    optional int64 AveChip = 5;
}

message game_SendUserRank {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 Rank = 3;
    optional int32 ResPlayer = 4;
    optional bytes username = 5;
}
//盲注变化消息
message game_BlindChange {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int64 SmallBlind = 3;
    optional int64 BigBlind = 4;
}
//下一级盲注信息
message game_NextBlindInfo {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int64 NextSmallBlind = 3;
    optional int64 NextBigBlind = 4;
    optional int32 NextBlindTime = 5;
    optional int32 RestTime = 6;
    optional int32 BlindClass = 7;
}

//提示休息多长时间
message game_SendRestTime {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 resttime = 3; //休息时长
    optional int32 type = 4; //type=0表示开赛前的准备时间，1表示中场休息的时间
    optional int32 restIndex = 5; //第几次休息 为最终ADDON准备
}

//离桌消息，当用户离开桌子时，给该桌用户发送该消息
message game_LeaveTable {
    enum Reason {
        quit_mormal = 0; //离开成功
        quit_friendKick = 1; //朋友桌强行踢出
        quit_adjustTable = 2; //调整桌子
        quit_friendTableDelete = 3; //朋友被删除
    }
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 seat = 3;
    optional bytes username = 4;
    optional Reason reason = 5;
}

//前注消息
message game_PreCoin {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    repeated int64 precoin = 3; //前注数
    repeated int64 coin = 4; //手中豆子数
    optional int64 pool = 5; //底池数
}

//盲注消息
message game_BlindCoin {
    optional bytes matchid = 1;
    optional int32 tableid = 2;
    optional int32 banker = 3; //庄位
    repeated int64 handcoin = 4; //每个人下的豆子数
    repeated int64 coin = 5; //每个人手中豆子数
    optional int64 pool = 6; //底池数
    optional int32 smallblindseat = 7; //小盲位
    optional int32 bigblindseat = 8; //大盲位
    optional int64 smallblind = 9; //小盲数
    optional int64 bigblind = 10; //大盲数
}

//防沉迷消息
message game_NowelterInfo {
    optional bytes reusername = 1; //用户名
    optional int32 nType = 2; //4为一小时8为二小时12为三小时14为三个半小时16为四小时18为四个半小时20为5个小时
    optional int32 nReason = 3; //1为未成年人，   2为注册信息不全，   -1为不是防沉迷用户
}

//现金桌的消息定义
//请求坐下
message DDReqSitdownSeat {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional int32 nField = 4; //区号：1:新手区、2：初级、3：中级、4：高级
    optional bytes sCFUserName = 5; //该渠道特有昵称（现在专指360）
}
message DDAckSitdownSeat {
    optional int32 Result = 1; //结果,1为成功,0为失败
    optional int32 reason = 2; //失败原因,0 进入成功,1 不成功,原因未知,2没有足够的金币带入筹码,3这个位置有人,4该matchID不存在
    optional bytes MatchID = 3; //桌子号
    optional bytes sUserName = 4; //角色名
    optional int32 nSeatID = 5; //座位号
    optional int32 bForceBuy = 6; //是否强制带入
    optional int64 nForceMinChip = 7; //强制带入的最小筹码
    optional bytes sCFUserName = 8; //该渠道特有昵称（现在专指360）
}
//带入
message DDReqBuyChip {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional int64 nBuyChip = 4; //要带入的筹码数
    optional int64 nCurChip = 5; //当前筹码数
}
message DDAckBuyChip {
    optional int32 Result = 1; //结果,1为成功,0为失败
    optional int32 reason = 2; //失败原因,0带入成功,1不成功,原因未知,2记录入库失败,3读用户金币失败4写用户金币失败,5没有足够的金币,6没有该用户,
    //7没有该比赛,8数据库操作失败,9不符合强制带入条件,10不在最大最小带入范围内,11游戏中不能带人
    optional bytes MatchID = 3; //桌子号
    optional bytes sUserName = 4; //角色名
    optional int64 nBuyChip = 5; //成功带入的金币
    optional int64 nTotalCoin = 6; //用户剩余总金币数
    optional int32 bWaitBling = 7; //是否等待大盲 0为不等待，1为等待（只有在现金桌才能用到）
}

//由于筹码不够，需要向客户端发送带入的消息
message DDNeetBugChip {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
}
//请求离座
message DDReqLeave {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional uint32 nUserIP = 4; //本地IP
}

message DDAckLeave {
    optional int32 Result = 1; //结果,1为成功,0为失败
    optional int32 reason = 2; //失败原因,0离开成功,1不成功原因未知,2更新金币失败,3记录入库失败
    optional bytes MatchID = 3; //桌子号
    optional bytes sUserName = 4; //角色名
    optional int64 nlCoin = 5; //金币数
}

//带入规则
message DDGameRule {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional int64 MaxChip = 4; //最大代入筹码
    optional int64 MinChip = 5; //最小代入筹码
}

//等待大盲
message DDWaitBigBling {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional int32 IsWait = 4; //是否等待大盲的标志 0为不等待，1为等待
}

//下一个大盲旁观
message DDNextBiglingWatch {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional int32 IsWatcher = 4; //下一个大盲旁观 0为不旁观，1为旁观
}

//聊天消息
message DDChatMsg {
    optional bytes MatchID = 1; //桌子号
    optional bytes sUserName = 2; //角色名
    optional int32 nSeatID = 3; //座位号
    optional bytes szChat = 4; //聊天内容
    optional int32 result = 5; //结果(由服务器端填写) 0,为失败（含有禁用字），1为成功
}

//建议消息
message DDProposalMsg {
    optional bytes sName = 1; //姓名
    optional bytes sUserName = 2; //角色名
    optional bytes sTelephone = 3; //联系方式
    optional bytes sContent = 4; //内容
}
//付费消息
message DDReqPayMsg {
    optional bytes sUserName = 1; //角色名
    optional bytes szTxt = 2; //内容
    optional bytes MatchID = 3; //比赛ID
    optional int32 nTableNo = 4; //桌子号
}
message DDAckPayMsg {
    enum Reason {
        HORN_NOTHING = 0; //成功
        HORN_NOCOIN = 1; //失败 金币不够
        HORN_GETCOIN = 2; //失败 不能获取金币信息
        HORN_UPDATECOIN = 3; //失败 更新金币失败
        HORN_ENABLETXT = 4; //失败 含有禁止文字
    }
    optional bytes sUserName = 1; //角色名
    optional bytes MatchID = 2; //比赛ID
    optional int32 nTableNo = 3; //桌子号
    optional bytes szTxt = 4; //内容
    optional int32 result = 5; //结果 0,为失败，1为成功
    optional Reason eReason = 6; //原因
    optional int32 nType = 7; //1为付费消息，2为系统消息，3礼物消息，4比赛通知
    optional int32 remaincount = 8; //小喇叭道具的剩余数量
    optional int64 reduceCoin = 9; //扣掉的金币数
    optional bytes sCFUserName = 10; //该渠道特有昵称（现在专指360）
}

//======================以下为朋友桌新增消息======================
// 请求兑换活跃度
//#define DDID_TEXASPOKER_EXCHANGEHYD (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000073)
message DDReqExChangeHYD {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sUserName = 2; //角色名
    optional int64 nExHYDCount = 3; //计划兑换的活跃度的数量
}

message DDAckExChangeHYD {
    optional int32 nResult = 1; //结果,0为失败,1为成功
    optional bytes MatchID = 2; //比赛ID
    optional bytes sUserName = 3; //角色名
    optional int64 nExHYDCount = 4; //已经兑换的活跃度的数量
    optional int64 nCurHYDCount = 5; //当前剩余的活跃度的数量
    optional int64 nExCoin = 6; //兑换到的金币数量
    optional int64 nTotalCoin = 7; //兑换之后的金币总量
}

// 通知活跃度变化
// #define DDID_TEXASPOKER_CHANGEHYD  (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000074)
message DDNtfChangeHYD {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sUserName = 2; //角色名
    optional int64 nHYDTotal = 3; //累加活跃度
    optional int64 nHYDCur = 4; //当前活跃度
}

// 请求赠送金币
// #define DDID_TEXASPOKER_PRESENTCOINS (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000075)
message DDReqPresentCoins {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sSender = 2; //赠送者
    optional bytes sRecver = 3; //接受者
    optional int64 nCoin = 4; //赠送的数量
    optional uint32 nIPSender = 5; //赠送者的IP
    optional uint32 nIPRecver = 6; //接受者的IP
}
message DDAckPresentCoins {
    enum Reason {
        PC_NOTHING = 0; //成功
        PC_UNKNOWN = 1; //未知
        PC_CONNECTDB = 2; //连接数据库失败
        PC_DB = 3; //数据库操作失败
        PC_SENDERINFO = 4; //不能获取发送者信息
        PC_SENDERCOIN = 5; //发送者没有足够的金币
        PC_CONFIG = 6; //缺少赠送规则配置
        PC_CLOSE = 7; //此功能未开启
        PC_AMOUNT = 8; //超过单次赠送数量
        PC_TIMESUSER = 9; //超过对单一用户的赠送次数
        PC_TIMESDAY = 10; //超过每天的最大赠送次数
        PC_SUBTRACT = 11; //扣除赠送者金币失败
        PC_ADD = 12; //增加接收者金币失败
    }
    optional bytes MatchID = 1; //比赛ID
    optional int32 nResult = 2; //结果,0为失败,1为成功
    optional bytes sSender = 3; //赠送者
    optional bytes sRecver = 4; //接受者
    optional int64 nPresentCoin = 5; //成功赠送的数量
    optional Reason eReason = 6; //原因
}

//私聊消息
//#define DDID_TEXASPOKER_PRIVATECHAT (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000076)
message DDReqPrivateChatMsg {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sSender = 2; //发送者
    optional bytes sRecver = 3; //接收者
    optional bytes szChat = 4; //聊天内容
}

message DDAckPrivateChatMsg {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sSender = 2; //发送者
    optional bytes sRecver = 3; //接收者
    optional bytes szChat = 4; //聊天内容
    optional int32 result = 5; //结果 0,为失败（含有禁用字），1为成功
}

//禁言和解除禁言
//#define DDID_TEXASPOKER_ABLEORUNABLECHAT (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000077)
message DDReqAbleOrUnableChat {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sCreater = 2; //房间创建者
    optional bytes sChatUser = 3; //聊天者
    optional int32 nAbleFlag = 4; //标志(0为不允许聊天,1为允许聊天)
}
message DDAckAbleOrUnableChat {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sCreater = 2; //房间创建者
    optional bytes sChatUser = 3; //聊天者
    optional int32 nAbleFlag = 4; //标志(0为不允许聊天,1为允许聊天)
    optional int32 nResult = 5; //结果(0为不成功,1为成功)
}

//踢人
//#define DDID_TEXASPOKER_KICK            (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000078)
message DDReqKick {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sCreater = 2; //房间创建者
    optional bytes sKickered = 3; //被踢者角色名
    optional int64 nClinetId = 4; //被踢者的CientId
}
message DDAckKick {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sCreater = 2; //房间创建者
    optional bytes sKickered = 3; //被踢者角色名
    optional int32 nResult = 4; //结果(0为不成功,1为成功)
}

//玩家列表,包含旁观者和游戏者 ,为了以后踢人用
//#define DDID_TEXASPOKER_USERLIST         (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000079)
message DDUserInfos {
    optional bytes sUserName = 1; //角色名
    optional int64 nClinetId = 2; //CientId
    optional int32 nIp = 3; //IP地址
    optional bytes sCFUserName = 4; //该渠道特有昵称（现在专指360）
}
message DDUserList {
    optional bytes MatchID = 1; //比赛ID
    repeated DDUserInfos userlist = 2; //用户列表
    optional bytes sCreater = 3; //房间创建者

}
//修改配置
//#define DDID_TEXASPOKER_MODIFYCONFIG      (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000080)
message DDModifyConfig {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sTableName = 2; //常规桌的名字
    optional int64 nCGZ_MaxChip = 3; //最大代入筹码
    optional int64 nCGZ_MinChip = 4; //最小代入筹码
}

//向玩家发送禁言者的列表
//#define DDID_TEXASPOKER_UNABLECHATLIST    (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000081)
message DDUnAbleChatList {
    optional bytes MatchID = 1; //比赛ID
    repeated bytes szUserName = 2; //被禁言者的姓名
}

//随机显示图片
//#define DDID_TEXASPOKER_SHOWPICTRUE       (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000082)
message DDShowPictrue {
    optional bytes MatchID = 1; //比赛ID
    optional int32 nTableId = 2; //桌子号
    optional bytes szUserName = 3; //用户名
}

//新玩家加入玩家列表
//#define DDID_TEXASPOKER_ADDUSER           (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000083)
message DDAddUserToList {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sUserName = 2; //角色名
    optional int64 nClinetId = 3; //CientId
    optional int32 nIp = 4; //IP地址
    optional bytes sCFUserName = 5; //该渠道特有昵称（现在专指360）
}

//玩家从列表中删除
//#define DDID_TEXASPOKER_DELETEUSER        (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000084)
message DDDeleteUserFromList {
    optional bytes MatchID = 1; //比赛ID
    optional bytes sUserName = 2; //角色名
}

//当否玩家进入牌桌坐下后，向本桌内的其他玩家广播此玩家的礼品状态 和 标志
//#define DDID_BROADCAST_PLAYER_GIFT_STATUS       (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000085)
message DDBroadCastPlayerGiftStatus {
    optional bytes roleName = 1; //被广播人
    optional bytes gift = 2; //礼品ID
    optional bytes nbcard = 3; //NB卡ID
}

//赠送礼品(客户端接到此消息后应仅作播放动画操作)
//#define DDID_GIVEGIFT       (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000086)
message DDGiveGift {
    optional bytes customerName = 1; //礼物买主
    optional bytes giftId = 2; //礼物ID
    repeated bytes receivers = 3; //接受者的角色名
}

//赠送道具(客户端接收到此消息后重新发送查询玩家礼品状态消息,这样贵族卡才能及时更新)
//#define DDID_GIVEITEM       (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000089)
message DDGiveItem {
    optional bytes customerName = 1; //道具买主
    optional bytes item = 2; //道具ID
    optional bytes receivers = 3; //接受者的角色名
}

//广播表情
//#define DDID_BROADCAST_FACE (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x00000087)
message DDBroadCastFace {
    optional bytes roleName = 1; //表情使用者
    optional uint32 faceType = 2; //表情类别
    optional bytes faceContent = 3; //表情内容
    optional uint32 seat = 4; //座位号
}

message DDReqRebuy {
    optional bytes roleName = 1; //REBUY的用户
    optional bytes matchid = 2; //REBUY的比赛ID
    optional int32 tableid = 3; //REBUY的桌号
    optional int32 type = 4; //REBUY类型,1表示REBUY，2表示ADDON, 3表示最终addon
    optional int32 moneyType = 5; //1:金币 2:门票
}

message DDAckRebuy {
    optional int32 result = 1; //REBUY结果,0表示成功，非0表示失败
    optional int32 reson = 2; //失败原因
    optional bytes roleName = 3; //REBUY的用户
    optional bytes matchid = 4; //比赛ID
    optional int32 tableid = 5; //桌号
    optional int32 nTicketCount = 6; //用户当前门票数
    optional int32 type = 7; //操作类型1表示REBUY，2表示ADDON, 3表示最终addon
    optional int32 nCount = 8; //剩余次数
    optional int64 nResultChip = 9; //rebuy成功后的筹码数
}

//广播比赛名次，奖励
//#define DDID_BROADCAST_MATCHRANK        (DDID_MSGBASE_TEXASPOKER_GAMEBASE + 0x0000008A)
message DDBroadCastMatchRank {
    optional bytes roleName = 1; //角色名
    optional bytes matchName = 2; //比赛名称
    optional int32 nRank = 3; //名次
    optional int32 nRewardType = 4; //奖品类型（1=入场卷;2=元宝;3=金币;4=积分;5=实物奖）
    optional int64 nRewardCount = 5; //奖品数量
    optional bytes RewardName = 6; //奖品描述
}

////

// 注册
// SHENJINGID_SVR_REG = 0x00001003;//注册消息
message REQSHENJINGReg {
    optional string UserName = 1; //用户名 5-19位 字母，数字，下划线组成
    optional string Pwd = 2; //密码	8-15位 下划线，特殊字符，不区分大小写
    optional int32 VerifyId = 3; //验证id，匹配使用
    optional string VerifyStr = 4; //验证码
    optional string SecureID = 5; //机器标识 目前使用 mac 地址
    optional int32 ComeFromID = 6; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 7; //渠道号
    optional int32 GameId = 8; //登录游戏ID
    optional string token = 9; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional bytes UserNameApl = 10; //苹果用户名
    optional int32 RoomAdapte = 11 [default = 0]; //分配房间。 0:默认房间;1:指定房间;2:指定房间...  modify at 20120104 根据不同的值获取相应的MatchRoomList
    optional int32 Sex = 12 [default = 0]; //性别联众帐号  1男,0女。角色帐号性别 1男  2女
}
message ACKSHENJINGReg {
    optional int32 AckResult = 1; //注册结果 "0"成功 "1"错误
    optional string ErrorStr = 2; //错误提示
    optional bytes cert = 3; //证书数据
    optional string RoleName = 4; //角色名
    repeated DDRoomInfo RoomList = 5; //用户能够进入的房间列表
    optional int32 LoginId = 6; //登录id
    repeated DDRoomInfo MatchRoomList = 7; //比赛房间列表
    optional bytes CertNoRole = 8; //不含角色的证书数据
}

// 登录SHENJING服务器
// SHENJINGID_SVR_LDDINCONN = 0x00001001;//登录消息
message REQSHENJINGConn {
    optional string UserName = 1; //用户名 18位以内 且以"SHENJING_ddz_x~"开头 x为来源ID
    optional string NickName = 2; //昵称 最大长度为8字符
    optional string Pwd = 3; //密码	8-15位
    optional int32 Sex = 4; //性别
    optional string SecureID = 5; //机器标识
    optional int32 ComeFromID = 6; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 7; //渠道号
    optional int32 GameId = 8; //游戏ID
    optional string token = 9; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional bytes UserNameApl = 10; //苹果用户名
    optional int32 VerifyId = 11; //OpenId时使用，数据库中记录了获取OpenId的联众帐号所存储的ticket的id值
    optional string Ticket = 12; //OpenId时使用，标识了此次登陆中的ticket
    optional int32 RoomAdapte = 13 [default = 0]; //分配房间。 0:默认房间;1:指定房间;2:指定房间... modify at 20120104 根据不同的值获取相应的MatchRoomList
    optional int32 LoginType = 14 [default = 0]; //登录类型。 0默认的类型;1为接入平台2.0。 modify at 20120217 酒吧骰子用
    optional int32 GroupID = 15; //请求特定的groupid下的Game Server    modify at 20120217 酒吧骰子用
}
message ACKSHENJINGConn {
    optional int32 AckResult = 1; //登录结果 "0"成功 "1"错误
    optional bytes cert = 2; //证书数据
    optional string UserName = 3; //用户名
    optional string RoleName = 4; //角色名
    optional string PassWord = 5; //用户密码
    optional int32 YuanBaoCnt = 6; //元宝数量
    optional int64 CoinCnt = 7; //金币数量
    repeated DDRoomInfo RoomList = 8; //用户能够进入的房间列表
    optional int32 LoginId = 9; //登录id
    repeated DDRoomInfo MatchRoomList = 10; //比赛房间列表
    optional bytes CertNoRole = 11; //不含角色的证书数据
    repeated SHENJINGRoomInfo SHENJINGRoomItems = 12; //下发的房间服务器列表
}

// 获取短证书  modify at 20120109  获取短证书
// SHENJINGID_SVR_SHORTCERT = 0x00001005;//登录消息
message REQSHENJINGShortCert {
    optional string UserName = 1; //用户名 18位以内 且以"SHENJING_ddz_x~"开头 x为来源ID
    optional string NickName = 2; //昵称 最大长度为8字符
    optional string Pwd = 3; //密码	8-15位
    optional int32 Sex = 4; //性别
    optional string SecureID = 5; //机器标识
    optional int32 ComeFromID = 6; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 7; //渠道号
    optional int32 GameId = 8; //游戏ID
    optional string token = 9; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional bytes UserNameApl = 10; //苹果用户名
    optional int32 VerifyId = 11; //OpenId时使用，数据库中记录了获取OpenId的联众帐号所存储的ticket的id值
    optional string Ticket = 12; //OpenId时使用，标识了此次登陆中的ticket
    optional int32 RoomAdapte = 13 [default = 0]; //分配房间。 0:默认房间;1:指定房间;2:指定房间... modify at 20120104 根据不同的值获取相应的MatchRoomList
}

message ACKSHENJINGShortCert {
    optional int32 AckResult = 1; //登录结果 "0"成功 "1"错误
    optional bytes ShortCert = 2; //证书数据
    optional string UserName = 3; //用户名
    repeated DDRoomInfo RoomList = 4; //用户能够进入的房间列表
    repeated DDRoomInfo MatchRoomList = 5; //比赛房间列表

}

// 登录SHENJING服务OpenId
// SHENJINGID_SVR_REG = 0x00001004;//OpenId登录消息
message REQSHENJINGOpenId {
    optional bytes UserName = 1; //第三方的用户名 | 新浪微游戏中此项为 用户的游戏名
    optional string Pwd = 2; //第三方的密码 | 新浪微游戏中此项为 用户的数字ID
    optional string type = 3; //第三方类别 人人网'renren' 新浪‘sina’
    optional string SecureID = 4; //机器标识
    optional int32 ComeFromID = 5; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 6; //渠道号
    optional int32 GameId = 7; //游戏ID
    optional int32 VerifyId = 8; //OpenId时使用，数据库中记录了获取OpenId的联众帐号所存储的ticket的id值
    optional string Ticket = 9; //OpenId时使用，标识了此次登陆中的ticket
    optional string token = 10; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional string Thirdkey = 11; // 第三方下发客户端的session key
    optional int32 RoomAdapte = 12 [default = 0]; //分配房间。 0:默认房间;1:指定房间;2:指定房间...   modify at 20120104 根据不同的值获取相应的MatchRoomList
    optional string ThirdAppId = 13; //申请的第三方的AppId，modify at 20120227  解决多个APPID 接入同一个OPENID的问题。
}
message ACKSHENJINGOpenId {
    optional int32 AckResult = 1; //登录结果 "0"成功 "1"错误
    optional bytes cert = 2; //证书数据
    optional bytes UserName = 3; //用户名
    optional bytes RoleName = 4; //角色名
    optional int32 YuanBaoCnt = 5; //元宝数量
    optional int64 CoinCnt = 6; //金币数量
    repeated DDRoomInfo RoomList = 7; //用户能够进入的房间列表
    repeated DDRoomInfo MatchRoomList = 8; //比赛房间列表
    optional int32 LoginId = 9; //登录id
    optional bytes CertNoRole = 10; //不含角色的证书数据
    repeated int32 AchvId = 11; //用户已有的成就
}

// 新浪微游戏操作
// SHENJINGID_SVR_SINAGAME = 0x00003007;//新浪微游戏相关
message REQSinaGame {
    optional string Thirdkey = 1; // 第三方下发客户端的session key
    repeated SinaApiInfo InfoList = 2; // 发送信息队列
    optional string SecureID = 4; // 机器标识
    optional int32 ComeFromID = 5; // 终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 6; // 渠道号
    optional int32 GameId = 7; // 游戏ID
}
message ACKSinaGame {
    optional int32 AckResult = 1; //消息结果 "0"成功 "1"错误
    repeated SinaApiRet RetList = 2; //操作结果
}

// 发送新浪微博
// SHENJINGID_SVR_WEIBO = 0x00003005;//发送微博
message REQWeiBo {
    optional bytes UserName = 1; //微博用户名
    optional string Pwd = 2; //微博的密码
    optional string type = 3; //第三方类别 ddz sina
    optional string SecureID = 4; //机器标识
    optional int32 ComeFromID = 5; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 6; //渠道号
    optional int32 GameId = 7; //游戏ID
    optional string token = 8; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional bytes wbMsg = 9; //微博内容
    optional bytes wbPic = 10; //微博图片
}
message ACKWeiBo {
    optional int32 AckResult = 1; //"0"成功 "1"失败
}

// 退出
// SHENJINGID_SVR_EXIT = 0x00001002;//退出消息
message REQSHENJINGExit {
    optional int32 LoginId = 1; //登录id
    optional int32 ExitType = 2; //退出信息类型 0正常退出  1异常退出
    optional string ExitMsg = 3; //退出信息
}

// 获取游戏版本信息
// SHENJINGID_SVR_VERSION = 0x00003001;//游戏版本消息
message REQSHENJINGGameVersion {
    optional int32 CurVersion = 1; //当前版本号
    optional int32 GameId = 2; //游戏ID
    optional int32 ComeFromID = 3; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ResolutionID = 4; //分辨率ID "800480" "854480" "1024768"
    optional string ChannelID = 5; //渠道ID "SHENJING"索兰 "apple"苹果
    optional string LanguageID = 6; //语言ID "cn"简体  "twhk"繁体
    optional int32 smallVersion = 7; //当前版本小号
    optional string ClientType = 8; //客户端类型  "sina"新浪专版
    optional string ScreenSize = 9; //屏幕真实尺寸  "800480" "854x480" "1024x768"
    optional int32 RoomAdapte = 10 [default = 0]; //分配房间。 0:默认房间;1:指定房间;2:指定房间...   modify at 20120104 根据不同的值获取相应的MatchRoomList
}
message ACKSHENJINGGameVersion {
    optional int32 AckResult = 1; //登录结果  "-1"错误 不为-1表示为当前最新版本号
    optional string PlayEnable = 2; //不更新是否能继续游戏 "y"可以游戏 "n"不可以，必须更新
    optional string DownloadUrl = 3; //下载地址
    optional string GameServerIp = 4; //游戏服务器地址
    optional string GameServerPort = 5; //游戏服务器端口
    optional string GameRankEnable = 6; //是否从SHENJING服务器读取 游戏等级设置 "y"是 "n"不是
    optional string GameRankDef = 7; //游戏等级设置 格式：最小金币数/最大金币数/最少盘数/是否开放_最小金币数/最大金币数/最少盘数/是否开放；多个等级以"_"分隔；是否开放 “0”不开放 “1”开放
    optional string IfPreserve = 8; //当前是否停服维护 "y"停服维护中 "n"没有维护
    optional string PreserveMsg = 9; //系统提示消息（维护状态中，为维护信息；其余时间为系统公告）
    repeated DDSHENJINGMatchInfo MatchInfoList = 10; //比赛列表信息
    optional int32 DownloadReasion = 11; //下载原因：0 版本不对;1屏幕不对
    optional int32 GameId = 12; //游戏ID               modify at 20120104 根据服务器配置获取相应的GameId下发给游戏客户端(暂时是德州扑克用)
    optional int32 gameSort = 13; //游戏ID对应的排序规则。0无排序。其余数字为游戏自定义排序规则  modify at 20120104 根据服务器配置获取Sort下发给客户端 (暂时是德州扑克用)
    repeated DDRoomInfo MatchRoomList = 14; //比赛房间列表        modify at 20120104 加入了MatchRoomList(主要是德州扑克用)
    repeated SHENJINGJSSInfo JssList = 15; // jss服务器，小商城的代理服务器。 modify at 20120321
    optional string IfSearch = 16; //是否显示搜索（斗地主用）"y"显示 "n"不显示。 modify at 20120413
    repeated DDBulletinInfo BulletinList = 17; //显示公告
}

// 获取验证码
// SHENJINGID_SVR_VERIFY = 0x00003003;//获取验证码信息
message REQSHENJINGNewVerify {
    optional string SecureID = 1; //机器标识 目前使用 mac 地址
    optional int32 ComeFromID = 2; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 3; //渠道号
    optional int32 GameId = 4; //登录游戏ID
}
message ACKSHENJINGNewVerify {
    optional int32 AckResult = 1; //注册结果 "0"成功 "1"错误 "2"不需要验证码
    optional string ErrorStr = 2; //错误提示
    optional bytes Verify = 3; //认证码流
    optional int32 VerifyId = 4; //验证id，匹配使用
}

// 找回密码功能
// SHENJINGID_SVR_FINDPWD = 0x00003002;//找回密码功能
// 新设置的密码未设置，表示只发送密码而不重置
// 新设置的密码不未空时，表示需要用户点击邮箱中的链接才能重置成功，且更新用户状态为已激活
message REQSHENJINGFindPwd {
    optional string Email = 1; //用户注册时填写的邮箱
    optional string NewPwd = 2; //新设置的密码
}
message ACKSHENJINGFindPwd {
    optional int32 AckResult = 1; //"0"已发邮件 "1"错误
}

// SHENJING心跳
// SHENJINGID_SVR_HEART = 0x00003006;//SHENJING的心跳
// REQ只有消息头，没有消息体
message ACKSHENJINGHeart {
    optional string ServTime = 1; //服务器当前时间 格式 "yyyy-MM-dd HH:mm:ss" 由于服务器时间可能与本地时间不符，所以只做成功响应。如果消息解析发生错误，则返回"-1"
}

//***************************************************************//

//相关的结构
//新浪微游戏结构
message SinaApiInfo {
    optional int32 ApiType = 1; // 类型  发送成就‘1’ 发送金币排行‘2’ 发送比赛排行‘3’
    optional string RetValue = 2; // 发送的值
    optional string UserId = 3; // 用户数字id
}
//新浪微游戏结果返回结构
message SinaApiRet {
    optional int32 RetResult = 1; // 成功"0"  错误"1"
    optional int32 ApiType = 2; // 类型 发送成就‘1’ 发送金币排行‘2’ 发送比赛排行‘3’
    optional string RetValue = 3; // 值 成功时表示传递过来的值，失败时表示错误代码及原因
}

//游戏房间结构
message DDRoomInfo {
    optional string RoomId = 1; //房间id
    optional string RoomRank = 2; //房间等级 1新手 2高手 3至尊
    optional string RoomIp = 3; //房间ip
    optional string RoomPort = 4; //房间port
    optional string RoomStatus = 5; //0开启 1关闭
    optional string RoomMinGold = 6; //最少金币
    optional string RoomMaxGold = 7; //最大金币
    optional string RoomMinPlay = 8; //最少局数
    optional string RoomType = 9; //房间类型  0普通，1比赛
    optional string ServerType = 10; //服务器类型 0无  7新浪专服
    optional string Description = 11; //房间描述,包括准入条件等内容
    optional string RoomName = 12; //房间名称
}

//比赛信息结构
message DDSHENJINGMatchInfo {
    optional int32 MatchID = 1; //比赛ID ID
    optional string MatchName = 2; //比赛名称 NAME
    //以下参数在斗地主比赛中应用
    optional string AwardName = 3; //奖品名称
    optional int32 AwardSum = 4; //奖品数量
    optional string MatchTerm = 5; //报名条件 Condition
    optional int32 HumanLimit = 6; //人数限制 PlayerMin
    optional int32 MatchHumanSum = 7; //比赛人数
    optional int32 MatchType = 8; //比赛类型 0-免费 1-火爆 2-全新
    optional int32 MatchInterval = 9; //比赛时间间隔 区分定时和非定时
    optional string MatchPrize = 10; //奖项设置  Prize
    optional string MatchProcess = 11; //赛制流程 Detail
    optional string MatchDate = 12; //开赛时间说明
    optional string MatchFee = 13; //报名费用
    optional int32 MatchArea = 14; //新浪比赛区域 7 新浪独服8是南赛区9是北赛区
    optional string Description = 15; //比赛描述,包括奖金等内容
}

//服务器的房间基本信息 
message SHENJINGRoomInfo {
    optional int32 GameID = 1; //游戏ID
    optional int32 GroupID = 2; //组ID 场ID 每个游戏内的组ID不能相同
    optional bytes RoomID = 3; //每个游戏内的房间ID不能相同
    optional int32 MaxPlayer = 4; //房间的最大游戏人数
    optional string RoomIP = 5; //房间IP
    optional int32 RoomPort = 6; //
    optional bytes Context = 7; //自定义数据,用于存储房间准入等信息建议使用XML
    optional int32 CurPlayer = 8; //当前房间人数
    optional int32 RoomState = 9; //房间当前状态，0 未启动，1 启动（正常）3 故障（超时无心跳）
    optional int32 IsLock = 10 [default = 0]; //0是不锁，1锁
    repeated SHENJINGRoomInfo SHENJINGRoomItems = 11; //组下配置的场(或场下配置的组)
}

//服务器配置的jss服务器
message SHENJINGJSSInfo {
    optional string RoomIP = 1; //服务器IP
    optional string RoomPort = 2; // 服务器端口
    optional string Remark = 3; //服务器标注
}

//游戏公告
message DDBulletinInfo {
    optional bytes Title = 1; //标题
    optional bytes Content = 2; //内容
}

//服务器信息
message ServerInfo {
    optional string Ip = 1;
    optional int32 Port = 2;
    optional int32 Status = 3; //0开启 1关闭
    optional int32 Type = 4;
}

//***************************************************************//
//快速登录
message REQQuickConn {
    optional bytes UserName = 1; //用户名  (第三方接入必填，为用户原始帐号或数字id),
    optional string Pwd = 2; //密码	8-15位
    optional string SecureID = 3; //机器标识
    optional int32 ComeFromID = 4; //终端种类ID android "1"  iphone "2" ipad "3"
    optional string ChannelID = 5; //渠道号
    optional int32 GameId = 6; //游戏ID: 1德州、2斗地主、3麻将、4捕鱼...
    optional string token = 7; //证书 客户端与服务端匹配正确才进行操作 暂用 md5 加密来制作 格式 secureID+iGAMEID+ChannelID
    optional int32 RoomAdapte = 8 [default = 0]; //分配房间。 0:默认房间;根据不同的值获取相应的MatchRoomList
    optional int32 LoginType = 9 [default = 0]; //登录类型。 0默认的MAC地址登录类型;1为用户名+密码方式;2为微信登录;
    optional int32 CurVersion = 10; //当前版本号
    optional int32 smallVersion = 11; //当前版本小号
    optional string ResolutionID = 12; //分辨率ID "800480" "854480" "1024768"
    optional string LanguageID = 13; //语言ID "cn"简体  "zh"繁体 "en"英文
    optional string ScreenSize = 14; //屏幕真实尺寸  "800480" "854x480" "1024x768"
    optional string ThirdDigitalName = 15; //第三方的用户数字ID等 (第三方接入必填，第三方数字id)
    optional string Thirdkey = 16; // 第三方下发客户端的session key  (第三方接入必填，用于校验合法性)
    optional string ThirdAppId = 17; //申请的第三方的AppId,解决多个APPID 接入同一个OPENID的问题。  (第三方接入必填)
    optional uint32 userId = 18; //用户Id
    optional WeixinInfo wx = 19; //微信登录信息

}

message ACKQuickConn {
    optional int32 AckResult = 1; //登录结果 "0"成功 "1"错误
    optional uint32 UserId = 2; //用户id
    optional string UserName = 3; //用户名
    optional string RoleName = 4; //角色名
    optional int32 YuanBaoCnt = 5; //元宝数量
    optional int64 CoinCnt = 6; //金币数量
    repeated DDRoomInfo RoomList = 7; //房间列表  ，斗地主游戏存入所有的room列表，二人麻将里存入与该用户金币相应的room。
    repeated DDSHENJINGMatchInfo MatchRoomList = 8; //比赛房间信息
    optional bytes Cert = 9; //含角色的证书数据
    optional bytes CertNoCert = 10; //含角色的证书数据
    optional int32 CurVersion = 11; //服务器的当前最新版本号
    optional int32 ForceUpdate = 12; //1=必须升级App
    optional string DownloadUrl = 13; //下载地址
    optional int32 IsMaintain = 14; //是否停服维护 1=停服维护中
    optional string MaintainMsg = 16; //系统提示消息
    optional int32 GameId = 17; //游戏ID
    repeated SHENJINGJSSInfo JssList = 18; // jss服务器，小商城的代理服务器。
    optional string IfSearch = 19; //是否显示搜索（斗地主用）"y"显示 "n"不显示。
    repeated DDBulletinInfo BulletinList = 20; //显示公告
    optional string VersionInfo = 21; //版本信息（更新原因）
    repeated DDRoomInfo MatchSvrList = 22; //所有的比赛服务器列表
    optional int32 Sex = 23; //性别
    repeated ServerInfo ServerList = 24; //服务器列表
    optional int32 DdzActive = 25 [default = 0]; //是否为斗地主活动(签到，抽奖等),0否，1是
    optional string MsgUrl = 26; //用户消息的URL  ,请求访问url参数type=1 统计未读消息，type=2 显示所有消息。
    optional int32 ErrorCode = 27 [default = 0]; //0为无错误；1 用户名密码错误，其它为系统级别错误，待定。
    optional string NickName = 28; //昵称
    optional int32 releaseTag = 29; //发布版本标志
}

message NullMsg {

}

//新增用户的时候,发送广播
message Game_SendAddUser {
    optional bytes Matchid = 1;
    optional int32 Tableid = 2;
    optional string NickName = 3; //昵称
    optional int64 Coin = 4; //用户的经济
    optional int32 seat = 5; //用户的座位号
}

//显示大厅时请求
message Game_Login {
    optional uint32 userId = 1; //用户id
}

//大厅回复
message Game_AckLogin {
    optional string notice = 1; //滚动公告的内容
    optional int32 gameStatus = 2; //0：未游戏  1：正在朋友桌  2：正在锦标赛
    optional int32 matchId = 3;
    optional int32 tableId = 4;
    optional string roomPassword = 5; //朋友桌房间密码
    optional int64 costCreateRoom = 6;  //建房消耗钻石数
    optional int64 costRebuy = 7;       //Rebuy消耗钻石数(锦标赛)
    optional bool championship = 8;     //是否是锦标赛
    optional int64 chip = 9; //用户钻石余额
}


message Game_Notice {
    optional int32 noticeType = 1; //公告的类型
}

//公告的内容
message Game_AckNotice {
    optional int32 noticeType = 1; //公告的类型:1,滚动信息,2,充值信息,3,公告信息
    optional string noticeTitle = 2; //公告的标题
    optional string noticeContent = 3; //公告的内容
    optional string noticeMemo = 4; //公告的备注
    optional int32 id = 5; //公告的id
    repeated string fileds = 6; //公告的字段,目前子还是给充值的协议使用
}

//创建房间
message Game_CreateDesk {
    optional uint32 userId = 1; //用户id
    optional string password = 2; //房间密码
    optional int64 smallBlind = 3; //小盲注
    optional int64 bigBlind = 4; //大盲注
    optional int64 initCoin = 5; //出事筹码
    optional int32 initCount = 6; //初始的局数
    optional int64 preCoin = 7; //前注
}

//创建房间回复的信息
message Game_AckCreateDesk {
    optional int32 result = 1; //返回的结果
    optional int32 deskId = 2; //用户id
    optional string password = 3; //房间密码
    optional int64 userBalance = 4; //用户的余额
    optional int64 createFee = 5; //创建房间的费用
}

//解散房间
message Game_DissolveDesk {
    optional uint32 userId = 1; //解散房间
}

//解散房间回复
message Game_AckDissolveDesk {
    optional uint32 userId = 1; //解散房间
    optional int32 result = 2; //
    optional int32 deskId = 3; //房间Id
    optional string passWord = 4; //房间密钥
}

//离开房间
message Game_LeaveDesk {
    optional uint32 userId = 1; //用户Id
}

//离开房间的回复
message Game_ACKLeaveDesk {
    optional int32 result = 1; //离开房间的结果
}

//准备游戏
message Game_Ready {
    optional uint32 userId = 1; //userId
}

//准备游戏的结果
message Game_AckReady {
    optional int32 result = 1; //准备游戏的结果
    optional string msg = 2; //提示信息
    optional int32 seatId = 3; //searId,发送准备的人的座位号
}

//开始游戏
message Game_Begin {
    optional uint32 userId = 1; //房主的userId
}

//游戏战绩
message Game_GameRecord {
    optional int32 id = 1; //战绩id
    optional uint32 userId = 2; //用户id
}

//message
message Game_BeanUserRecord {
    optional uint32 UserId = 1; //用户id
    optional string NickName = 2; //用户昵称
    optional int64 WinAmount = 3; //用户输赢金额
}

//message
message Game_BeanGameRecord {
    optional int32 id = 1; //战绩id
    optional int32 deskId = 2; //关联的桌子的Id
    optional string beginTime = 3; //游戏开始的时间
    repeated Game_BeanUserRecord users = 4; //用户
}

//
message Game_AckGameRecord {
    optional uint32 userId = 1; //用户id
    optional int32 result = 2; //查询结果
    repeated Game_BeanGameRecord records = 3; //结果
}

// 微信信息
message WeixinInfo {
    optional string openId = 1; // 微信授权用户唯一id
    optional string nickName = 2; // 微信昵称
    optional string headUrl = 3; // 微信头像
}

//聊天的内容
message Game_Message {
    optional int32 msgType = 1; //消息的类型,1,快捷,2,表情,3,自定义
    optional int32 id = 2; //只有快捷和表情的时候有用
    optional string msg = 3; //自定义的时候使用
    optional uint32 userId = 4; //发消息的人是谁
    optional int32 deskId = 5; //desk的id
    optional int32 seat = 6; //发信息人的座位号

}

//消息广播
message Game_SendMessage {
    optional int32 msgType = 1; //消息的类型,1,快捷,2,表情,3,自定义
    optional int32 id = 2; //只有快捷和表情的时候有用
    optional string msg = 3; //自定义的时候使用
    optional uint32 userId = 4; //发消息的人是谁
    optional int32 seat = 5; //发信息人的座位号
}

//几局游戏完了之后的广播信息
message Game_EndLottery {
    optional int64 coin = 1; //总共输赢筹码
    optional bool bigWin = 2; //是否为大赢家
    optional bool owner = 3; //是否为房主
    optional string rolename = 4; //玩家姓名
    optional uint32 userId = 5; //用户的Id
    optional int32 seat = 6; //用户座位号
}

//几局完成之后的情况
message Game_SendDeskEndLottery {
    optional int32 result = 1; //
    repeated Game_EndLottery coinInfo = 2; //胜负的情况
}


message Game_TounamentBlindBean {
    optional string blindLevel = 1; //盲注级别
    optional string smallBlind = 2; //盲注
    optional string ante = 3; //前注
    optional string raiseTime = 4; //升盲时间
    optional bool   canRebuy  = 5; //当前盲注级别是否可重购
}

//盲注的信息
message Game_TounamentBlind {
    repeated Game_TounamentBlindBean data = 1; //数据
}

message Game_TounamentRewardsBean {
    optional string iconPath = 1; //图标名称,将牌的icon
    optional string rewards = 2; //奖励,的说明
}

message Game_TounamentRewards {
    repeated Game_TounamentRewardsBean data = 1;
}

message Game_TounamentRankBean {
    optional int32 place = 1; //名次
    optional string playerImage = 2; //玩家头像
    optional string playerName = 3; //玩家姓名
    optional int64 coin = 4; //筹码
}

message Game_TounamentRank {
    repeated Game_TounamentRankBean data = 1; //名次
}

message Game_TounamentSummary {
    optional string fee = 1; //图标名称
    optional string time = 2; //比赛的时间
    optional string personCount = 3; //参赛人数
    optional string coin = 4; //参赛筹码
}


message Game_MatchItem {
    optional int32 type = 1; //1=送话费场、2=送代金券场、3=送流量包场
    optional string title = 2; //比赛标题：100元话费争夺赛
    optional string time = 3; //开始时间
    optional int32 status = 4; //比赛状态：1=进行中  2=已结束
    optional int64 costFee = 5; //参赛费用
    optional int32 person = 6; //在线人数
    optional bool canInto  = 7  ;//是否可以进入游戏
    optional int32 matchId = 8; //锦标赛的场次
}

//锦标赛场次列表，每条包括信息：
message Game_MatchList {
    optional int32 result = 1;
    repeated Game_MatchItem items = 2;
    optional string helpMessage = 3;
}

//锦标赛牌局结束：弹窗显示我的名次
message Game_TounamentPlayerRank {
    optional int32 playerRank = 1; //我的排名名次
    optional string message = 2; //前10名显示：恭喜获得xxx奖，请联系客服微信xxxxx领奖！10名之后：很遗憾您就差一点就杀入奖励圈！没关系，再接再厉，继续战斗！
}


message Game_Rebuy {
    optional uint32 userId = 1;
    optional int32 type = 2; //0:朋友桌  1:锦标赛
}

message Game_AckRebuy {
    optional int32 result = 1; //0表示成功，非0表示失败
    optional int32 remainCount = 2; //剩余可rebuy次数
    optional int64 currChip = 3; //rebuy成功后的筹码数
}

message Game_Feedback {
    optional uint32 userId = 1;
    optional string message = 2; //用户提交的反馈内容
}

