// Code generated by protoc-gen-go.
// source: bbproto.proto
// DO NOT EDIT!

/*
Package bbproto is a generated protocol buffer package.

It is generated from these files:
	bbproto.proto
	client.proto
	config.proto
	n.proto
	skill.proto
	testp1.proto

It has these top-level messages:
	ProtoHeader
	FriendData
	FriendInfo
	FriendList
	ReqGetFriend
	RspGetFriend
	ReqFindFriend
	RspFindFriend
	ReqAddFriend
	RspAddFriend
	ReqDelFriend
	RspDelFriend
	ReqAcceptFriend
	RspAcceptFriend
	ReqGetPremiumHelper
	RspGetPremiumHelper
	GeneralProtoRsp
	EventDataParam
	EventData
	ReqUploadStat
	RspUploadStat
	ReqGetServerTime
	RspGetServerTime
	ReqAcceptStarBonus
	RspAcceptStarBonus
	ParamQuestPass
	RspQuestPass
	ParamQuestStar
	RspQuestStar
	ParamUserMoney
	RspUserMoney
	ParamUserStone
	RspUserStone
	ParamUserRank
	RspUserRank
	ParamUserUnit
	RspUserUnit
	ParamUserFriend
	RspUserFriend
	ReqStatSettingTool
	RspStatSettingTool
	ReqClientLog
	RspClientLog
	QuestStatus
	QuestLog
	NumRange
	ColorPercent
	StarConfig
	QuestFloorConfig
	QuestConfig
	EnemyInfo
	EnemyInfoConf
	DropUnit
	QuestGrid
	QuestFloor
	QuestDungeonData
	Position
	QuestBoost
	QuestInfo
	Period
	StageInfo
	CityInfo
	WorldMapInfo
	QuestStarObj
	CopyPassInfo
	ReqStartQuest
	RspStartQuest
	ReqClearQuest
	RspClearQuest
	ReqRetireQuest
	RspRetireQuest
	ReqResumeQuest
	RspResumeQuest
	ReqRedoQuest
	RspRedoQuest
	ReqGetQuestColors
	RspGetQuestColors
	ReqGetQuestInfo
	RspGetQuestInfo
	TrapInjuredValue
	TrapInfo
	StoreBattleData
	ClearQuestParam
	AttackInfoProto
	ActiveSkillData
	ReqShopBuy
	RspShopBuy
	ReqBuyMoney
	RspBuyMoney
	TaskConf
	TaskObj
	ReqTaskList
	AchievedTaskRspObj
	UnAchievedTaskRspObj
	TaskTypeRsp
	RspTaskList
	ReqAcceptTaskBonus
	RspAcceptTaskBonus
	UnitResource
	UserUnit
	UnitInfo
	UVPosition
	UnitGetWay
	PowerValue
	PowerTable
	PowerInfo
	PowerType
	HelperRequire
	EvolveInfo
	GachaConfig
	GachaUnitList
	GachaStarInfo
	ReqGetUnitResource
	RspGetUnitResource
	ReqGetUserUnit
	RspGetUserUnit
	ReqLevelUp
	RspLevelUp
	ReqEvolveStart
	RspEvolveStart
	ReqEvolveDone
	RspEvolveDone
	ReqEvolve
	RspEvolve
	ReqGacha
	RspGacha
	ReqSellUnit
	RspSellUnit
	ReqUnitFavorite
	RspUnitFavorite
	ReqUserGuideEvolveUnit
	RspUserGuideEvolveUnit
	ReqFragsFusion
	RspFragsFusion
	UserInfo
	UserInfoDetail
	MonthCard
	AccountInfo
	StageClearItem
	QuestClearInfo
	PartyItem
	UnitParty
	PartyInfo
	TerminalInfo
	GiftItem
	BonusInfo
	LoginInfo
	PresentInfo
	SessionInfo
	ReqGetUserInfo
	RspGetUserInfo
	NoticeItem
	NoticeInfo
	DataCount
	ReqAuthUser
	RspAuthUser
	ReqLoginPack
	RspLoginPack
	ReqRenameNick
	RspRenameNick
	ReqRestoreStamina
	RspRestoreStamina
	ReqChangeParty
	RspChangeParty
	ReqUnitMaxExpand
	RspUnitMaxExpand
	ReqFriendMaxExpand
	RspFriendMaxExpand
	ReqFinishUserGuide
	RspFinishUserGuide
	ReqAcceptBonus
	RspAcceptBonus
	ReqBonusList
	RspBonusList
	RspQuestStarList
	StatHelperCount
	VipConf
	UserTaskInfo
	UserCopyInfo
	DailyUserOptCnt
	TotalUserOptCnt
	RspUserGuideStep
	RspRefreshUser
	Probability
	QuestMapInfo
	AudioConfigItem
	AudioConfigFile
	N
	SkillBase
	SkillSingleAttack
	SkillAttackRecoverHP
	SkillSuicideAttack
	SkillTargetTypeAttack
	SkillStrengthenAttack
	SkillKillHP
	SkillRecoverHP
	SkillRecoverSP
	SkillReduceHurt
	SkillReduceDefence
	SkillDeferAttackRound
	SkillPoison
	SkillDelayTime
	SkillConvertUnitType
	SkillDodgeTrap
	SkillAntiAttack
	NormalSkill
	SkillBoost
	SkillExtraAttack
	SkillMultipleAttack
	AllSkillConfig
	TestP1
*/
package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EUnitType int32

const (
	EUnitType_UALL   EUnitType = 0
	EUnitType_UFIRE  EUnitType = 1
	EUnitType_UWATER EUnitType = 2
	EUnitType_UWIND  EUnitType = 3
	EUnitType_ULIGHT EUnitType = 4
	EUnitType_UDARK  EUnitType = 5
	EUnitType_UNONE  EUnitType = 6
	EUnitType_UHeart EUnitType = 7
)

var EUnitType_name = map[int32]string{
	0: "UALL",
	1: "UFIRE",
	2: "UWATER",
	3: "UWIND",
	4: "ULIGHT",
	5: "UDARK",
	6: "UNONE",
	7: "UHeart",
}
var EUnitType_value = map[string]int32{
	"UALL":   0,
	"UFIRE":  1,
	"UWATER": 2,
	"UWIND":  3,
	"ULIGHT": 4,
	"UDARK":  5,
	"UNONE":  6,
	"UHeart": 7,
}

func (x EUnitType) Enum() *EUnitType {
	p := new(EUnitType)
	*p = x
	return p
}
func (x EUnitType) String() string {
	return proto.EnumName(EUnitType_name, int32(x))
}
func (x *EUnitType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnitType_value, data, "EUnitType")
	if err != nil {
		return err
	}
	*x = EUnitType(value)
	return nil
}
func (EUnitType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EUnitRace int32

const (
	EUnitRace_ALL          EUnitRace = 0
	EUnitRace_HUMAN        EUnitRace = 1
	EUnitRace_UNDEAD       EUnitRace = 2
	EUnitRace_MYTHIC       EUnitRace = 3
	EUnitRace_BEAST        EUnitRace = 4
	EUnitRace_MONSTER      EUnitRace = 5
	EUnitRace_LEGEND       EUnitRace = 6
	EUnitRace_DRAGON       EUnitRace = 7
	EUnitRace_SCREAMCHEESE EUnitRace = 8
	EUnitRace_EVOLVEPARTS  EUnitRace = 9
)

var EUnitRace_name = map[int32]string{
	0: "ALL",
	1: "HUMAN",
	2: "UNDEAD",
	3: "MYTHIC",
	4: "BEAST",
	5: "MONSTER",
	6: "LEGEND",
	7: "DRAGON",
	8: "SCREAMCHEESE",
	9: "EVOLVEPARTS",
}
var EUnitRace_value = map[string]int32{
	"ALL":          0,
	"HUMAN":        1,
	"UNDEAD":       2,
	"MYTHIC":       3,
	"BEAST":        4,
	"MONSTER":      5,
	"LEGEND":       6,
	"DRAGON":       7,
	"SCREAMCHEESE": 8,
	"EVOLVEPARTS":  9,
}

func (x EUnitRace) Enum() *EUnitRace {
	p := new(EUnitRace)
	*p = x
	return p
}
func (x EUnitRace) String() string {
	return proto.EnumName(EUnitRace_name, int32(x))
}
func (x *EUnitRace) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnitRace_value, data, "EUnitRace")
	if err != nil {
		return err
	}
	*x = EUnitRace(value)
	return nil
}
func (EUnitRace) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EFriendState int32

const (
	EFriendState_ISFRIEND     EFriendState = 1
	EFriendState_FRIENDOUT    EFriendState = 2
	EFriendState_FRIENDIN     EFriendState = 3
	EFriendState_FRIENDHELPER EFriendState = 4
)

var EFriendState_name = map[int32]string{
	1: "ISFRIEND",
	2: "FRIENDOUT",
	3: "FRIENDIN",
	4: "FRIENDHELPER",
}
var EFriendState_value = map[string]int32{
	"ISFRIEND":     1,
	"FRIENDOUT":    2,
	"FRIENDIN":     3,
	"FRIENDHELPER": 4,
}

func (x EFriendState) Enum() *EFriendState {
	p := new(EFriendState)
	*p = x
	return p
}
func (x EFriendState) String() string {
	return proto.EnumName(EFriendState_name, int32(x))
}
func (x *EFriendState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EFriendState_value, data, "EFriendState")
	if err != nil {
		return err
	}
	*x = EFriendState(value)
	return nil
}
func (EFriendState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// -------------------------------------------------
// 任务编号
type IntervalSettingType int32

const (
	IntervalSettingType_QuestPass   IntervalSettingType = 0
	IntervalSettingType_QuestStar   IntervalSettingType = 1
	IntervalSettingType_UserMoney   IntervalSettingType = 2
	IntervalSettingType_UserStone   IntervalSettingType = 3
	IntervalSettingType_UserRank    IntervalSettingType = 4
	IntervalSettingType_UserUnitAdd IntervalSettingType = 5
	IntervalSettingType_UserFriend  IntervalSettingType = 6
	IntervalSettingType_UserStamina IntervalSettingType = 7
)

var IntervalSettingType_name = map[int32]string{
	0: "QuestPass",
	1: "QuestStar",
	2: "UserMoney",
	3: "UserStone",
	4: "UserRank",
	5: "UserUnitAdd",
	6: "UserFriend",
	7: "UserStamina",
}
var IntervalSettingType_value = map[string]int32{
	"QuestPass":   0,
	"QuestStar":   1,
	"UserMoney":   2,
	"UserStone":   3,
	"UserRank":    4,
	"UserUnitAdd": 5,
	"UserFriend":  6,
	"UserStamina": 7,
}

func (x IntervalSettingType) Enum() *IntervalSettingType {
	p := new(IntervalSettingType)
	*p = x
	return p
}
func (x IntervalSettingType) String() string {
	return proto.EnumName(IntervalSettingType_name, int32(x))
}
func (x *IntervalSettingType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IntervalSettingType_value, data, "IntervalSettingType")
	if err != nil {
		return err
	}
	*x = IntervalSettingType(value)
	return nil
}
func (IntervalSettingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type RecoveBattleStep int32

const (
	RecoveBattleStep_RB_None       RecoveBattleStep = 0
	RecoveBattleStep_RB_BossDead   RecoveBattleStep = 1
	RecoveBattleStep_RB_BattleFail RecoveBattleStep = 2
	RecoveBattleStep_RB_NoRecoveHP RecoveBattleStep = 3
	RecoveBattleStep_RB_TrapDead   RecoveBattleStep = 4
)

var RecoveBattleStep_name = map[int32]string{
	0: "RB_None",
	1: "RB_BossDead",
	2: "RB_BattleFail",
	3: "RB_NoRecoveHP",
	4: "RB_TrapDead",
}
var RecoveBattleStep_value = map[string]int32{
	"RB_None":       0,
	"RB_BossDead":   1,
	"RB_BattleFail": 2,
	"RB_NoRecoveHP": 3,
	"RB_TrapDead":   4,
}

func (x RecoveBattleStep) Enum() *RecoveBattleStep {
	p := new(RecoveBattleStep)
	*p = x
	return p
}
func (x RecoveBattleStep) String() string {
	return proto.EnumName(RecoveBattleStep_name, int32(x))
}
func (x *RecoveBattleStep) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecoveBattleStep_value, data, "RecoveBattleStep")
	if err != nil {
		return err
	}
	*x = RecoveBattleStep(value)
	return nil
}
func (RecoveBattleStep) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type EQuestState int32

const (
	EQuestState_QS_NEW      EQuestState = 0
	EQuestState_QS_QUESTING EQuestState = 1
	EQuestState_QS_CLEARED  EQuestState = 2
)

var EQuestState_name = map[int32]string{
	0: "QS_NEW",
	1: "QS_QUESTING",
	2: "QS_CLEARED",
}
var EQuestState_value = map[string]int32{
	"QS_NEW":      0,
	"QS_QUESTING": 1,
	"QS_CLEARED":  2,
}

func (x EQuestState) Enum() *EQuestState {
	p := new(EQuestState)
	*p = x
	return p
}
func (x EQuestState) String() string {
	return proto.EnumName(EQuestState_name, int32(x))
}
func (x *EQuestState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQuestState_value, data, "EQuestState")
	if err != nil {
		return err
	}
	*x = EQuestState(value)
	return nil
}
func (EQuestState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ETrapType int32

const (
	ETrapType_Move           ETrapType = 0
	ETrapType_StateException ETrapType = 1
	ETrapType_ChangeEnvir    ETrapType = 2
	ETrapType_Injured        ETrapType = 3
	ETrapType_All            ETrapType = 4
)

var ETrapType_name = map[int32]string{
	0: "Move",
	1: "StateException",
	2: "ChangeEnvir",
	3: "Injured",
	4: "All",
}
var ETrapType_value = map[string]int32{
	"Move":           0,
	"StateException": 1,
	"ChangeEnvir":    2,
	"Injured":        3,
	"All":            4,
}

func (x ETrapType) Enum() *ETrapType {
	p := new(ETrapType)
	*p = x
	return p
}
func (x ETrapType) String() string {
	return proto.EnumName(ETrapType_name, int32(x))
}
func (x *ETrapType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETrapType_value, data, "ETrapType")
	if err != nil {
		return err
	}
	*x = ETrapType(value)
	return nil
}
func (ETrapType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type EQuestGridType int32

const (
	EQuestGridType_Q_NONE        EQuestGridType = 0
	EQuestGridType_Q_TREATURE    EQuestGridType = 1
	EQuestGridType_Q_ENEMY       EQuestGridType = 2
	EQuestGridType_Q_TRAP        EQuestGridType = 3
	EQuestGridType_Q_KEY         EQuestGridType = 4
	EQuestGridType_Q_QUESTION    EQuestGridType = 5
	EQuestGridType_Q_EXCLAMATION EQuestGridType = 6
)

var EQuestGridType_name = map[int32]string{
	0: "Q_NONE",
	1: "Q_TREATURE",
	2: "Q_ENEMY",
	3: "Q_TRAP",
	4: "Q_KEY",
	5: "Q_QUESTION",
	6: "Q_EXCLAMATION",
}
var EQuestGridType_value = map[string]int32{
	"Q_NONE":        0,
	"Q_TREATURE":    1,
	"Q_ENEMY":       2,
	"Q_TRAP":        3,
	"Q_KEY":         4,
	"Q_QUESTION":    5,
	"Q_EXCLAMATION": 6,
}

func (x EQuestGridType) Enum() *EQuestGridType {
	p := new(EQuestGridType)
	*p = x
	return p
}
func (x EQuestGridType) String() string {
	return proto.EnumName(EQuestGridType_name, int32(x))
}
func (x *EQuestGridType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQuestGridType_value, data, "EQuestGridType")
	if err != nil {
		return err
	}
	*x = EQuestGridType(value)
	return nil
}
func (EQuestGridType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type EGridStar int32

const (
	EGridStar_GS_EMPTY       EGridStar = 0
	EGridStar_GS_STAR_1      EGridStar = 1
	EGridStar_GS_STAR_2      EGridStar = 2
	EGridStar_GS_STAR_3      EGridStar = 3
	EGridStar_GS_STAR_4      EGridStar = 4
	EGridStar_GS_STAR_5      EGridStar = 5
	EGridStar_GS_STAR_6      EGridStar = 6
	EGridStar_GS_KEY         EGridStar = 7
	EGridStar_GS_QUESTION    EGridStar = 8
	EGridStar_GS_EXCLAMATION EGridStar = 9
)

var EGridStar_name = map[int32]string{
	0: "GS_EMPTY",
	1: "GS_STAR_1",
	2: "GS_STAR_2",
	3: "GS_STAR_3",
	4: "GS_STAR_4",
	5: "GS_STAR_5",
	6: "GS_STAR_6",
	7: "GS_KEY",
	8: "GS_QUESTION",
	9: "GS_EXCLAMATION",
}
var EGridStar_value = map[string]int32{
	"GS_EMPTY":       0,
	"GS_STAR_1":      1,
	"GS_STAR_2":      2,
	"GS_STAR_3":      3,
	"GS_STAR_4":      4,
	"GS_STAR_5":      5,
	"GS_STAR_6":      6,
	"GS_KEY":         7,
	"GS_QUESTION":    8,
	"GS_EXCLAMATION": 9,
}

func (x EGridStar) Enum() *EGridStar {
	p := new(EGridStar)
	*p = x
	return p
}
func (x EGridStar) String() string {
	return proto.EnumName(EGridStar_name, int32(x))
}
func (x *EGridStar) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGridStar_value, data, "EGridStar")
	if err != nil {
		return err
	}
	*x = EGridStar(value)
	return nil
}
func (EGridStar) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ECopyType int32

const (
	ECopyType_CT_NORMAL ECopyType = 0
	ECopyType_CT_ELITE  ECopyType = 1
)

var ECopyType_name = map[int32]string{
	0: "CT_NORMAL",
	1: "CT_ELITE",
}
var ECopyType_value = map[string]int32{
	"CT_NORMAL": 0,
	"CT_ELITE":  1,
}

func (x ECopyType) Enum() *ECopyType {
	p := new(ECopyType)
	*p = x
	return p
}
func (x ECopyType) String() string {
	return proto.EnumName(ECopyType_name, int32(x))
}
func (x *ECopyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECopyType_value, data, "ECopyType")
	if err != nil {
		return err
	}
	*x = ECopyType(value)
	return nil
}
func (ECopyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type QuestBoostType int32

const (
	QuestBoostType_QB_BOOST_NONE     QuestBoostType = 0
	QuestBoostType_QB_BOOST_MONEY    QuestBoostType = 1
	QuestBoostType_QB_BOOST_EXP      QuestBoostType = 2
	QuestBoostType_QB_BOOST_DROPRATE QuestBoostType = 3
	QuestBoostType_QB_BOOST_DROPPLUS QuestBoostType = 4
)

var QuestBoostType_name = map[int32]string{
	0: "QB_BOOST_NONE",
	1: "QB_BOOST_MONEY",
	2: "QB_BOOST_EXP",
	3: "QB_BOOST_DROPRATE",
	4: "QB_BOOST_DROPPLUS",
}
var QuestBoostType_value = map[string]int32{
	"QB_BOOST_NONE":     0,
	"QB_BOOST_MONEY":    1,
	"QB_BOOST_EXP":      2,
	"QB_BOOST_DROPRATE": 3,
	"QB_BOOST_DROPPLUS": 4,
}

func (x QuestBoostType) Enum() *QuestBoostType {
	p := new(QuestBoostType)
	*p = x
	return p
}
func (x QuestBoostType) String() string {
	return proto.EnumName(QuestBoostType_name, int32(x))
}
func (x *QuestBoostType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QuestBoostType_value, data, "QuestBoostType")
	if err != nil {
		return err
	}
	*x = QuestBoostType(value)
	return nil
}
func (QuestBoostType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type QuestType int32

const (
	QuestType_E_QUEST_STORY  QuestType = 0
	QuestType_E_QUEST_EVENT  QuestType = 1
	QuestType_E_QUEST_EVOLVE QuestType = 2
)

var QuestType_name = map[int32]string{
	0: "E_QUEST_STORY",
	1: "E_QUEST_EVENT",
	2: "E_QUEST_EVOLVE",
}
var QuestType_value = map[string]int32{
	"E_QUEST_STORY":  0,
	"E_QUEST_EVENT":  1,
	"E_QUEST_EVOLVE": 2,
}

func (x QuestType) Enum() *QuestType {
	p := new(QuestType)
	*p = x
	return p
}
func (x QuestType) String() string {
	return proto.EnumName(QuestType_name, int32(x))
}
func (x *QuestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QuestType_value, data, "QuestType")
	if err != nil {
		return err
	}
	*x = QuestType(value)
	return nil
}
func (QuestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

// 任务类型
type ETaskType int32

const (
	ETaskType_ACHIEVEMENT ETaskType = 1
	ETaskType_DAILYTASK   ETaskType = 2
)

var ETaskType_name = map[int32]string{
	1: "ACHIEVEMENT",
	2: "DAILYTASK",
}
var ETaskType_value = map[string]int32{
	"ACHIEVEMENT": 1,
	"DAILYTASK":   2,
}

func (x ETaskType) Enum() *ETaskType {
	p := new(ETaskType)
	*p = x
	return p
}
func (x ETaskType) String() string {
	return proto.EnumName(ETaskType_name, int32(x))
}
func (x *ETaskType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETaskType_value, data, "ETaskType")
	if err != nil {
		return err
	}
	*x = ETaskType(value)
	return nil
}
func (ETaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

// 成就类型
type EAchieveType int32

const (
	EAchieveType_STAGE_PASS        EAchieveType = 1
	EAchieveType_FRIEND_GOT        EAchieveType = 2
	EAchieveType_SUMMON_FP         EAchieveType = 3
	EAchieveType_SUMMON_RARE       EAchieveType = 4
	EAchieveType_SUMMON_FP_9       EAchieveType = 5
	EAchieveType_SUMMON_RARE_9     EAchieveType = 6
	EAchieveType_POWERUP           EAchieveType = 7
	EAchieveType_POWERUP_MAX       EAchieveType = 8
	EAchieveType_EVOLVE            EAchieveType = 9
	EAchieveType_GALLERY           EAchieveType = 10
	EAchieveType_UNIT_3            EAchieveType = 11
	EAchieveType_UNIT_4            EAchieveType = 12
	EAchieveType_UNIT_5            EAchieveType = 13
	EAchieveType_MONEY_QUEST       EAchieveType = 14
	EAchieveType_FP_QUEST          EAchieveType = 15
	EAchieveType_EVENT_PLAY        EAchieveType = 16
	EAchieveType_CITY_PASS         EAchieveType = 17
	EAchieveType_EVOLVE_MAX        EAchieveType = 18
	EAchieveType_ANY_QUEST_DAILY   EAchieveType = 19
	EAchieveType_FRIENDPOINT_DAILY EAchieveType = 20
	EAchieveType_FRIEND_DAILY      EAchieveType = 21
	EAchieveType_POWERUP_DAILY     EAchieveType = 22
	EAchieveType_EVOLVE_DAILY      EAchieveType = 23
	EAchieveType_SUMMON_FP_DAILY   EAchieveType = 24
	EAchieveType_SUMMON_RARE_DAILY EAchieveType = 25
	EAchieveType_QUEST_EVENT_DAILY EAchieveType = 26
)

var EAchieveType_name = map[int32]string{
	1:  "STAGE_PASS",
	2:  "FRIEND_GOT",
	3:  "SUMMON_FP",
	4:  "SUMMON_RARE",
	5:  "SUMMON_FP_9",
	6:  "SUMMON_RARE_9",
	7:  "POWERUP",
	8:  "POWERUP_MAX",
	9:  "EVOLVE",
	10: "GALLERY",
	11: "UNIT_3",
	12: "UNIT_4",
	13: "UNIT_5",
	14: "MONEY_QUEST",
	15: "FP_QUEST",
	16: "EVENT_PLAY",
	17: "CITY_PASS",
	18: "EVOLVE_MAX",
	19: "ANY_QUEST_DAILY",
	20: "FRIENDPOINT_DAILY",
	21: "FRIEND_DAILY",
	22: "POWERUP_DAILY",
	23: "EVOLVE_DAILY",
	24: "SUMMON_FP_DAILY",
	25: "SUMMON_RARE_DAILY",
	26: "QUEST_EVENT_DAILY",
}
var EAchieveType_value = map[string]int32{
	"STAGE_PASS":        1,
	"FRIEND_GOT":        2,
	"SUMMON_FP":         3,
	"SUMMON_RARE":       4,
	"SUMMON_FP_9":       5,
	"SUMMON_RARE_9":     6,
	"POWERUP":           7,
	"POWERUP_MAX":       8,
	"EVOLVE":            9,
	"GALLERY":           10,
	"UNIT_3":            11,
	"UNIT_4":            12,
	"UNIT_5":            13,
	"MONEY_QUEST":       14,
	"FP_QUEST":          15,
	"EVENT_PLAY":        16,
	"CITY_PASS":         17,
	"EVOLVE_MAX":        18,
	"ANY_QUEST_DAILY":   19,
	"FRIENDPOINT_DAILY": 20,
	"FRIEND_DAILY":      21,
	"POWERUP_DAILY":     22,
	"EVOLVE_DAILY":      23,
	"SUMMON_FP_DAILY":   24,
	"SUMMON_RARE_DAILY": 25,
	"QUEST_EVENT_DAILY": 26,
}

func (x EAchieveType) Enum() *EAchieveType {
	p := new(EAchieveType)
	*p = x
	return p
}
func (x EAchieveType) String() string {
	return proto.EnumName(EAchieveType_name, int32(x))
}
func (x *EAchieveType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAchieveType_value, data, "EAchieveType")
	if err != nil {
		return err
	}
	*x = EAchieveType(value)
	return nil
}
func (EAchieveType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type MaterialType int32

const (
	MaterialType_MT_UNIT     MaterialType = 1
	MaterialType_MT_FRAGMENT MaterialType = 2
)

var MaterialType_name = map[int32]string{
	1: "MT_UNIT",
	2: "MT_FRAGMENT",
}
var MaterialType_value = map[string]int32{
	"MT_UNIT":     1,
	"MT_FRAGMENT": 2,
}

func (x MaterialType) Enum() *MaterialType {
	p := new(MaterialType)
	*p = x
	return p
}
func (x MaterialType) String() string {
	return proto.EnumName(MaterialType_name, int32(x))
}
func (x *MaterialType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MaterialType_value, data, "MaterialType")
	if err != nil {
		return err
	}
	*x = MaterialType(value)
	return nil
}
func (MaterialType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type EUnitGetType int32

const (
	EUnitGetType_E_NONE         EUnitGetType = 0
	EUnitGetType_E_NORMAL_QUEST EUnitGetType = 1
	EUnitGetType_E_EVENT_QUEST  EUnitGetType = 2
	EUnitGetType_E_GACHA_NORMAL EUnitGetType = 3
	EUnitGetType_E_GACHA_EVENT  EUnitGetType = 4
	EUnitGetType_E_BUY          EUnitGetType = 5
	EUnitGetType_E_BONUS        EUnitGetType = 6
	EUnitGetType_E_STAGE        EUnitGetType = 7
)

var EUnitGetType_name = map[int32]string{
	0: "E_NONE",
	1: "E_NORMAL_QUEST",
	2: "E_EVENT_QUEST",
	3: "E_GACHA_NORMAL",
	4: "E_GACHA_EVENT",
	5: "E_BUY",
	6: "E_BONUS",
	7: "E_STAGE",
}
var EUnitGetType_value = map[string]int32{
	"E_NONE":         0,
	"E_NORMAL_QUEST": 1,
	"E_EVENT_QUEST":  2,
	"E_GACHA_NORMAL": 3,
	"E_GACHA_EVENT":  4,
	"E_BUY":          5,
	"E_BONUS":        6,
	"E_STAGE":        7,
}

func (x EUnitGetType) Enum() *EUnitGetType {
	p := new(EUnitGetType)
	*p = x
	return p
}
func (x EUnitGetType) String() string {
	return proto.EnumName(EUnitGetType_name, int32(x))
}
func (x *EUnitGetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnitGetType_value, data, "EUnitGetType")
	if err != nil {
		return err
	}
	*x = EUnitGetType(value)
	return nil
}
func (EUnitGetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type EGachaType int32

const (
	EGachaType_E_FRIEND_GACHA    EGachaType = 1
	EGachaType_E_BUY_GACHA       EGachaType = 2
	EGachaType_E_BUY_GACHA_EVENT EGachaType = 3
)

var EGachaType_name = map[int32]string{
	1: "E_FRIEND_GACHA",
	2: "E_BUY_GACHA",
	3: "E_BUY_GACHA_EVENT",
}
var EGachaType_value = map[string]int32{
	"E_FRIEND_GACHA":    1,
	"E_BUY_GACHA":       2,
	"E_BUY_GACHA_EVENT": 3,
}

func (x EGachaType) Enum() *EGachaType {
	p := new(EGachaType)
	*p = x
	return p
}
func (x EGachaType) String() string {
	return proto.EnumName(EGachaType_name, int32(x))
}
func (x *EGachaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGachaType_value, data, "EGachaType")
	if err != nil {
		return err
	}
	*x = EGachaType(value)
	return nil
}
func (EGachaType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type EFavoriteAction int32

const (
	EFavoriteAction_ADD_FAVORITE EFavoriteAction = 1
	EFavoriteAction_DEL_FAVORITE EFavoriteAction = 2
)

var EFavoriteAction_name = map[int32]string{
	1: "ADD_FAVORITE",
	2: "DEL_FAVORITE",
}
var EFavoriteAction_value = map[string]int32{
	"ADD_FAVORITE": 1,
	"DEL_FAVORITE": 2,
}

func (x EFavoriteAction) Enum() *EFavoriteAction {
	p := new(EFavoriteAction)
	*p = x
	return p
}
func (x EFavoriteAction) String() string {
	return proto.EnumName(EFavoriteAction_name, int32(x))
}
func (x *EFavoriteAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EFavoriteAction_value, data, "EFavoriteAction")
	if err != nil {
		return err
	}
	*x = EFavoriteAction(value)
	return nil
}
func (EFavoriteAction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

// 奖励类型
type EGiftContent int32

const (
	EGiftContent_COIN         EGiftContent = 1
	EGiftContent_FRIEND_POINT EGiftContent = 2
	EGiftContent_UNIT         EGiftContent = 3
	EGiftContent_CHIP         EGiftContent = 4
	EGiftContent_STAMINA      EGiftContent = 5
	EGiftContent_RANK_EXP     EGiftContent = 6
)

var EGiftContent_name = map[int32]string{
	1: "COIN",
	2: "FRIEND_POINT",
	3: "UNIT",
	4: "CHIP",
	5: "STAMINA",
	6: "RANK_EXP",
}
var EGiftContent_value = map[string]int32{
	"COIN":         1,
	"FRIEND_POINT": 2,
	"UNIT":         3,
	"CHIP":         4,
	"STAMINA":      5,
	"RANK_EXP":     6,
}

func (x EGiftContent) Enum() *EGiftContent {
	p := new(EGiftContent)
	*p = x
	return p
}
func (x EGiftContent) String() string {
	return proto.EnumName(EGiftContent_name, int32(x))
}
func (x *EGiftContent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGiftContent_value, data, "EGiftContent")
	if err != nil {
		return err
	}
	*x = EGiftContent(value)
	return nil
}
func (EGiftContent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// general response protocol
type ProtoHeader struct {
	ApiVer           *string `protobuf:"bytes,1,req,name=apiVer" json:"apiVer,omitempty"`
	SessionId        *string `protobuf:"bytes,2,opt,name=sessionId" json:"sessionId,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	PacketId         *int32  `protobuf:"varint,4,opt,name=packetId" json:"packetId,omitempty"`
	Code             *int32  `protobuf:"varint,5,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	ExtraTag         *int32  `protobuf:"varint,7,opt,name=extraTag" json:"extraTag,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHeader) Reset()                    { *m = ProtoHeader{} }
func (m *ProtoHeader) String() string            { return proto.CompactTextString(m) }
func (*ProtoHeader) ProtoMessage()               {}
func (*ProtoHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoHeader) GetApiVer() string {
	if m != nil && m.ApiVer != nil {
		return *m.ApiVer
	}
	return ""
}

func (m *ProtoHeader) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *ProtoHeader) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ProtoHeader) GetPacketId() int32 {
	if m != nil && m.PacketId != nil {
		return *m.PacketId
	}
	return 0
}

func (m *ProtoHeader) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ProtoHeader) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *ProtoHeader) GetExtraTag() int32 {
	if m != nil && m.ExtraTag != nil {
		return *m.ExtraTag
	}
	return 0
}

type FriendData struct {
	UserId            *uint32       `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	FriendState       *EFriendState `protobuf:"varint,2,opt,name=friendState,enum=bbproto.EFriendState" json:"friendState,omitempty"`
	FriendStateUpdate *uint32       `protobuf:"varint,3,opt,name=friendStateUpdate" json:"friendStateUpdate,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *FriendData) Reset()                    { *m = FriendData{} }
func (m *FriendData) String() string            { return proto.CompactTextString(m) }
func (*FriendData) ProtoMessage()               {}
func (*FriendData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FriendData) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *FriendData) GetFriendState() EFriendState {
	if m != nil && m.FriendState != nil {
		return *m.FriendState
	}
	return EFriendState_ISFRIEND
}

func (m *FriendData) GetFriendStateUpdate() uint32 {
	if m != nil && m.FriendStateUpdate != nil {
		return *m.FriendStateUpdate
	}
	return 0
}

type FriendInfo struct {
	UserId            *uint32       `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	NickName          *string       `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	Rank              *int32        `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	LastPlayTime      *uint32       `protobuf:"varint,4,opt,name=lastPlayTime" json:"lastPlayTime,omitempty"`
	FriendState       *EFriendState `protobuf:"varint,5,opt,name=friendState,enum=bbproto.EFriendState" json:"friendState,omitempty"`
	FriendStateUpdate *uint32       `protobuf:"varint,6,opt,name=friendStateUpdate" json:"friendStateUpdate,omitempty"`
	FriendPoint       *int32        `protobuf:"varint,7,opt,name=friendPoint" json:"friendPoint,omitempty"`
	Unit              *UserUnit     `protobuf:"bytes,8,opt,name=unit" json:"unit,omitempty"`
	UsedTime          *uint32       `protobuf:"varint,9,opt,name=usedTime" json:"usedTime,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FriendInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *FriendInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *FriendInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *FriendInfo) GetLastPlayTime() uint32 {
	if m != nil && m.LastPlayTime != nil {
		return *m.LastPlayTime
	}
	return 0
}

func (m *FriendInfo) GetFriendState() EFriendState {
	if m != nil && m.FriendState != nil {
		return *m.FriendState
	}
	return EFriendState_ISFRIEND
}

func (m *FriendInfo) GetFriendStateUpdate() uint32 {
	if m != nil && m.FriendStateUpdate != nil {
		return *m.FriendStateUpdate
	}
	return 0
}

func (m *FriendInfo) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *FriendInfo) GetUnit() *UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *FriendInfo) GetUsedTime() uint32 {
	if m != nil && m.UsedTime != nil {
		return *m.UsedTime
	}
	return 0
}

type FriendList struct {
	Friend           []*FriendInfo `protobuf:"bytes,1,rep,name=friend" json:"friend,omitempty"`
	Helper           []*FriendInfo `protobuf:"bytes,2,rep,name=helper" json:"helper,omitempty"`
	FriendIn         []*FriendInfo `protobuf:"bytes,3,rep,name=friendIn" json:"friendIn,omitempty"`
	FriendOut        []*FriendInfo `protobuf:"bytes,4,rep,name=friendOut" json:"friendOut,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *FriendList) Reset()                    { *m = FriendList{} }
func (m *FriendList) String() string            { return proto.CompactTextString(m) }
func (*FriendList) ProtoMessage()               {}
func (*FriendList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FriendList) GetFriend() []*FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

func (m *FriendList) GetHelper() []*FriendInfo {
	if m != nil {
		return m.Helper
	}
	return nil
}

func (m *FriendList) GetFriendIn() []*FriendInfo {
	if m != nil {
		return m.FriendIn
	}
	return nil
}

func (m *FriendList) GetFriendOut() []*FriendInfo {
	if m != nil {
		return m.FriendOut
	}
	return nil
}

// -------------------------------------------------
type ReqGetFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GetFriend        *bool        `protobuf:"varint,2,opt,name=getFriend" json:"getFriend,omitempty"`
	GetHelper        *bool        `protobuf:"varint,3,opt,name=getHelper" json:"getHelper,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetFriend) Reset()                    { *m = ReqGetFriend{} }
func (m *ReqGetFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqGetFriend) ProtoMessage()               {}
func (*ReqGetFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReqGetFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetFriend) GetGetFriend() bool {
	if m != nil && m.GetFriend != nil {
		return *m.GetFriend
	}
	return false
}

func (m *ReqGetFriend) GetGetHelper() bool {
	if m != nil && m.GetHelper != nil {
		return *m.GetHelper
	}
	return false
}

type RspGetFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Friends          *FriendList  `protobuf:"bytes,2,opt,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetFriend) Reset()                    { *m = RspGetFriend{} }
func (m *RspGetFriend) String() string            { return proto.CompactTextString(m) }
func (*RspGetFriend) ProtoMessage()               {}
func (*RspGetFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RspGetFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetFriend) GetFriends() *FriendList {
	if m != nil {
		return m.Friends
	}
	return nil
}

// -------------------------------------------------
type ReqFindFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FriendUid        *uint32      `protobuf:"varint,2,opt,name=friendUid" json:"friendUid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqFindFriend) Reset()                    { *m = ReqFindFriend{} }
func (m *ReqFindFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqFindFriend) ProtoMessage()               {}
func (*ReqFindFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReqFindFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqFindFriend) GetFriendUid() uint32 {
	if m != nil && m.FriendUid != nil {
		return *m.FriendUid
	}
	return 0
}

type RspFindFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Friend           *FriendInfo  `protobuf:"bytes,2,opt,name=friend" json:"friend,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspFindFriend) Reset()                    { *m = RspFindFriend{} }
func (m *RspFindFriend) String() string            { return proto.CompactTextString(m) }
func (*RspFindFriend) ProtoMessage()               {}
func (*RspFindFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RspFindFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspFindFriend) GetFriend() *FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

// -------------------------------------------------
type ReqAddFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FriendUid        *uint32      `protobuf:"varint,2,opt,name=friendUid" json:"friendUid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAddFriend) Reset()                    { *m = ReqAddFriend{} }
func (m *ReqAddFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqAddFriend) ProtoMessage()               {}
func (*ReqAddFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReqAddFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAddFriend) GetFriendUid() uint32 {
	if m != nil && m.FriendUid != nil {
		return *m.FriendUid
	}
	return 0
}

type RspAddFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Friends          *FriendList  `protobuf:"bytes,2,opt,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspAddFriend) Reset()                    { *m = RspAddFriend{} }
func (m *RspAddFriend) String() string            { return proto.CompactTextString(m) }
func (*RspAddFriend) ProtoMessage()               {}
func (*RspAddFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RspAddFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAddFriend) GetFriends() *FriendList {
	if m != nil {
		return m.Friends
	}
	return nil
}

// -------------------------------------------------
type ReqDelFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FriendUid        []uint32     `protobuf:"varint,2,rep,name=friendUid" json:"friendUid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqDelFriend) Reset()                    { *m = ReqDelFriend{} }
func (m *ReqDelFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqDelFriend) ProtoMessage()               {}
func (*ReqDelFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReqDelFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqDelFriend) GetFriendUid() []uint32 {
	if m != nil {
		return m.FriendUid
	}
	return nil
}

type RspDelFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Friends          *FriendList  `protobuf:"bytes,2,opt,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspDelFriend) Reset()                    { *m = RspDelFriend{} }
func (m *RspDelFriend) String() string            { return proto.CompactTextString(m) }
func (*RspDelFriend) ProtoMessage()               {}
func (*RspDelFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RspDelFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspDelFriend) GetFriends() *FriendList {
	if m != nil {
		return m.Friends
	}
	return nil
}

// -------------------------------------------------
type ReqAcceptFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FriendUid        *uint32      `protobuf:"varint,2,opt,name=friendUid" json:"friendUid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAcceptFriend) Reset()                    { *m = ReqAcceptFriend{} }
func (m *ReqAcceptFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqAcceptFriend) ProtoMessage()               {}
func (*ReqAcceptFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ReqAcceptFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAcceptFriend) GetFriendUid() uint32 {
	if m != nil && m.FriendUid != nil {
		return *m.FriendUid
	}
	return 0
}

type RspAcceptFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Friends          *FriendList  `protobuf:"bytes,2,opt,name=friends" json:"friends,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspAcceptFriend) Reset()                    { *m = RspAcceptFriend{} }
func (m *RspAcceptFriend) String() string            { return proto.CompactTextString(m) }
func (*RspAcceptFriend) ProtoMessage()               {}
func (*RspAcceptFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RspAcceptFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAcceptFriend) GetFriends() *FriendList {
	if m != nil {
		return m.Friends
	}
	return nil
}

// -------------------------------------------------
// used for premium helper
type ReqGetPremiumHelper struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Race             *EUnitRace   `protobuf:"varint,2,opt,name=race,enum=bbproto.EUnitRace" json:"race,omitempty"`
	Type             *EUnitType   `protobuf:"varint,3,opt,name=type,enum=bbproto.EUnitType" json:"type,omitempty"`
	Level            *int32       `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	PremiumKind      *int32       `protobuf:"varint,5,opt,name=premiumKind" json:"premiumKind,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetPremiumHelper) Reset()                    { *m = ReqGetPremiumHelper{} }
func (m *ReqGetPremiumHelper) String() string            { return proto.CompactTextString(m) }
func (*ReqGetPremiumHelper) ProtoMessage()               {}
func (*ReqGetPremiumHelper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReqGetPremiumHelper) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetPremiumHelper) GetRace() EUnitRace {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return EUnitRace_ALL
}

func (m *ReqGetPremiumHelper) GetType() EUnitType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EUnitType_UALL
}

func (m *ReqGetPremiumHelper) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ReqGetPremiumHelper) GetPremiumKind() int32 {
	if m != nil && m.PremiumKind != nil {
		return *m.PremiumKind
	}
	return 0
}

type RspGetPremiumHelper struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Helpers          []*FriendInfo `protobuf:"bytes,2,rep,name=helpers" json:"helpers,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *RspGetPremiumHelper) Reset()                    { *m = RspGetPremiumHelper{} }
func (m *RspGetPremiumHelper) String() string            { return proto.CompactTextString(m) }
func (*RspGetPremiumHelper) ProtoMessage()               {}
func (*RspGetPremiumHelper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RspGetPremiumHelper) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetPremiumHelper) GetHelpers() []*FriendInfo {
	if m != nil {
		return m.Helpers
	}
	return nil
}

type GeneralProtoRsp struct {
	RspAuthUser            *RspAuthUser            `protobuf:"bytes,1,opt,name=rspAuthUser" json:"rspAuthUser,omitempty"`
	RspChangeParty         *RspChangeParty         `protobuf:"bytes,2,opt,name=rspChangeParty" json:"rspChangeParty,omitempty"`
	RspRenameNick          *RspRenameNick          `protobuf:"bytes,3,opt,name=rspRenameNick" json:"rspRenameNick,omitempty"`
	RspRestoreStamina      *RspRestoreStamina      `protobuf:"bytes,4,opt,name=rspRestoreStamina" json:"rspRestoreStamina,omitempty"`
	RspUnitMaxExpand       *RspUnitMaxExpand       `protobuf:"bytes,5,opt,name=rspUnitMaxExpand" json:"rspUnitMaxExpand,omitempty"`
	RspFriendMaxExpand     *RspFriendMaxExpand     `protobuf:"bytes,6,opt,name=rspFriendMaxExpand" json:"rspFriendMaxExpand,omitempty"`
	RspFinishUserGuide     *RspFinishUserGuide     `protobuf:"bytes,7,opt,name=rspFinishUserGuide" json:"rspFinishUserGuide,omitempty"`
	RspGetFriend           *RspGetFriend           `protobuf:"bytes,8,opt,name=rspGetFriend" json:"rspGetFriend,omitempty"`
	RspAddFriend           *RspAddFriend           `protobuf:"bytes,9,opt,name=rspAddFriend" json:"rspAddFriend,omitempty"`
	RspDelFriend           *RspDelFriend           `protobuf:"bytes,10,opt,name=rspDelFriend" json:"rspDelFriend,omitempty"`
	RspFindFriend          *RspFindFriend          `protobuf:"bytes,11,opt,name=rspFindFriend" json:"rspFindFriend,omitempty"`
	RspAcceptFriend        *RspAcceptFriend        `protobuf:"bytes,12,opt,name=rspAcceptFriend" json:"rspAcceptFriend,omitempty"`
	RspGetPremiumHelper    *RspGetPremiumHelper    `protobuf:"bytes,13,opt,name=rspGetPremiumHelper" json:"rspGetPremiumHelper,omitempty"`
	RspStartQuest          *RspStartQuest          `protobuf:"bytes,14,opt,name=rspStartQuest" json:"rspStartQuest,omitempty"`
	RspClearQuest          *RspClearQuest          `protobuf:"bytes,15,opt,name=rspClearQuest" json:"rspClearQuest,omitempty"`
	RspRetireQuest         *RspRetireQuest         `protobuf:"bytes,16,opt,name=rspRetireQuest" json:"rspRetireQuest,omitempty"`
	RspRedoQuest           *RspRedoQuest           `protobuf:"bytes,17,opt,name=rspRedoQuest" json:"rspRedoQuest,omitempty"`
	RspResumeQuest         *RspResumeQuest         `protobuf:"bytes,18,opt,name=rspResumeQuest" json:"rspResumeQuest,omitempty"`
	RspGetQuestColors      *RspGetQuestColors      `protobuf:"bytes,19,opt,name=rspGetQuestColors" json:"rspGetQuestColors,omitempty"`
	RspLevelUp             *RspLevelUp             `protobuf:"bytes,20,opt,name=rspLevelUp" json:"rspLevelUp,omitempty"`
	RspEvolveStart         *RspEvolveStart         `protobuf:"bytes,21,opt,name=rspEvolveStart" json:"rspEvolveStart,omitempty"`
	RspEvolveDone          *RspEvolveDone          `protobuf:"bytes,22,opt,name=rspEvolveDone" json:"rspEvolveDone,omitempty"`
	RspGacha               *RspGacha               `protobuf:"bytes,23,opt,name=rspGacha" json:"rspGacha,omitempty"`
	RspSellUnit            *RspSellUnit            `protobuf:"bytes,24,opt,name=rspSellUnit" json:"rspSellUnit,omitempty"`
	RspUnitFavorite        *RspUnitFavorite        `protobuf:"bytes,25,opt,name=rspUnitFavorite" json:"rspUnitFavorite,omitempty"`
	RspUserGuideEvolveUnit *RspUserGuideEvolveUnit `protobuf:"bytes,26,opt,name=rspUserGuideEvolveUnit" json:"rspUserGuideEvolveUnit,omitempty"`
	RspGetServerTime       *RspGetServerTime       `protobuf:"bytes,27,opt,name=rspGetServerTime" json:"rspGetServerTime,omitempty"`
	RspUploadStat          *RspUploadStat          `protobuf:"bytes,28,opt,name=rspUploadStat" json:"rspUploadStat,omitempty"`
	RspAcceptBonus         *RspAcceptBonus         `protobuf:"bytes,29,opt,name=rspAcceptBonus" json:"rspAcceptBonus,omitempty"`
	RspBonusList           *RspBonusList           `protobuf:"bytes,30,opt,name=rspBonusList" json:"rspBonusList,omitempty"`
	RspShopBuy             *RspShopBuy             `protobuf:"bytes,31,opt,name=rspShopBuy" json:"rspShopBuy,omitempty"`
	RspBuyMoney            *RspBuyMoney            `protobuf:"bytes,32,opt,name=rspBuyMoney" json:"rspBuyMoney,omitempty"`
	RspTaskList            *RspTaskList            `protobuf:"bytes,33,opt,name=rspTaskList" json:"rspTaskList,omitempty"`
	RspAcceptTaskBonus     *RspAcceptTaskBonus     `protobuf:"bytes,34,opt,name=rspAcceptTaskBonus" json:"rspAcceptTaskBonus,omitempty"`
	RspQuestStarList       *RspQuestStarList       `protobuf:"bytes,35,opt,name=rspQuestStarList" json:"rspQuestStarList,omitempty"`
	RspAcceptStarBonus     *RspAcceptStarBonus     `protobuf:"bytes,36,opt,name=rspAcceptStarBonus" json:"rspAcceptStarBonus,omitempty"`
	RspEvolve              *RspEvolve              `protobuf:"bytes,37,opt,name=rspEvolve" json:"rspEvolve,omitempty"`
	RspUserGuideStep       *RspUserGuideStep       `protobuf:"bytes,38,opt,name=rspUserGuideStep" json:"rspUserGuideStep,omitempty"`
	RspFragsFusion         *RspFragsFusion         `protobuf:"bytes,39,opt,name=rspFragsFusion" json:"rspFragsFusion,omitempty"`
	RspRefreshUser         *RspRefreshUser         `protobuf:"bytes,40,opt,name=rspRefreshUser" json:"rspRefreshUser,omitempty"`
	RspClientLog           *RspClientLog           `protobuf:"bytes,41,opt,name=rspClientLog" json:"rspClientLog,omitempty"`
	XXX_unrecognized       []byte                  `json:"-"`
}

func (m *GeneralProtoRsp) Reset()                    { *m = GeneralProtoRsp{} }
func (m *GeneralProtoRsp) String() string            { return proto.CompactTextString(m) }
func (*GeneralProtoRsp) ProtoMessage()               {}
func (*GeneralProtoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GeneralProtoRsp) GetRspAuthUser() *RspAuthUser {
	if m != nil {
		return m.RspAuthUser
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspChangeParty() *RspChangeParty {
	if m != nil {
		return m.RspChangeParty
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspRenameNick() *RspRenameNick {
	if m != nil {
		return m.RspRenameNick
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspRestoreStamina() *RspRestoreStamina {
	if m != nil {
		return m.RspRestoreStamina
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspUnitMaxExpand() *RspUnitMaxExpand {
	if m != nil {
		return m.RspUnitMaxExpand
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspFriendMaxExpand() *RspFriendMaxExpand {
	if m != nil {
		return m.RspFriendMaxExpand
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspFinishUserGuide() *RspFinishUserGuide {
	if m != nil {
		return m.RspFinishUserGuide
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspGetFriend() *RspGetFriend {
	if m != nil {
		return m.RspGetFriend
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspAddFriend() *RspAddFriend {
	if m != nil {
		return m.RspAddFriend
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspDelFriend() *RspDelFriend {
	if m != nil {
		return m.RspDelFriend
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspFindFriend() *RspFindFriend {
	if m != nil {
		return m.RspFindFriend
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspAcceptFriend() *RspAcceptFriend {
	if m != nil {
		return m.RspAcceptFriend
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspGetPremiumHelper() *RspGetPremiumHelper {
	if m != nil {
		return m.RspGetPremiumHelper
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspStartQuest() *RspStartQuest {
	if m != nil {
		return m.RspStartQuest
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspClearQuest() *RspClearQuest {
	if m != nil {
		return m.RspClearQuest
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspRetireQuest() *RspRetireQuest {
	if m != nil {
		return m.RspRetireQuest
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspRedoQuest() *RspRedoQuest {
	if m != nil {
		return m.RspRedoQuest
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspResumeQuest() *RspResumeQuest {
	if m != nil {
		return m.RspResumeQuest
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspGetQuestColors() *RspGetQuestColors {
	if m != nil {
		return m.RspGetQuestColors
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspLevelUp() *RspLevelUp {
	if m != nil {
		return m.RspLevelUp
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspEvolveStart() *RspEvolveStart {
	if m != nil {
		return m.RspEvolveStart
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspEvolveDone() *RspEvolveDone {
	if m != nil {
		return m.RspEvolveDone
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspGacha() *RspGacha {
	if m != nil {
		return m.RspGacha
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspSellUnit() *RspSellUnit {
	if m != nil {
		return m.RspSellUnit
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspUnitFavorite() *RspUnitFavorite {
	if m != nil {
		return m.RspUnitFavorite
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspUserGuideEvolveUnit() *RspUserGuideEvolveUnit {
	if m != nil {
		return m.RspUserGuideEvolveUnit
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspGetServerTime() *RspGetServerTime {
	if m != nil {
		return m.RspGetServerTime
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspUploadStat() *RspUploadStat {
	if m != nil {
		return m.RspUploadStat
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspAcceptBonus() *RspAcceptBonus {
	if m != nil {
		return m.RspAcceptBonus
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspBonusList() *RspBonusList {
	if m != nil {
		return m.RspBonusList
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspShopBuy() *RspShopBuy {
	if m != nil {
		return m.RspShopBuy
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspBuyMoney() *RspBuyMoney {
	if m != nil {
		return m.RspBuyMoney
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspTaskList() *RspTaskList {
	if m != nil {
		return m.RspTaskList
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspAcceptTaskBonus() *RspAcceptTaskBonus {
	if m != nil {
		return m.RspAcceptTaskBonus
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspQuestStarList() *RspQuestStarList {
	if m != nil {
		return m.RspQuestStarList
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspAcceptStarBonus() *RspAcceptStarBonus {
	if m != nil {
		return m.RspAcceptStarBonus
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspEvolve() *RspEvolve {
	if m != nil {
		return m.RspEvolve
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspUserGuideStep() *RspUserGuideStep {
	if m != nil {
		return m.RspUserGuideStep
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspFragsFusion() *RspFragsFusion {
	if m != nil {
		return m.RspFragsFusion
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspRefreshUser() *RspRefreshUser {
	if m != nil {
		return m.RspRefreshUser
	}
	return nil
}

func (m *GeneralProtoRsp) GetRspClientLog() *RspClientLog {
	if m != nil {
		return m.RspClientLog
	}
	return nil
}

// -------------------------------------------------
type EventDataParam struct {
	Key              *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	IValue           *int32   `protobuf:"varint,2,opt,name=iValue" json:"iValue,omitempty"`
	FValue           *float32 `protobuf:"fixed32,3,opt,name=fValue" json:"fValue,omitempty"`
	SValue           *string  `protobuf:"bytes,4,opt,name=sValue" json:"sValue,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EventDataParam) Reset()                    { *m = EventDataParam{} }
func (m *EventDataParam) String() string            { return proto.CompactTextString(m) }
func (*EventDataParam) ProtoMessage()               {}
func (*EventDataParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *EventDataParam) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *EventDataParam) GetIValue() int32 {
	if m != nil && m.IValue != nil {
		return *m.IValue
	}
	return 0
}

func (m *EventDataParam) GetFValue() float32 {
	if m != nil && m.FValue != nil {
		return *m.FValue
	}
	return 0
}

func (m *EventDataParam) GetSValue() string {
	if m != nil && m.SValue != nil {
		return *m.SValue
	}
	return ""
}

type EventData struct {
	EventId          *string           `protobuf:"bytes,1,opt,name=eventId" json:"eventId,omitempty"`
	IValue           *int32            `protobuf:"varint,2,opt,name=iValue" json:"iValue,omitempty"`
	FValue           *float32          `protobuf:"fixed32,3,opt,name=fValue" json:"fValue,omitempty"`
	SValue           *string           `protobuf:"bytes,4,opt,name=sValue" json:"sValue,omitempty"`
	Timestamp        *uint32           `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Values           []*EventDataParam `protobuf:"bytes,6,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *EventData) Reset()                    { *m = EventData{} }
func (m *EventData) String() string            { return proto.CompactTextString(m) }
func (*EventData) ProtoMessage()               {}
func (*EventData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *EventData) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *EventData) GetIValue() int32 {
	if m != nil && m.IValue != nil {
		return *m.IValue
	}
	return 0
}

func (m *EventData) GetFValue() float32 {
	if m != nil && m.FValue != nil {
		return *m.FValue
	}
	return 0
}

func (m *EventData) GetSValue() string {
	if m != nil && m.SValue != nil {
		return *m.SValue
	}
	return ""
}

func (m *EventData) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *EventData) GetValues() []*EventDataParam {
	if m != nil {
		return m.Values
	}
	return nil
}

type ReqUploadStat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Events           []*EventData `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqUploadStat) Reset()                    { *m = ReqUploadStat{} }
func (m *ReqUploadStat) String() string            { return proto.CompactTextString(m) }
func (*ReqUploadStat) ProtoMessage()               {}
func (*ReqUploadStat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ReqUploadStat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqUploadStat) GetEvents() []*EventData {
	if m != nil {
		return m.Events
	}
	return nil
}

type RspUploadStat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ServerTime       *uint32      `protobuf:"varint,2,opt,name=serverTime" json:"serverTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspUploadStat) Reset()                    { *m = RspUploadStat{} }
func (m *RspUploadStat) String() string            { return proto.CompactTextString(m) }
func (*RspUploadStat) ProtoMessage()               {}
func (*RspUploadStat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RspUploadStat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspUploadStat) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

// -------------------------------------------------
type ReqGetServerTime struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetServerTime) Reset()                    { *m = ReqGetServerTime{} }
func (m *ReqGetServerTime) String() string            { return proto.CompactTextString(m) }
func (*ReqGetServerTime) ProtoMessage()               {}
func (*ReqGetServerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ReqGetServerTime) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspGetServerTime struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ServerTime       *uint32      `protobuf:"varint,2,opt,name=serverTime" json:"serverTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetServerTime) Reset()                    { *m = RspGetServerTime{} }
func (m *RspGetServerTime) String() string            { return proto.CompactTextString(m) }
func (*RspGetServerTime) ProtoMessage()               {}
func (*RspGetServerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RspGetServerTime) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetServerTime) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

type ReqAcceptStarBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StageId          *uint32      `protobuf:"varint,2,opt,name=stageId" json:"stageId,omitempty"`
	CopyType         *ECopyType   `protobuf:"varint,3,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAcceptStarBonus) Reset()                    { *m = ReqAcceptStarBonus{} }
func (m *ReqAcceptStarBonus) String() string            { return proto.CompactTextString(m) }
func (*ReqAcceptStarBonus) ProtoMessage()               {}
func (*ReqAcceptStarBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ReqAcceptStarBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAcceptStarBonus) GetStageId() uint32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *ReqAcceptStarBonus) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

type RspAcceptStarBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	AddStone         *int32       `protobuf:"varint,2,opt,name=addStone" json:"addStone,omitempty"`
	CurrentStone     *int32       `protobuf:"varint,3,opt,name=currentStone" json:"currentStone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspAcceptStarBonus) Reset()                    { *m = RspAcceptStarBonus{} }
func (m *RspAcceptStarBonus) String() string            { return proto.CompactTextString(m) }
func (*RspAcceptStarBonus) ProtoMessage()               {}
func (*RspAcceptStarBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RspAcceptStarBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAcceptStarBonus) GetAddStone() int32 {
	if m != nil && m.AddStone != nil {
		return *m.AddStone
	}
	return 0
}

func (m *RspAcceptStarBonus) GetCurrentStone() int32 {
	if m != nil && m.CurrentStone != nil {
		return *m.CurrentStone
	}
	return 0
}

// quest通关参数
type ParamQuestPass struct {
	QuestId          *uint32    `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	CopyType         *ECopyType `protobuf:"varint,2,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ParamQuestPass) Reset()                    { *m = ParamQuestPass{} }
func (m *ParamQuestPass) String() string            { return proto.CompactTextString(m) }
func (*ParamQuestPass) ProtoMessage()               {}
func (*ParamQuestPass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ParamQuestPass) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ParamQuestPass) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

// quest通关返回
type RspQuestPass struct {
	QuestId          *uint32 `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RspQuestPass) Reset()                    { *m = RspQuestPass{} }
func (m *RspQuestPass) String() string            { return proto.CompactTextString(m) }
func (*RspQuestPass) ProtoMessage()               {}
func (*RspQuestPass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *RspQuestPass) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

// quest星级参数
type ParamQuestStar struct {
	SQuestId         *uint32    `protobuf:"varint,1,opt,name=sQuestId" json:"sQuestId,omitempty"`
	EQuestId         *uint32    `protobuf:"varint,2,opt,name=eQuestId" json:"eQuestId,omitempty"`
	Star             *int32     `protobuf:"varint,3,opt,name=star" json:"star,omitempty"`
	CopyType         *ECopyType `protobuf:"varint,4,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ParamQuestStar) Reset()                    { *m = ParamQuestStar{} }
func (m *ParamQuestStar) String() string            { return proto.CompactTextString(m) }
func (*ParamQuestStar) ProtoMessage()               {}
func (*ParamQuestStar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ParamQuestStar) GetSQuestId() uint32 {
	if m != nil && m.SQuestId != nil {
		return *m.SQuestId
	}
	return 0
}

func (m *ParamQuestStar) GetEQuestId() uint32 {
	if m != nil && m.EQuestId != nil {
		return *m.EQuestId
	}
	return 0
}

func (m *ParamQuestStar) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *ParamQuestStar) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

// quest星级返回
type RspQuestStar struct {
	Flag             *bool  `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspQuestStar) Reset()                    { *m = RspQuestStar{} }
func (m *RspQuestStar) String() string            { return proto.CompactTextString(m) }
func (*RspQuestStar) ProtoMessage()               {}
func (*RspQuestStar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *RspQuestStar) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

// 设置用户money
type ParamUserMoney struct {
	AddMoney         *int32 `protobuf:"varint,1,opt,name=addMoney" json:"addMoney,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ParamUserMoney) Reset()                    { *m = ParamUserMoney{} }
func (m *ParamUserMoney) String() string            { return proto.CompactTextString(m) }
func (*ParamUserMoney) ProtoMessage()               {}
func (*ParamUserMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ParamUserMoney) GetAddMoney() int32 {
	if m != nil && m.AddMoney != nil {
		return *m.AddMoney
	}
	return 0
}

// money返回
type RspUserMoney struct {
	TotalMoney       *int32 `protobuf:"varint,1,opt,name=totalMoney" json:"totalMoney,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspUserMoney) Reset()                    { *m = RspUserMoney{} }
func (m *RspUserMoney) String() string            { return proto.CompactTextString(m) }
func (*RspUserMoney) ProtoMessage()               {}
func (*RspUserMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RspUserMoney) GetTotalMoney() int32 {
	if m != nil && m.TotalMoney != nil {
		return *m.TotalMoney
	}
	return 0
}

// 设置用户stone
type ParamUserStone struct {
	AddStone         *int32 `protobuf:"varint,1,opt,name=addStone" json:"addStone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ParamUserStone) Reset()                    { *m = ParamUserStone{} }
func (m *ParamUserStone) String() string            { return proto.CompactTextString(m) }
func (*ParamUserStone) ProtoMessage()               {}
func (*ParamUserStone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ParamUserStone) GetAddStone() int32 {
	if m != nil && m.AddStone != nil {
		return *m.AddStone
	}
	return 0
}

// stone 返回
type RspUserStone struct {
	TotalStone       *int32 `protobuf:"varint,1,opt,name=totalStone" json:"totalStone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspUserStone) Reset()                    { *m = RspUserStone{} }
func (m *RspUserStone) String() string            { return proto.CompactTextString(m) }
func (*RspUserStone) ProtoMessage()               {}
func (*RspUserStone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *RspUserStone) GetTotalStone() int32 {
	if m != nil && m.TotalStone != nil {
		return *m.TotalStone
	}
	return 0
}

// 设置用户rank
type ParamUserRank struct {
	AddRank          *int32 `protobuf:"varint,1,opt,name=addRank" json:"addRank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ParamUserRank) Reset()                    { *m = ParamUserRank{} }
func (m *ParamUserRank) String() string            { return proto.CompactTextString(m) }
func (*ParamUserRank) ProtoMessage()               {}
func (*ParamUserRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ParamUserRank) GetAddRank() int32 {
	if m != nil && m.AddRank != nil {
		return *m.AddRank
	}
	return 0
}

// rank 返回
type RspUserRank struct {
	CurRank          *int32 `protobuf:"varint,1,opt,name=curRank" json:"curRank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspUserRank) Reset()                    { *m = RspUserRank{} }
func (m *RspUserRank) String() string            { return proto.CompactTextString(m) }
func (*RspUserRank) ProtoMessage()               {}
func (*RspUserRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *RspUserRank) GetCurRank() int32 {
	if m != nil && m.CurRank != nil {
		return *m.CurRank
	}
	return 0
}

// 设置用户unit
type ParamUserUnit struct {
	UnitList         []uint32      `protobuf:"varint,1,rep,name=unitList" json:"unitList,omitempty"`
	UnitCnt          *int32        `protobuf:"varint,2,opt,name=unitCnt" json:"unitCnt,omitempty"`
	MType            *MaterialType `protobuf:"varint,3,opt,name=mType,enum=bbproto.MaterialType" json:"mType,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ParamUserUnit) Reset()                    { *m = ParamUserUnit{} }
func (m *ParamUserUnit) String() string            { return proto.CompactTextString(m) }
func (*ParamUserUnit) ProtoMessage()               {}
func (*ParamUserUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ParamUserUnit) GetUnitList() []uint32 {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *ParamUserUnit) GetUnitCnt() int32 {
	if m != nil && m.UnitCnt != nil {
		return *m.UnitCnt
	}
	return 0
}

func (m *ParamUserUnit) GetMType() MaterialType {
	if m != nil && m.MType != nil {
		return *m.MType
	}
	return MaterialType_MT_UNIT
}

// unit 返回
type RspUserUnit struct {
	Flag             *bool  `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspUserUnit) Reset()                    { *m = RspUserUnit{} }
func (m *RspUserUnit) String() string            { return proto.CompactTextString(m) }
func (*RspUserUnit) ProtoMessage()               {}
func (*RspUserUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *RspUserUnit) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

// 设置用户friend
type ParamUserFriend struct {
	FriendOut        *int32 `protobuf:"varint,1,opt,name=friendOut" json:"friendOut,omitempty"`
	FriendIn         *int32 `protobuf:"varint,2,opt,name=friendIn" json:"friendIn,omitempty"`
	IsFriend         *int32 `protobuf:"varint,3,opt,name=isFriend" json:"isFriend,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ParamUserFriend) Reset()                    { *m = ParamUserFriend{} }
func (m *ParamUserFriend) String() string            { return proto.CompactTextString(m) }
func (*ParamUserFriend) ProtoMessage()               {}
func (*ParamUserFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ParamUserFriend) GetFriendOut() int32 {
	if m != nil && m.FriendOut != nil {
		return *m.FriendOut
	}
	return 0
}

func (m *ParamUserFriend) GetFriendIn() int32 {
	if m != nil && m.FriendIn != nil {
		return *m.FriendIn
	}
	return 0
}

func (m *ParamUserFriend) GetIsFriend() int32 {
	if m != nil && m.IsFriend != nil {
		return *m.IsFriend
	}
	return 0
}

// friend 返回
type RspUserFriend struct {
	FriendOut        *int32 `protobuf:"varint,1,opt,name=friendOut" json:"friendOut,omitempty"`
	FriendIn         *int32 `protobuf:"varint,2,opt,name=friendIn" json:"friendIn,omitempty"`
	IsFriend         *int32 `protobuf:"varint,3,opt,name=isFriend" json:"isFriend,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RspUserFriend) Reset()                    { *m = RspUserFriend{} }
func (m *RspUserFriend) String() string            { return proto.CompactTextString(m) }
func (*RspUserFriend) ProtoMessage()               {}
func (*RspUserFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *RspUserFriend) GetFriendOut() int32 {
	if m != nil && m.FriendOut != nil {
		return *m.FriendOut
	}
	return 0
}

func (m *RspUserFriend) GetFriendIn() int32 {
	if m != nil && m.FriendIn != nil {
		return *m.FriendIn
	}
	return 0
}

func (m *RspUserFriend) GetIsFriend() int32 {
	if m != nil && m.IsFriend != nil {
		return *m.IsFriend
	}
	return 0
}

// 系统内部设置请求
type ReqStatSettingTool struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	SettingType      *IntervalSettingType `protobuf:"varint,2,opt,name=settingType,enum=bbproto.IntervalSettingType" json:"settingType,omitempty"`
	ParamQuestPass   *ParamQuestPass      `protobuf:"bytes,3,opt,name=paramQuestPass" json:"paramQuestPass,omitempty"`
	ParamQuestStar   *ParamQuestStar      `protobuf:"bytes,4,opt,name=paramQuestStar" json:"paramQuestStar,omitempty"`
	ParamUserMoney   *ParamUserMoney      `protobuf:"bytes,5,opt,name=paramUserMoney" json:"paramUserMoney,omitempty"`
	ParamUserStone   *ParamUserStone      `protobuf:"bytes,6,opt,name=paramUserStone" json:"paramUserStone,omitempty"`
	ParamUserRank    *ParamUserRank       `protobuf:"bytes,7,opt,name=paramUserRank" json:"paramUserRank,omitempty"`
	ParamUserUnit    *ParamUserUnit       `protobuf:"bytes,8,opt,name=paramUserUnit" json:"paramUserUnit,omitempty"`
	ParamUserFriend  *ParamUserFriend     `protobuf:"bytes,9,opt,name=paramUserFriend" json:"paramUserFriend,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ReqStatSettingTool) Reset()                    { *m = ReqStatSettingTool{} }
func (m *ReqStatSettingTool) String() string            { return proto.CompactTextString(m) }
func (*ReqStatSettingTool) ProtoMessage()               {}
func (*ReqStatSettingTool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ReqStatSettingTool) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqStatSettingTool) GetSettingType() IntervalSettingType {
	if m != nil && m.SettingType != nil {
		return *m.SettingType
	}
	return IntervalSettingType_QuestPass
}

func (m *ReqStatSettingTool) GetParamQuestPass() *ParamQuestPass {
	if m != nil {
		return m.ParamQuestPass
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamQuestStar() *ParamQuestStar {
	if m != nil {
		return m.ParamQuestStar
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamUserMoney() *ParamUserMoney {
	if m != nil {
		return m.ParamUserMoney
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamUserStone() *ParamUserStone {
	if m != nil {
		return m.ParamUserStone
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamUserRank() *ParamUserRank {
	if m != nil {
		return m.ParamUserRank
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamUserUnit() *ParamUserUnit {
	if m != nil {
		return m.ParamUserUnit
	}
	return nil
}

func (m *ReqStatSettingTool) GetParamUserFriend() *ParamUserFriend {
	if m != nil {
		return m.ParamUserFriend
	}
	return nil
}

// 系统内部设置返回
type RspStatSettingTool struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RspQuestPass     *RspQuestPass  `protobuf:"bytes,2,opt,name=rspQuestPass" json:"rspQuestPass,omitempty"`
	RspQuestStar     *RspQuestStar  `protobuf:"bytes,3,opt,name=rspQuestStar" json:"rspQuestStar,omitempty"`
	RspUserMoney     *RspUserMoney  `protobuf:"bytes,4,opt,name=rspUserMoney" json:"rspUserMoney,omitempty"`
	RspUserStone     *RspUserStone  `protobuf:"bytes,5,opt,name=rspUserStone" json:"rspUserStone,omitempty"`
	RspUserRank      *RspUserRank   `protobuf:"bytes,6,opt,name=rspUserRank" json:"rspUserRank,omitempty"`
	RspUserUnit      *RspUserUnit   `protobuf:"bytes,7,opt,name=rspUserUnit" json:"rspUserUnit,omitempty"`
	RspUserFriend    *RspUserFriend `protobuf:"bytes,8,opt,name=rspUserFriend" json:"rspUserFriend,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RspStatSettingTool) Reset()                    { *m = RspStatSettingTool{} }
func (m *RspStatSettingTool) String() string            { return proto.CompactTextString(m) }
func (*RspStatSettingTool) ProtoMessage()               {}
func (*RspStatSettingTool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *RspStatSettingTool) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspStatSettingTool) GetRspQuestPass() *RspQuestPass {
	if m != nil {
		return m.RspQuestPass
	}
	return nil
}

func (m *RspStatSettingTool) GetRspQuestStar() *RspQuestStar {
	if m != nil {
		return m.RspQuestStar
	}
	return nil
}

func (m *RspStatSettingTool) GetRspUserMoney() *RspUserMoney {
	if m != nil {
		return m.RspUserMoney
	}
	return nil
}

func (m *RspStatSettingTool) GetRspUserStone() *RspUserStone {
	if m != nil {
		return m.RspUserStone
	}
	return nil
}

func (m *RspStatSettingTool) GetRspUserRank() *RspUserRank {
	if m != nil {
		return m.RspUserRank
	}
	return nil
}

func (m *RspStatSettingTool) GetRspUserUnit() *RspUserUnit {
	if m != nil {
		return m.RspUserUnit
	}
	return nil
}

func (m *RspStatSettingTool) GetRspUserFriend() *RspUserFriend {
	if m != nil {
		return m.RspUserFriend
	}
	return nil
}

// 客户端错误日志
type ReqClientLog struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Msg              *string      `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Stack            *string      `protobuf:"bytes,3,opt,name=stack" json:"stack,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqClientLog) Reset()                    { *m = ReqClientLog{} }
func (m *ReqClientLog) String() string            { return proto.CompactTextString(m) }
func (*ReqClientLog) ProtoMessage()               {}
func (*ReqClientLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ReqClientLog) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqClientLog) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ReqClientLog) GetStack() string {
	if m != nil && m.Stack != nil {
		return *m.Stack
	}
	return ""
}

type RspClientLog struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspClientLog) Reset()                    { *m = RspClientLog{} }
func (m *RspClientLog) String() string            { return proto.CompactTextString(m) }
func (*RspClientLog) ProtoMessage()               {}
func (*RspClientLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *RspClientLog) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type QuestStatus struct {
	QuestId          *uint32  `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	PlayTime         []uint32 `protobuf:"varint,2,rep,name=playTime" json:"playTime,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *QuestStatus) Reset()                    { *m = QuestStatus{} }
func (m *QuestStatus) String() string            { return proto.CompactTextString(m) }
func (*QuestStatus) ProtoMessage()               {}
func (*QuestStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *QuestStatus) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *QuestStatus) GetPlayTime() []uint32 {
	if m != nil {
		return m.PlayTime
	}
	return nil
}

type QuestLog struct {
	StageId          *uint32           `protobuf:"varint,1,opt,name=stageId" json:"stageId,omitempty"`
	QuestId          *uint32           `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	StartTime        *uint32           `protobuf:"varint,3,opt,name=startTime" json:"startTime,omitempty"`
	EndTime          *uint32           `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	DungeonData      *QuestDungeonData `protobuf:"bytes,5,opt,name=dungeonData" json:"dungeonData,omitempty"`
	HelperUserId     *uint32           `protobuf:"varint,6,opt,name=helperUserId" json:"helperUserId,omitempty"`
	HelperUnit       *UserUnit         `protobuf:"bytes,7,opt,name=helperUnit" json:"helperUnit,omitempty"`
	CurrentParty     *int32            `protobuf:"varint,8,opt,name=currentParty" json:"currentParty,omitempty"`
	DropUnits        []*DropUnit       `protobuf:"bytes,9,rep,name=dropUnits" json:"dropUnits,omitempty"`
	GetUnit          []*UserUnit       `protobuf:"bytes,10,rep,name=getUnit" json:"getUnit,omitempty"`
	GetExp           *int32            `protobuf:"varint,11,opt,name=getExp" json:"getExp,omitempty"`
	GetMoney         *int32            `protobuf:"varint,12,opt,name=getMoney" json:"getMoney,omitempty"`
	GetFriendPoint   *int32            `protobuf:"varint,13,opt,name=getFriendPoint" json:"getFriendPoint,omitempty"`
	ContinueTimes    *int32            `protobuf:"varint,14,opt,name=continueTimes" json:"continueTimes,omitempty"`
	ResumeTimes      *int32            `protobuf:"varint,15,opt,name=resumeTimes" json:"resumeTimes,omitempty"`
	State            *EQuestState      `protobuf:"varint,16,opt,name=state,enum=bbproto.EQuestState" json:"state,omitempty"`
	PlayTotal        *int32            `protobuf:"varint,17,opt,name=playTotal" json:"playTotal,omitempty"`
	PlayToday        *int32            `protobuf:"varint,18,opt,name=playToday" json:"playToday,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *QuestLog) Reset()                    { *m = QuestLog{} }
func (m *QuestLog) String() string            { return proto.CompactTextString(m) }
func (*QuestLog) ProtoMessage()               {}
func (*QuestLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *QuestLog) GetStageId() uint32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *QuestLog) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *QuestLog) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *QuestLog) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *QuestLog) GetDungeonData() *QuestDungeonData {
	if m != nil {
		return m.DungeonData
	}
	return nil
}

func (m *QuestLog) GetHelperUserId() uint32 {
	if m != nil && m.HelperUserId != nil {
		return *m.HelperUserId
	}
	return 0
}

func (m *QuestLog) GetHelperUnit() *UserUnit {
	if m != nil {
		return m.HelperUnit
	}
	return nil
}

func (m *QuestLog) GetCurrentParty() int32 {
	if m != nil && m.CurrentParty != nil {
		return *m.CurrentParty
	}
	return 0
}

func (m *QuestLog) GetDropUnits() []*DropUnit {
	if m != nil {
		return m.DropUnits
	}
	return nil
}

func (m *QuestLog) GetGetUnit() []*UserUnit {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

func (m *QuestLog) GetGetExp() int32 {
	if m != nil && m.GetExp != nil {
		return *m.GetExp
	}
	return 0
}

func (m *QuestLog) GetGetMoney() int32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *QuestLog) GetGetFriendPoint() int32 {
	if m != nil && m.GetFriendPoint != nil {
		return *m.GetFriendPoint
	}
	return 0
}

func (m *QuestLog) GetContinueTimes() int32 {
	if m != nil && m.ContinueTimes != nil {
		return *m.ContinueTimes
	}
	return 0
}

func (m *QuestLog) GetResumeTimes() int32 {
	if m != nil && m.ResumeTimes != nil {
		return *m.ResumeTimes
	}
	return 0
}

func (m *QuestLog) GetState() EQuestState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return EQuestState_QS_NEW
}

func (m *QuestLog) GetPlayTotal() int32 {
	if m != nil && m.PlayTotal != nil {
		return *m.PlayTotal
	}
	return 0
}

func (m *QuestLog) GetPlayToday() int32 {
	if m != nil && m.PlayToday != nil {
		return *m.PlayToday
	}
	return 0
}

// ----------------------Quest config data-----------------------------
type NumRange struct {
	Min              *int32 `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max              *int32 `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NumRange) Reset()                    { *m = NumRange{} }
func (m *NumRange) String() string            { return proto.CompactTextString(m) }
func (*NumRange) ProtoMessage()               {}
func (*NumRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *NumRange) GetMin() int32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *NumRange) GetMax() int32 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

type ColorPercent struct {
	Color            *EUnitType `protobuf:"varint,1,opt,name=color,enum=bbproto.EUnitType" json:"color,omitempty"`
	Percent          *float32   `protobuf:"fixed32,2,opt,name=percent" json:"percent,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ColorPercent) Reset()                    { *m = ColorPercent{} }
func (m *ColorPercent) String() string            { return proto.CompactTextString(m) }
func (*ColorPercent) ProtoMessage()               {}
func (*ColorPercent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ColorPercent) GetColor() EUnitType {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return EUnitType_UALL
}

func (m *ColorPercent) GetPercent() float32 {
	if m != nil && m.Percent != nil {
		return *m.Percent
	}
	return 0
}

type StarConfig struct {
	Repeat           *int32     `protobuf:"varint,1,opt,name=repeat" json:"repeat,omitempty"`
	Star             *EGridStar `protobuf:"varint,2,opt,name=star,enum=bbproto.EGridStar" json:"star,omitempty"`
	Coin             *NumRange  `protobuf:"bytes,3,opt,name=coin" json:"coin,omitempty"`
	EnemyPool        []uint32   `protobuf:"varint,4,rep,name=enemyPool" json:"enemyPool,omitempty"`
	EnemyNum         *NumRange  `protobuf:"bytes,5,opt,name=enemyNum" json:"enemyNum,omitempty"`
	Trap             []uint32   `protobuf:"varint,6,rep,name=trap" json:"trap,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *StarConfig) Reset()                    { *m = StarConfig{} }
func (m *StarConfig) String() string            { return proto.CompactTextString(m) }
func (*StarConfig) ProtoMessage()               {}
func (*StarConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *StarConfig) GetRepeat() int32 {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return 0
}

func (m *StarConfig) GetStar() EGridStar {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return EGridStar_GS_EMPTY
}

func (m *StarConfig) GetCoin() *NumRange {
	if m != nil {
		return m.Coin
	}
	return nil
}

func (m *StarConfig) GetEnemyPool() []uint32 {
	if m != nil {
		return m.EnemyPool
	}
	return nil
}

func (m *StarConfig) GetEnemyNum() *NumRange {
	if m != nil {
		return m.EnemyNum
	}
	return nil
}

func (m *StarConfig) GetTrap() []uint32 {
	if m != nil {
		return m.Trap
	}
	return nil
}

type QuestFloorConfig struct {
	Version          *int32        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	TreasureNum      *int32        `protobuf:"varint,2,opt,name=treasureNum" json:"treasureNum,omitempty"`
	TrapNum          *int32        `protobuf:"varint,3,opt,name=trapNum" json:"trapNum,omitempty"`
	EnemyNum         *int32        `protobuf:"varint,4,opt,name=enemyNum" json:"enemyNum,omitempty"`
	KeyNum           *int32        `protobuf:"varint,5,opt,name=keyNum" json:"keyNum,omitempty"`
	Stars            []*StarConfig `protobuf:"bytes,6,rep,name=stars" json:"stars,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *QuestFloorConfig) Reset()                    { *m = QuestFloorConfig{} }
func (m *QuestFloorConfig) String() string            { return proto.CompactTextString(m) }
func (*QuestFloorConfig) ProtoMessage()               {}
func (*QuestFloorConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *QuestFloorConfig) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *QuestFloorConfig) GetTreasureNum() int32 {
	if m != nil && m.TreasureNum != nil {
		return *m.TreasureNum
	}
	return 0
}

func (m *QuestFloorConfig) GetTrapNum() int32 {
	if m != nil && m.TrapNum != nil {
		return *m.TrapNum
	}
	return 0
}

func (m *QuestFloorConfig) GetEnemyNum() int32 {
	if m != nil && m.EnemyNum != nil {
		return *m.EnemyNum
	}
	return 0
}

func (m *QuestFloorConfig) GetKeyNum() int32 {
	if m != nil && m.KeyNum != nil {
		return *m.KeyNum
	}
	return 0
}

func (m *QuestFloorConfig) GetStars() []*StarConfig {
	if m != nil {
		return m.Stars
	}
	return nil
}

type QuestConfig struct {
	QuestId          *uint32             `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	Boss             []*EnemyInfoConf    `protobuf:"bytes,2,rep,name=boss" json:"boss,omitempty"`
	Enemys           []*EnemyInfoConf    `protobuf:"bytes,3,rep,name=enemys" json:"enemys,omitempty"`
	Colors           []*ColorPercent     `protobuf:"bytes,4,rep,name=colors" json:"colors,omitempty"`
	RepeatFloor      *int32              `protobuf:"varint,5,opt,name=repeatFloor" json:"repeatFloor,omitempty"`
	Floors           []*QuestFloorConfig `protobuf:"bytes,6,rep,name=floors" json:"floors,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *QuestConfig) Reset()                    { *m = QuestConfig{} }
func (m *QuestConfig) String() string            { return proto.CompactTextString(m) }
func (*QuestConfig) ProtoMessage()               {}
func (*QuestConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *QuestConfig) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *QuestConfig) GetBoss() []*EnemyInfoConf {
	if m != nil {
		return m.Boss
	}
	return nil
}

func (m *QuestConfig) GetEnemys() []*EnemyInfoConf {
	if m != nil {
		return m.Enemys
	}
	return nil
}

func (m *QuestConfig) GetColors() []*ColorPercent {
	if m != nil {
		return m.Colors
	}
	return nil
}

func (m *QuestConfig) GetRepeatFloor() int32 {
	if m != nil && m.RepeatFloor != nil {
		return *m.RepeatFloor
	}
	return 0
}

func (m *QuestConfig) GetFloors() []*QuestFloorConfig {
	if m != nil {
		return m.Floors
	}
	return nil
}

// -------------------------QuestData------------------------------
type EnemyInfo struct {
	EnemyId          *uint32    `protobuf:"varint,1,opt,name=enemyId" json:"enemyId,omitempty"`
	UnitId           *uint32    `protobuf:"varint,2,opt,name=unitId" json:"unitId,omitempty"`
	Type             *EUnitType `protobuf:"varint,3,opt,name=type,enum=bbproto.EUnitType" json:"type,omitempty"`
	Hp               *int32     `protobuf:"varint,4,opt,name=hp" json:"hp,omitempty"`
	Attack           *int32     `protobuf:"varint,5,opt,name=attack" json:"attack,omitempty"`
	Defense          *int32     `protobuf:"varint,6,opt,name=defense" json:"defense,omitempty"`
	NextAttack       *int32     `protobuf:"varint,7,opt,name=nextAttack" json:"nextAttack,omitempty"`
	CurrentHp        *int32     `protobuf:"varint,8,opt,name=currentHp" json:"currentHp,omitempty"`
	CurrentNext      *int32     `protobuf:"varint,9,opt,name=currentNext" json:"currentNext,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *EnemyInfo) Reset()                    { *m = EnemyInfo{} }
func (m *EnemyInfo) String() string            { return proto.CompactTextString(m) }
func (*EnemyInfo) ProtoMessage()               {}
func (*EnemyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *EnemyInfo) GetEnemyId() uint32 {
	if m != nil && m.EnemyId != nil {
		return *m.EnemyId
	}
	return 0
}

func (m *EnemyInfo) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *EnemyInfo) GetType() EUnitType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EUnitType_UALL
}

func (m *EnemyInfo) GetHp() int32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *EnemyInfo) GetAttack() int32 {
	if m != nil && m.Attack != nil {
		return *m.Attack
	}
	return 0
}

func (m *EnemyInfo) GetDefense() int32 {
	if m != nil && m.Defense != nil {
		return *m.Defense
	}
	return 0
}

func (m *EnemyInfo) GetNextAttack() int32 {
	if m != nil && m.NextAttack != nil {
		return *m.NextAttack
	}
	return 0
}

func (m *EnemyInfo) GetCurrentHp() int32 {
	if m != nil && m.CurrentHp != nil {
		return *m.CurrentHp
	}
	return 0
}

func (m *EnemyInfo) GetCurrentNext() int32 {
	if m != nil && m.CurrentNext != nil {
		return *m.CurrentNext
	}
	return 0
}

type EnemyInfoConf struct {
	Enemy            *EnemyInfo    `protobuf:"bytes,1,opt,name=enemy" json:"enemy,omitempty"`
	DropUnitId       *uint32       `protobuf:"varint,2,opt,name=dropUnitId" json:"dropUnitId,omitempty"`
	DropUnitLevel    *int32        `protobuf:"varint,3,opt,name=dropUnitLevel" json:"dropUnitLevel,omitempty"`
	DropRate         *float32      `protobuf:"fixed32,4,opt,name=dropRate" json:"dropRate,omitempty"`
	AddRate          *float32      `protobuf:"fixed32,5,opt,name=addRate" json:"addRate,omitempty"`
	MType            *MaterialType `protobuf:"varint,6,opt,name=mType,enum=bbproto.MaterialType" json:"mType,omitempty"`
	DropCnt          *NumRange     `protobuf:"bytes,7,opt,name=dropCnt" json:"dropCnt,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *EnemyInfoConf) Reset()                    { *m = EnemyInfoConf{} }
func (m *EnemyInfoConf) String() string            { return proto.CompactTextString(m) }
func (*EnemyInfoConf) ProtoMessage()               {}
func (*EnemyInfoConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *EnemyInfoConf) GetEnemy() *EnemyInfo {
	if m != nil {
		return m.Enemy
	}
	return nil
}

func (m *EnemyInfoConf) GetDropUnitId() uint32 {
	if m != nil && m.DropUnitId != nil {
		return *m.DropUnitId
	}
	return 0
}

func (m *EnemyInfoConf) GetDropUnitLevel() int32 {
	if m != nil && m.DropUnitLevel != nil {
		return *m.DropUnitLevel
	}
	return 0
}

func (m *EnemyInfoConf) GetDropRate() float32 {
	if m != nil && m.DropRate != nil {
		return *m.DropRate
	}
	return 0
}

func (m *EnemyInfoConf) GetAddRate() float32 {
	if m != nil && m.AddRate != nil {
		return *m.AddRate
	}
	return 0
}

func (m *EnemyInfoConf) GetMType() MaterialType {
	if m != nil && m.MType != nil {
		return *m.MType
	}
	return MaterialType_MT_UNIT
}

func (m *EnemyInfoConf) GetDropCnt() *NumRange {
	if m != nil {
		return m.DropCnt
	}
	return nil
}

type DropUnit struct {
	DropId           *uint32       `protobuf:"varint,1,opt,name=dropId" json:"dropId,omitempty"`
	UnitId           *uint32       `protobuf:"varint,2,opt,name=unitId" json:"unitId,omitempty"`
	Level            *int32        `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	AddHp            *int32        `protobuf:"varint,4,opt,name=addHp" json:"addHp,omitempty"`
	AddAttack        *int32        `protobuf:"varint,5,opt,name=addAttack" json:"addAttack,omitempty"`
	AddDefence       *int32        `protobuf:"varint,6,opt,name=addDefence" json:"addDefence,omitempty"`
	DropPos          *int32        `protobuf:"varint,7,opt,name=dropPos" json:"dropPos,omitempty"`
	MType            *MaterialType `protobuf:"varint,8,opt,name=mType,enum=bbproto.MaterialType" json:"mType,omitempty"`
	DropCnt          *int32        `protobuf:"varint,9,opt,name=dropCnt" json:"dropCnt,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DropUnit) Reset()                    { *m = DropUnit{} }
func (m *DropUnit) String() string            { return proto.CompactTextString(m) }
func (*DropUnit) ProtoMessage()               {}
func (*DropUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *DropUnit) GetDropId() uint32 {
	if m != nil && m.DropId != nil {
		return *m.DropId
	}
	return 0
}

func (m *DropUnit) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *DropUnit) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DropUnit) GetAddHp() int32 {
	if m != nil && m.AddHp != nil {
		return *m.AddHp
	}
	return 0
}

func (m *DropUnit) GetAddAttack() int32 {
	if m != nil && m.AddAttack != nil {
		return *m.AddAttack
	}
	return 0
}

func (m *DropUnit) GetAddDefence() int32 {
	if m != nil && m.AddDefence != nil {
		return *m.AddDefence
	}
	return 0
}

func (m *DropUnit) GetDropPos() int32 {
	if m != nil && m.DropPos != nil {
		return *m.DropPos
	}
	return 0
}

func (m *DropUnit) GetMType() MaterialType {
	if m != nil && m.MType != nil {
		return *m.MType
	}
	return MaterialType_MT_UNIT
}

func (m *DropUnit) GetDropCnt() int32 {
	if m != nil && m.DropCnt != nil {
		return *m.DropCnt
	}
	return 0
}

type QuestGrid struct {
	Position         *int32          `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
	Star             *EGridStar      `protobuf:"varint,2,opt,name=star,enum=bbproto.EGridStar" json:"star,omitempty"`
	Color            *int32          `protobuf:"varint,3,opt,name=color" json:"color,omitempty"`
	Type             *EQuestGridType `protobuf:"varint,4,opt,name=type,enum=bbproto.EQuestGridType" json:"type,omitempty"`
	EnemyId          []uint32        `protobuf:"varint,5,rep,name=enemyId" json:"enemyId,omitempty"`
	DropId           *uint32         `protobuf:"varint,6,opt,name=dropId" json:"dropId,omitempty"`
	DropPos          *int32          `protobuf:"varint,7,opt,name=dropPos" json:"dropPos,omitempty"`
	Coins            *int32          `protobuf:"varint,8,opt,name=coins" json:"coins,omitempty"`
	TrapId           *uint32         `protobuf:"varint,9,opt,name=trapId" json:"trapId,omitempty"`
	DangerLevel      *int32          `protobuf:"varint,10,opt,name=dangerLevel" json:"dangerLevel,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *QuestGrid) Reset()                    { *m = QuestGrid{} }
func (m *QuestGrid) String() string            { return proto.CompactTextString(m) }
func (*QuestGrid) ProtoMessage()               {}
func (*QuestGrid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *QuestGrid) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *QuestGrid) GetStar() EGridStar {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return EGridStar_GS_EMPTY
}

func (m *QuestGrid) GetColor() int32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *QuestGrid) GetType() EQuestGridType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EQuestGridType_Q_NONE
}

func (m *QuestGrid) GetEnemyId() []uint32 {
	if m != nil {
		return m.EnemyId
	}
	return nil
}

func (m *QuestGrid) GetDropId() uint32 {
	if m != nil && m.DropId != nil {
		return *m.DropId
	}
	return 0
}

func (m *QuestGrid) GetDropPos() int32 {
	if m != nil && m.DropPos != nil {
		return *m.DropPos
	}
	return 0
}

func (m *QuestGrid) GetCoins() int32 {
	if m != nil && m.Coins != nil {
		return *m.Coins
	}
	return 0
}

func (m *QuestGrid) GetTrapId() uint32 {
	if m != nil && m.TrapId != nil {
		return *m.TrapId
	}
	return 0
}

func (m *QuestGrid) GetDangerLevel() int32 {
	if m != nil && m.DangerLevel != nil {
		return *m.DangerLevel
	}
	return 0
}

type QuestFloor struct {
	GridInfo         []*QuestGrid `protobuf:"bytes,1,rep,name=gridInfo" json:"gridInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *QuestFloor) Reset()                    { *m = QuestFloor{} }
func (m *QuestFloor) String() string            { return proto.CompactTextString(m) }
func (*QuestFloor) ProtoMessage()               {}
func (*QuestFloor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *QuestFloor) GetGridInfo() []*QuestGrid {
	if m != nil {
		return m.GridInfo
	}
	return nil
}

type QuestDungeonData struct {
	QuestId          *uint32       `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	Boss             []*EnemyInfo  `protobuf:"bytes,2,rep,name=boss" json:"boss,omitempty"`
	Enemys           []*EnemyInfo  `protobuf:"bytes,3,rep,name=enemys" json:"enemys,omitempty"`
	Colors           []byte        `protobuf:"bytes,4,opt,name=colors" json:"colors,omitempty"`
	Drop             []*DropUnit   `protobuf:"bytes,5,rep,name=drop" json:"drop,omitempty"`
	Floors           []*QuestFloor `protobuf:"bytes,6,rep,name=floors" json:"floors,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *QuestDungeonData) Reset()                    { *m = QuestDungeonData{} }
func (m *QuestDungeonData) String() string            { return proto.CompactTextString(m) }
func (*QuestDungeonData) ProtoMessage()               {}
func (*QuestDungeonData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *QuestDungeonData) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *QuestDungeonData) GetBoss() []*EnemyInfo {
	if m != nil {
		return m.Boss
	}
	return nil
}

func (m *QuestDungeonData) GetEnemys() []*EnemyInfo {
	if m != nil {
		return m.Enemys
	}
	return nil
}

func (m *QuestDungeonData) GetColors() []byte {
	if m != nil {
		return m.Colors
	}
	return nil
}

func (m *QuestDungeonData) GetDrop() []*DropUnit {
	if m != nil {
		return m.Drop
	}
	return nil
}

func (m *QuestDungeonData) GetFloors() []*QuestFloor {
	if m != nil {
		return m.Floors
	}
	return nil
}

// ============== QuestMapData -  client data also used=======================//
type Position struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *Position) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Position) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type QuestBoost struct {
	Type             *QuestBoostType `protobuf:"varint,1,opt,name=type,enum=bbproto.QuestBoostType" json:"type,omitempty"`
	Value            *int32          `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *QuestBoost) Reset()                    { *m = QuestBoost{} }
func (m *QuestBoost) String() string            { return proto.CompactTextString(m) }
func (*QuestBoost) ProtoMessage()               {}
func (*QuestBoost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *QuestBoost) GetType() QuestBoostType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return QuestBoostType_QB_BOOST_NONE
}

func (m *QuestBoost) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type QuestInfo struct {
	Id               *uint32      `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	State            *EQuestState `protobuf:"varint,2,opt,name=state,enum=bbproto.EQuestState" json:"state,omitempty"`
	No               *int32       `protobuf:"varint,3,opt,name=no" json:"no,omitempty"`
	Name             *string      `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Story            *string      `protobuf:"bytes,5,opt,name=story" json:"story,omitempty"`
	Stamina          *int32       `protobuf:"varint,6,opt,name=stamina" json:"stamina,omitempty"`
	Floor            *int32       `protobuf:"varint,7,opt,name=floor" json:"floor,omitempty"`
	RewardExp        *int32       `protobuf:"varint,8,opt,name=rewardExp" json:"rewardExp,omitempty"`
	RewardMoney      *int32       `protobuf:"varint,9,opt,name=rewardMoney" json:"rewardMoney,omitempty"`
	BossId           []uint32     `protobuf:"varint,10,rep,name=bossId" json:"bossId,omitempty"`
	EnemyId          []uint32     `protobuf:"varint,11,rep,name=enemyId" json:"enemyId,omitempty"`
	Pos              *Position    `protobuf:"bytes,12,opt,name=pos" json:"pos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *QuestInfo) Reset()                    { *m = QuestInfo{} }
func (m *QuestInfo) String() string            { return proto.CompactTextString(m) }
func (*QuestInfo) ProtoMessage()               {}
func (*QuestInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *QuestInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *QuestInfo) GetState() EQuestState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return EQuestState_QS_NEW
}

func (m *QuestInfo) GetNo() int32 {
	if m != nil && m.No != nil {
		return *m.No
	}
	return 0
}

func (m *QuestInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QuestInfo) GetStory() string {
	if m != nil && m.Story != nil {
		return *m.Story
	}
	return ""
}

func (m *QuestInfo) GetStamina() int32 {
	if m != nil && m.Stamina != nil {
		return *m.Stamina
	}
	return 0
}

func (m *QuestInfo) GetFloor() int32 {
	if m != nil && m.Floor != nil {
		return *m.Floor
	}
	return 0
}

func (m *QuestInfo) GetRewardExp() int32 {
	if m != nil && m.RewardExp != nil {
		return *m.RewardExp
	}
	return 0
}

func (m *QuestInfo) GetRewardMoney() int32 {
	if m != nil && m.RewardMoney != nil {
		return *m.RewardMoney
	}
	return 0
}

func (m *QuestInfo) GetBossId() []uint32 {
	if m != nil {
		return m.BossId
	}
	return nil
}

func (m *QuestInfo) GetEnemyId() []uint32 {
	if m != nil {
		return m.EnemyId
	}
	return nil
}

func (m *QuestInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

type Period struct {
	StartTime        *uint32 `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	EndTime          *uint32 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Period) Reset()                    { *m = Period{} }
func (m *Period) String() string            { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()               {}
func (*Period) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *Period) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *Period) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type StageInfo struct {
	Version          *int32       `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CityId           *uint32      `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Id               *uint32      `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	State            *EQuestState `protobuf:"varint,4,opt,name=state,enum=bbproto.EQuestState" json:"state,omitempty"`
	Type             *QuestType   `protobuf:"varint,5,opt,name=type,enum=bbproto.QuestType" json:"type,omitempty"`
	StageName        *string      `protobuf:"bytes,6,opt,name=stageName" json:"stageName,omitempty"`
	Description      *string      `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	StartTime        *uint32      `protobuf:"varint,8,opt,name=startTime" json:"startTime,omitempty"`
	EndTime          *uint32      `protobuf:"varint,9,opt,name=endTime" json:"endTime,omitempty"`
	Boost            *QuestBoost  `protobuf:"bytes,10,opt,name=boost" json:"boost,omitempty"`
	Pos              *Position    `protobuf:"bytes,11,opt,name=pos" json:"pos,omitempty"`
	Quests           []*QuestInfo `protobuf:"bytes,12,rep,name=quests" json:"quests,omitempty"`
	ValidTime        []*Period    `protobuf:"bytes,13,rep,name=validTime" json:"validTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *StageInfo) Reset()                    { *m = StageInfo{} }
func (m *StageInfo) String() string            { return proto.CompactTextString(m) }
func (*StageInfo) ProtoMessage()               {}
func (*StageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *StageInfo) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *StageInfo) GetCityId() uint32 {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return 0
}

func (m *StageInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *StageInfo) GetState() EQuestState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return EQuestState_QS_NEW
}

func (m *StageInfo) GetType() QuestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return QuestType_E_QUEST_STORY
}

func (m *StageInfo) GetStageName() string {
	if m != nil && m.StageName != nil {
		return *m.StageName
	}
	return ""
}

func (m *StageInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *StageInfo) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *StageInfo) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *StageInfo) GetBoost() *QuestBoost {
	if m != nil {
		return m.Boost
	}
	return nil
}

func (m *StageInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *StageInfo) GetQuests() []*QuestInfo {
	if m != nil {
		return m.Quests
	}
	return nil
}

func (m *StageInfo) GetValidTime() []*Period {
	if m != nil {
		return m.ValidTime
	}
	return nil
}

type CityInfo struct {
	Version          *int32       `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Id               *uint32      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	State            *int32       `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	CityName         *string      `protobuf:"bytes,4,opt,name=cityName" json:"cityName,omitempty"`
	Description      *string      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Pos              *Position    `protobuf:"bytes,6,opt,name=pos" json:"pos,omitempty"`
	Stages           []*StageInfo `protobuf:"bytes,7,rep,name=stages" json:"stages,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CityInfo) Reset()                    { *m = CityInfo{} }
func (m *CityInfo) String() string            { return proto.CompactTextString(m) }
func (*CityInfo) ProtoMessage()               {}
func (*CityInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *CityInfo) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CityInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CityInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *CityInfo) GetCityName() string {
	if m != nil && m.CityName != nil {
		return *m.CityName
	}
	return ""
}

func (m *CityInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CityInfo) GetPos() *Position {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CityInfo) GetStages() []*StageInfo {
	if m != nil {
		return m.Stages
	}
	return nil
}

type WorldMapInfo struct {
	Version          *int32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Id               *uint32     `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Citylist         []*CityInfo `protobuf:"bytes,3,rep,name=citylist" json:"citylist,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *WorldMapInfo) Reset()                    { *m = WorldMapInfo{} }
func (m *WorldMapInfo) String() string            { return proto.CompactTextString(m) }
func (*WorldMapInfo) ProtoMessage()               {}
func (*WorldMapInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *WorldMapInfo) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *WorldMapInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *WorldMapInfo) GetCitylist() []*CityInfo {
	if m != nil {
		return m.Citylist
	}
	return nil
}

type QuestStarObj struct {
	QuestId          *uint32 `protobuf:"varint,1,opt,name=questId" json:"questId,omitempty"`
	Star             *int32  `protobuf:"varint,2,opt,name=star" json:"star,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QuestStarObj) Reset()                    { *m = QuestStarObj{} }
func (m *QuestStarObj) String() string            { return proto.CompactTextString(m) }
func (*QuestStarObj) ProtoMessage()               {}
func (*QuestStarObj) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *QuestStarObj) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *QuestStarObj) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

type CopyPassInfo struct {
	QuestStarList        []*QuestStarObj `protobuf:"bytes,1,rep,name=questStarList" json:"questStarList,omitempty"`
	StageIdList          []uint32        `protobuf:"varint,2,rep,name=stageIdList" json:"stageIdList,omitempty"`
	AcceptBonusStageList []uint32        `protobuf:"varint,3,rep,name=acceptBonusStageList" json:"acceptBonusStageList,omitempty"`
	XXX_unrecognized     []byte          `json:"-"`
}

func (m *CopyPassInfo) Reset()                    { *m = CopyPassInfo{} }
func (m *CopyPassInfo) String() string            { return proto.CompactTextString(m) }
func (*CopyPassInfo) ProtoMessage()               {}
func (*CopyPassInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *CopyPassInfo) GetQuestStarList() []*QuestStarObj {
	if m != nil {
		return m.QuestStarList
	}
	return nil
}

func (m *CopyPassInfo) GetStageIdList() []uint32 {
	if m != nil {
		return m.StageIdList
	}
	return nil
}

func (m *CopyPassInfo) GetAcceptBonusStageList() []uint32 {
	if m != nil {
		return m.AcceptBonusStageList
	}
	return nil
}

type ReqStartQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StageId          *uint32      `protobuf:"varint,2,opt,name=stageId" json:"stageId,omitempty"`
	QuestId          *uint32      `protobuf:"varint,3,opt,name=questId" json:"questId,omitempty"`
	HelperUserId     *uint32      `protobuf:"varint,4,opt,name=helperUserId" json:"helperUserId,omitempty"`
	HelperUnit       *UserUnit    `protobuf:"bytes,5,opt,name=helperUnit" json:"helperUnit,omitempty"`
	CurrentParty     *int32       `protobuf:"varint,6,opt,name=currentParty" json:"currentParty,omitempty"`
	RestartNew       *int32       `protobuf:"varint,7,opt,name=restartNew" json:"restartNew,omitempty"`
	IsUserGuide      *int32       `protobuf:"varint,8,opt,name=isUserGuide" json:"isUserGuide,omitempty"`
	CopyType         *ECopyType   `protobuf:"varint,9,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqStartQuest) Reset()                    { *m = ReqStartQuest{} }
func (m *ReqStartQuest) String() string            { return proto.CompactTextString(m) }
func (*ReqStartQuest) ProtoMessage()               {}
func (*ReqStartQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *ReqStartQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqStartQuest) GetStageId() uint32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *ReqStartQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqStartQuest) GetHelperUserId() uint32 {
	if m != nil && m.HelperUserId != nil {
		return *m.HelperUserId
	}
	return 0
}

func (m *ReqStartQuest) GetHelperUnit() *UserUnit {
	if m != nil {
		return m.HelperUnit
	}
	return nil
}

func (m *ReqStartQuest) GetCurrentParty() int32 {
	if m != nil && m.CurrentParty != nil {
		return *m.CurrentParty
	}
	return 0
}

func (m *ReqStartQuest) GetRestartNew() int32 {
	if m != nil && m.RestartNew != nil {
		return *m.RestartNew
	}
	return 0
}

func (m *ReqStartQuest) GetIsUserGuide() int32 {
	if m != nil && m.IsUserGuide != nil {
		return *m.IsUserGuide
	}
	return 0
}

func (m *ReqStartQuest) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

type RspStartQuest struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StaminaNow       *int32            `protobuf:"varint,2,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaRecover   *uint32           `protobuf:"varint,3,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	DungeonData      *QuestDungeonData `protobuf:"bytes,4,opt,name=dungeonData" json:"dungeonData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RspStartQuest) Reset()                    { *m = RspStartQuest{} }
func (m *RspStartQuest) String() string            { return proto.CompactTextString(m) }
func (*RspStartQuest) ProtoMessage()               {}
func (*RspStartQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *RspStartQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspStartQuest) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspStartQuest) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *RspStartQuest) GetDungeonData() *QuestDungeonData {
	if m != nil {
		return m.DungeonData
	}
	return nil
}

type ReqClearQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	SecurityKey      *uint32      `protobuf:"varint,3,opt,name=securityKey" json:"securityKey,omitempty"`
	GetMoney         *int32       `protobuf:"varint,4,opt,name=getMoney" json:"getMoney,omitempty"`
	GetUnit          []uint32     `protobuf:"varint,5,rep,name=getUnit" json:"getUnit,omitempty"`
	HitGrid          []uint32     `protobuf:"varint,6,rep,name=hitGrid" json:"hitGrid,omitempty"`
	TotalHp          *int32       `protobuf:"varint,7,opt,name=totalHp" json:"totalHp,omitempty"`
	LeftHp           *int32       `protobuf:"varint,8,opt,name=leftHp" json:"leftHp,omitempty"`
	CopyType         *ECopyType   `protobuf:"varint,9,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqClearQuest) Reset()                    { *m = ReqClearQuest{} }
func (m *ReqClearQuest) String() string            { return proto.CompactTextString(m) }
func (*ReqClearQuest) ProtoMessage()               {}
func (*ReqClearQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *ReqClearQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqClearQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqClearQuest) GetSecurityKey() uint32 {
	if m != nil && m.SecurityKey != nil {
		return *m.SecurityKey
	}
	return 0
}

func (m *ReqClearQuest) GetGetMoney() int32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *ReqClearQuest) GetGetUnit() []uint32 {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

func (m *ReqClearQuest) GetHitGrid() []uint32 {
	if m != nil {
		return m.HitGrid
	}
	return nil
}

func (m *ReqClearQuest) GetTotalHp() int32 {
	if m != nil && m.TotalHp != nil {
		return *m.TotalHp
	}
	return 0
}

func (m *ReqClearQuest) GetLeftHp() int32 {
	if m != nil && m.LeftHp != nil {
		return *m.LeftHp
	}
	return 0
}

func (m *ReqClearQuest) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

type RspClearQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Rank             *int32       `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	RankAdd          *int32       `protobuf:"varint,3,opt,name=rankAdd" json:"rankAdd,omitempty"`
	Exp              *int32       `protobuf:"varint,4,opt,name=exp" json:"exp,omitempty"`
	Money            *int32       `protobuf:"varint,5,opt,name=money" json:"money,omitempty"`
	FriendPoint      *int32       `protobuf:"varint,6,opt,name=friendPoint" json:"friendPoint,omitempty"`
	StaminaNow       *int32       `protobuf:"varint,7,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaMax       *int32       `protobuf:"varint,8,opt,name=staminaMax" json:"staminaMax,omitempty"`
	StaminaRecover   *uint32      `protobuf:"varint,9,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	GotMoney         *int32       `protobuf:"varint,10,opt,name=gotMoney" json:"gotMoney,omitempty"`
	GotExp           *int32       `protobuf:"varint,11,opt,name=gotExp" json:"gotExp,omitempty"`
	GotStone         *int32       `protobuf:"varint,12,opt,name=gotStone" json:"gotStone,omitempty"`
	GotFriendPoint   *int32       `protobuf:"varint,13,opt,name=gotFriendPoint" json:"gotFriendPoint,omitempty"`
	GotUnit          []*UserUnit  `protobuf:"bytes,14,rep,name=gotUnit" json:"gotUnit,omitempty"`
	CostMaxAdd       *int32       `protobuf:"varint,15,opt,name=costMaxAdd" json:"costMaxAdd,omitempty"`
	UnitMaxAdd       *int32       `protobuf:"varint,16,opt,name=unitMaxAdd" json:"unitMaxAdd,omitempty"`
	FriendMaxAdd     *int32       `protobuf:"varint,17,opt,name=friendMaxAdd" json:"friendMaxAdd,omitempty"`
	StaminaMaxAdd    *int32       `protobuf:"varint,18,opt,name=staminaMaxAdd" json:"staminaMaxAdd,omitempty"`
	CurStar          *int32       `protobuf:"varint,19,opt,name=curStar" json:"curStar,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspClearQuest) Reset()                    { *m = RspClearQuest{} }
func (m *RspClearQuest) String() string            { return proto.CompactTextString(m) }
func (*RspClearQuest) ProtoMessage()               {}
func (*RspClearQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *RspClearQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspClearQuest) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RspClearQuest) GetRankAdd() int32 {
	if m != nil && m.RankAdd != nil {
		return *m.RankAdd
	}
	return 0
}

func (m *RspClearQuest) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *RspClearQuest) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspClearQuest) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *RspClearQuest) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspClearQuest) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *RspClearQuest) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *RspClearQuest) GetGotMoney() int32 {
	if m != nil && m.GotMoney != nil {
		return *m.GotMoney
	}
	return 0
}

func (m *RspClearQuest) GetGotExp() int32 {
	if m != nil && m.GotExp != nil {
		return *m.GotExp
	}
	return 0
}

func (m *RspClearQuest) GetGotStone() int32 {
	if m != nil && m.GotStone != nil {
		return *m.GotStone
	}
	return 0
}

func (m *RspClearQuest) GetGotFriendPoint() int32 {
	if m != nil && m.GotFriendPoint != nil {
		return *m.GotFriendPoint
	}
	return 0
}

func (m *RspClearQuest) GetGotUnit() []*UserUnit {
	if m != nil {
		return m.GotUnit
	}
	return nil
}

func (m *RspClearQuest) GetCostMaxAdd() int32 {
	if m != nil && m.CostMaxAdd != nil {
		return *m.CostMaxAdd
	}
	return 0
}

func (m *RspClearQuest) GetUnitMaxAdd() int32 {
	if m != nil && m.UnitMaxAdd != nil {
		return *m.UnitMaxAdd
	}
	return 0
}

func (m *RspClearQuest) GetFriendMaxAdd() int32 {
	if m != nil && m.FriendMaxAdd != nil {
		return *m.FriendMaxAdd
	}
	return 0
}

func (m *RspClearQuest) GetStaminaMaxAdd() int32 {
	if m != nil && m.StaminaMaxAdd != nil {
		return *m.StaminaMaxAdd
	}
	return 0
}

func (m *RspClearQuest) GetCurStar() int32 {
	if m != nil && m.CurStar != nil {
		return *m.CurStar
	}
	return 0
}

type ReqRetireQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	IsGameOver       *int32       `protobuf:"varint,3,opt,name=isGameOver" json:"isGameOver,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqRetireQuest) Reset()                    { *m = ReqRetireQuest{} }
func (m *ReqRetireQuest) String() string            { return proto.CompactTextString(m) }
func (*ReqRetireQuest) ProtoMessage()               {}
func (*ReqRetireQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *ReqRetireQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqRetireQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqRetireQuest) GetIsGameOver() int32 {
	if m != nil && m.IsGameOver != nil {
		return *m.IsGameOver
	}
	return 0
}

type RspRetireQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StaminaNow       *int32       `protobuf:"varint,2,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaRecover   *uint32      `protobuf:"varint,3,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspRetireQuest) Reset()                    { *m = RspRetireQuest{} }
func (m *RspRetireQuest) String() string            { return proto.CompactTextString(m) }
func (*RspRetireQuest) ProtoMessage()               {}
func (*RspRetireQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *RspRetireQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspRetireQuest) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspRetireQuest) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

type ReqResumeQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqResumeQuest) Reset()                    { *m = ReqResumeQuest{} }
func (m *ReqResumeQuest) String() string            { return proto.CompactTextString(m) }
func (*ReqResumeQuest) ProtoMessage()               {}
func (*ReqResumeQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *ReqResumeQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqResumeQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type RspResumeQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Stone            *int32       `protobuf:"varint,2,opt,name=stone" json:"stone,omitempty"`
	UsedVipCnt       *int32       `protobuf:"varint,3,opt,name=usedVipCnt" json:"usedVipCnt,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspResumeQuest) Reset()                    { *m = RspResumeQuest{} }
func (m *RspResumeQuest) String() string            { return proto.CompactTextString(m) }
func (*RspResumeQuest) ProtoMessage()               {}
func (*RspResumeQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *RspResumeQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspResumeQuest) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspResumeQuest) GetUsedVipCnt() int32 {
	if m != nil && m.UsedVipCnt != nil {
		return *m.UsedVipCnt
	}
	return 0
}

type ReqRedoQuest struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	Floor            *int32       `protobuf:"varint,3,opt,name=floor" json:"floor,omitempty"`
	GetColors        *int32       `protobuf:"varint,4,opt,name=getColors" json:"getColors,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqRedoQuest) Reset()                    { *m = ReqRedoQuest{} }
func (m *ReqRedoQuest) String() string            { return proto.CompactTextString(m) }
func (*ReqRedoQuest) ProtoMessage()               {}
func (*ReqRedoQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *ReqRedoQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqRedoQuest) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqRedoQuest) GetFloor() int32 {
	if m != nil && m.Floor != nil {
		return *m.Floor
	}
	return 0
}

func (m *ReqRedoQuest) GetGetColors() int32 {
	if m != nil && m.GetColors != nil {
		return *m.GetColors
	}
	return 0
}

type RspRedoQuest struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Stone            *int32            `protobuf:"varint,2,opt,name=stone" json:"stone,omitempty"`
	DungeonData      *QuestDungeonData `protobuf:"bytes,3,opt,name=dungeonData" json:"dungeonData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RspRedoQuest) Reset()                    { *m = RspRedoQuest{} }
func (m *RspRedoQuest) String() string            { return proto.CompactTextString(m) }
func (*RspRedoQuest) ProtoMessage()               {}
func (*RspRedoQuest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *RspRedoQuest) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspRedoQuest) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspRedoQuest) GetDungeonData() *QuestDungeonData {
	if m != nil {
		return m.DungeonData
	}
	return nil
}

type ReqGetQuestColors struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	Count            *int32       `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetQuestColors) Reset()                    { *m = ReqGetQuestColors{} }
func (m *ReqGetQuestColors) String() string            { return proto.CompactTextString(m) }
func (*ReqGetQuestColors) ProtoMessage()               {}
func (*ReqGetQuestColors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *ReqGetQuestColors) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetQuestColors) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqGetQuestColors) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type RspGetQuestColors struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	Colors           []byte       `protobuf:"bytes,3,opt,name=colors" json:"colors,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetQuestColors) Reset()                    { *m = RspGetQuestColors{} }
func (m *RspGetQuestColors) String() string            { return proto.CompactTextString(m) }
func (*RspGetQuestColors) ProtoMessage()               {}
func (*RspGetQuestColors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *RspGetQuestColors) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetQuestColors) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *RspGetQuestColors) GetColors() []byte {
	if m != nil {
		return m.Colors
	}
	return nil
}

type ReqGetQuestInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetQuestInfo) Reset()                    { *m = ReqGetQuestInfo{} }
func (m *ReqGetQuestInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqGetQuestInfo) ProtoMessage()               {}
func (*ReqGetQuestInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *ReqGetQuestInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspGetQuestInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	CurrentStatus    *uint32      `protobuf:"varint,3,opt,name=currentStatus" json:"currentStatus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetQuestInfo) Reset()                    { *m = RspGetQuestInfo{} }
func (m *RspGetQuestInfo) String() string            { return proto.CompactTextString(m) }
func (*RspGetQuestInfo) ProtoMessage()               {}
func (*RspGetQuestInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *RspGetQuestInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetQuestInfo) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *RspGetQuestInfo) GetCurrentStatus() uint32 {
	if m != nil && m.CurrentStatus != nil {
		return *m.CurrentStatus
	}
	return 0
}

// =========== Trap ====================================================================//
type TrapInjuredValue struct {
	TrapIndex        *int32   `protobuf:"varint,1,opt,name=trapIndex" json:"trapIndex,omitempty"`
	TrapLevel        *int32   `protobuf:"varint,2,opt,name=trapLevel" json:"trapLevel,omitempty"`
	TrapValue        *float32 `protobuf:"fixed32,3,opt,name=trapValue" json:"trapValue,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TrapInjuredValue) Reset()                    { *m = TrapInjuredValue{} }
func (m *TrapInjuredValue) String() string            { return proto.CompactTextString(m) }
func (*TrapInjuredValue) ProtoMessage()               {}
func (*TrapInjuredValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *TrapInjuredValue) GetTrapIndex() int32 {
	if m != nil && m.TrapIndex != nil {
		return *m.TrapIndex
	}
	return 0
}

func (m *TrapInjuredValue) GetTrapLevel() int32 {
	if m != nil && m.TrapLevel != nil {
		return *m.TrapLevel
	}
	return 0
}

func (m *TrapInjuredValue) GetTrapValue() float32 {
	if m != nil && m.TrapValue != nil {
		return *m.TrapValue
	}
	return 0
}

type TrapInfo struct {
	TrapID           *uint32             `protobuf:"varint,1,req,name=trapID" json:"trapID,omitempty"`
	TrapType         *ETrapType          `protobuf:"varint,2,opt,name=trapType,enum=bbproto.ETrapType" json:"trapType,omitempty"`
	ValueIndex       *int32              `protobuf:"varint,3,opt,name=valueIndex" json:"valueIndex,omitempty"`
	InjuredInfo      []*TrapInjuredValue `protobuf:"bytes,4,rep,name=injuredInfo" json:"injuredInfo,omitempty"`
	EffectType       *int32              `protobuf:"varint,5,opt,name=effectType" json:"effectType,omitempty"`
	Round            *int32              `protobuf:"varint,6,opt,name=round" json:"round,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *TrapInfo) Reset()                    { *m = TrapInfo{} }
func (m *TrapInfo) String() string            { return proto.CompactTextString(m) }
func (*TrapInfo) ProtoMessage()               {}
func (*TrapInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *TrapInfo) GetTrapID() uint32 {
	if m != nil && m.TrapID != nil {
		return *m.TrapID
	}
	return 0
}

func (m *TrapInfo) GetTrapType() ETrapType {
	if m != nil && m.TrapType != nil {
		return *m.TrapType
	}
	return ETrapType_Move
}

func (m *TrapInfo) GetValueIndex() int32 {
	if m != nil && m.ValueIndex != nil {
		return *m.ValueIndex
	}
	return 0
}

func (m *TrapInfo) GetInjuredInfo() []*TrapInjuredValue {
	if m != nil {
		return m.InjuredInfo
	}
	return nil
}

func (m *TrapInfo) GetEffectType() int32 {
	if m != nil && m.EffectType != nil {
		return *m.EffectType
	}
	return 0
}

func (m *TrapInfo) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

// ===========store disk data============================================================
type StoreBattleData struct {
	ColorIndex         *int32             `protobuf:"varint,1,req,name=colorIndex" json:"colorIndex,omitempty"`
	Hp                 *int32             `protobuf:"varint,2,opt,name=hp" json:"hp,omitempty"`
	Sp                 *int32             `protobuf:"varint,3,opt,name=sp" json:"sp,omitempty"`
	IsBattle           *int32             `protobuf:"varint,4,opt,name=isBattle" json:"isBattle,omitempty"`
	XCoordinate        *int32             `protobuf:"varint,5,opt,name=xCoordinate" json:"xCoordinate,omitempty"`
	YCoordinate        *int32             `protobuf:"varint,6,opt,name=yCoordinate" json:"yCoordinate,omitempty"`
	QuestData          []*ClearQuestParam `protobuf:"bytes,7,rep,name=questData" json:"questData,omitempty"`
	EnemyInfo          []*EnemyInfo       `protobuf:"bytes,8,rep,name=enemyInfo" json:"enemyInfo,omitempty"`
	HitKey             *bool              `protobuf:"varint,9,opt,name=hitKey" json:"hitKey,omitempty"`
	AttackRound        *int32             `protobuf:"varint,10,opt,name=attackRound" json:"attackRound,omitempty"`
	ActiveSkillCooling []int32            `protobuf:"varint,11,rep,name=activeSkillCooling" json:"activeSkillCooling,omitempty"`
	RecoveBattleStep   *RecoveBattleStep  `protobuf:"varint,12,opt,name=recoveBattleStep,enum=bbproto.RecoveBattleStep" json:"recoveBattleStep,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *StoreBattleData) Reset()                    { *m = StoreBattleData{} }
func (m *StoreBattleData) String() string            { return proto.CompactTextString(m) }
func (*StoreBattleData) ProtoMessage()               {}
func (*StoreBattleData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *StoreBattleData) GetColorIndex() int32 {
	if m != nil && m.ColorIndex != nil {
		return *m.ColorIndex
	}
	return 0
}

func (m *StoreBattleData) GetHp() int32 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *StoreBattleData) GetSp() int32 {
	if m != nil && m.Sp != nil {
		return *m.Sp
	}
	return 0
}

func (m *StoreBattleData) GetIsBattle() int32 {
	if m != nil && m.IsBattle != nil {
		return *m.IsBattle
	}
	return 0
}

func (m *StoreBattleData) GetXCoordinate() int32 {
	if m != nil && m.XCoordinate != nil {
		return *m.XCoordinate
	}
	return 0
}

func (m *StoreBattleData) GetYCoordinate() int32 {
	if m != nil && m.YCoordinate != nil {
		return *m.YCoordinate
	}
	return 0
}

func (m *StoreBattleData) GetQuestData() []*ClearQuestParam {
	if m != nil {
		return m.QuestData
	}
	return nil
}

func (m *StoreBattleData) GetEnemyInfo() []*EnemyInfo {
	if m != nil {
		return m.EnemyInfo
	}
	return nil
}

func (m *StoreBattleData) GetHitKey() bool {
	if m != nil && m.HitKey != nil {
		return *m.HitKey
	}
	return false
}

func (m *StoreBattleData) GetAttackRound() int32 {
	if m != nil && m.AttackRound != nil {
		return *m.AttackRound
	}
	return 0
}

func (m *StoreBattleData) GetActiveSkillCooling() []int32 {
	if m != nil {
		return m.ActiveSkillCooling
	}
	return nil
}

func (m *StoreBattleData) GetRecoveBattleStep() RecoveBattleStep {
	if m != nil && m.RecoveBattleStep != nil {
		return *m.RecoveBattleStep
	}
	return RecoveBattleStep_RB_None
}

type ClearQuestParam struct {
	QuestID          *uint32    `protobuf:"varint,1,req,name=questID" json:"questID,omitempty"`
	GetMoney         *int32     `protobuf:"varint,2,opt,name=getMoney" json:"getMoney,omitempty"`
	GetUnit          []uint32   `protobuf:"varint,3,rep,name=getUnit" json:"getUnit,omitempty"`
	HitGrid          []uint32   `protobuf:"varint,4,rep,name=hitGrid" json:"hitGrid,omitempty"`
	CopyType         *ECopyType `protobuf:"varint,5,opt,name=copyType,enum=bbproto.ECopyType" json:"copyType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ClearQuestParam) Reset()                    { *m = ClearQuestParam{} }
func (m *ClearQuestParam) String() string            { return proto.CompactTextString(m) }
func (*ClearQuestParam) ProtoMessage()               {}
func (*ClearQuestParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *ClearQuestParam) GetQuestID() uint32 {
	if m != nil && m.QuestID != nil {
		return *m.QuestID
	}
	return 0
}

func (m *ClearQuestParam) GetGetMoney() int32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *ClearQuestParam) GetGetUnit() []uint32 {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

func (m *ClearQuestParam) GetHitGrid() []uint32 {
	if m != nil {
		return m.HitGrid
	}
	return nil
}

func (m *ClearQuestParam) GetCopyType() ECopyType {
	if m != nil && m.CopyType != nil {
		return *m.CopyType
	}
	return ECopyType_CT_NORMAL
}

type AttackInfoProto struct {
	AttackID             *int32   `protobuf:"varint,1,req,name=attackID" json:"attackID,omitempty"`
	UserUnitID           *string  `protobuf:"bytes,2,opt,name=userUnitID" json:"userUnitID,omitempty"`
	UserPos              *int32   `protobuf:"varint,3,opt,name=userPos" json:"userPos,omitempty"`
	NeedCardNumber       *int32   `protobuf:"varint,4,opt,name=needCardNumber" json:"needCardNumber,omitempty"`
	SkillID              *int32   `protobuf:"varint,5,opt,name=skillID" json:"skillID,omitempty"`
	AttackType           *int32   `protobuf:"varint,6,opt,name=attackType" json:"attackType,omitempty"`
	AttackRace           *int32   `protobuf:"varint,7,opt,name=attackRace" json:"attackRace,omitempty"`
	AttackRange          *int32   `protobuf:"varint,8,opt,name=attackRange" json:"attackRange,omitempty"`
	AttackValue          *float32 `protobuf:"fixed32,9,opt,name=attackValue" json:"attackValue,omitempty"`
	ContinueAttackMultip *int32   `protobuf:"varint,10,opt,name=continueAttackMultip" json:"continueAttackMultip,omitempty"`
	EnemyID              *uint32  `protobuf:"varint,11,opt,name=enemyID" json:"enemyID,omitempty"`
	InjuryValue          *int32   `protobuf:"varint,12,opt,name=injuryValue" json:"injuryValue,omitempty"`
	IgnoreDefense        *bool    `protobuf:"varint,13,opt,name=ignoreDefense" json:"ignoreDefense,omitempty"`
	AttackRound          *int32   `protobuf:"varint,14,opt,name=attackRound" json:"attackRound,omitempty"`
	AttackRate           *float32 `protobuf:"fixed32,15,opt,name=attackRate" json:"attackRate,omitempty"`
	FixRecoverHP         *bool    `protobuf:"varint,16,opt,name=fixRecoverHP" json:"fixRecoverHP,omitempty"`
	IsLink               *int32   `protobuf:"varint,17,opt,name=isLink" json:"isLink,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *AttackInfoProto) Reset()                    { *m = AttackInfoProto{} }
func (m *AttackInfoProto) String() string            { return proto.CompactTextString(m) }
func (*AttackInfoProto) ProtoMessage()               {}
func (*AttackInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *AttackInfoProto) GetAttackID() int32 {
	if m != nil && m.AttackID != nil {
		return *m.AttackID
	}
	return 0
}

func (m *AttackInfoProto) GetUserUnitID() string {
	if m != nil && m.UserUnitID != nil {
		return *m.UserUnitID
	}
	return ""
}

func (m *AttackInfoProto) GetUserPos() int32 {
	if m != nil && m.UserPos != nil {
		return *m.UserPos
	}
	return 0
}

func (m *AttackInfoProto) GetNeedCardNumber() int32 {
	if m != nil && m.NeedCardNumber != nil {
		return *m.NeedCardNumber
	}
	return 0
}

func (m *AttackInfoProto) GetSkillID() int32 {
	if m != nil && m.SkillID != nil {
		return *m.SkillID
	}
	return 0
}

func (m *AttackInfoProto) GetAttackType() int32 {
	if m != nil && m.AttackType != nil {
		return *m.AttackType
	}
	return 0
}

func (m *AttackInfoProto) GetAttackRace() int32 {
	if m != nil && m.AttackRace != nil {
		return *m.AttackRace
	}
	return 0
}

func (m *AttackInfoProto) GetAttackRange() int32 {
	if m != nil && m.AttackRange != nil {
		return *m.AttackRange
	}
	return 0
}

func (m *AttackInfoProto) GetAttackValue() float32 {
	if m != nil && m.AttackValue != nil {
		return *m.AttackValue
	}
	return 0
}

func (m *AttackInfoProto) GetContinueAttackMultip() int32 {
	if m != nil && m.ContinueAttackMultip != nil {
		return *m.ContinueAttackMultip
	}
	return 0
}

func (m *AttackInfoProto) GetEnemyID() uint32 {
	if m != nil && m.EnemyID != nil {
		return *m.EnemyID
	}
	return 0
}

func (m *AttackInfoProto) GetInjuryValue() int32 {
	if m != nil && m.InjuryValue != nil {
		return *m.InjuryValue
	}
	return 0
}

func (m *AttackInfoProto) GetIgnoreDefense() bool {
	if m != nil && m.IgnoreDefense != nil {
		return *m.IgnoreDefense
	}
	return false
}

func (m *AttackInfoProto) GetAttackRound() int32 {
	if m != nil && m.AttackRound != nil {
		return *m.AttackRound
	}
	return 0
}

func (m *AttackInfoProto) GetAttackRate() float32 {
	if m != nil && m.AttackRate != nil {
		return *m.AttackRate
	}
	return 0
}

func (m *AttackInfoProto) GetFixRecoverHP() bool {
	if m != nil && m.FixRecoverHP != nil {
		return *m.FixRecoverHP
	}
	return false
}

func (m *AttackInfoProto) GetIsLink() int32 {
	if m != nil && m.IsLink != nil {
		return *m.IsLink
	}
	return 0
}

type ActiveSkillData struct {
	SkillId          *int32 `protobuf:"varint,1,opt,name=skillId" json:"skillId,omitempty"`
	Round            *int32 `protobuf:"varint,2,opt,name=round" json:"round,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ActiveSkillData) Reset()                    { *m = ActiveSkillData{} }
func (m *ActiveSkillData) String() string            { return proto.CompactTextString(m) }
func (*ActiveSkillData) ProtoMessage()               {}
func (*ActiveSkillData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *ActiveSkillData) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *ActiveSkillData) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

type ReqShopBuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ProductId        *string      `protobuf:"bytes,2,opt,name=productId" json:"productId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqShopBuy) Reset()                    { *m = ReqShopBuy{} }
func (m *ReqShopBuy) String() string            { return proto.CompactTextString(m) }
func (*ReqShopBuy) ProtoMessage()               {}
func (*ReqShopBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *ReqShopBuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqShopBuy) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

type RspShopBuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StonePay         *int32       `protobuf:"varint,2,opt,name=stonePay" json:"stonePay,omitempty"`
	StoneFree        *int32       `protobuf:"varint,3,opt,name=stoneFree" json:"stoneFree,omitempty"`
	Stone            *int32       `protobuf:"varint,4,opt,name=stone" json:"stone,omitempty"`
	MonthBonus       *BonusInfo   `protobuf:"bytes,5,opt,name=monthBonus" json:"monthBonus,omitempty"`
	WeekBonus        *BonusInfo   `protobuf:"bytes,6,opt,name=weekBonus" json:"weekBonus,omitempty"`
	ProductId        *string      `protobuf:"bytes,7,opt,name=productId" json:"productId,omitempty"`
	PayTotal         *int32       `protobuf:"varint,8,opt,name=payTotal" json:"payTotal,omitempty"`
	ProductPrice     *float32     `protobuf:"fixed32,9,opt,name=productPrice" json:"productPrice,omitempty"`
	GotStone         *int32       `protobuf:"varint,10,opt,name=gotStone" json:"gotStone,omitempty"`
	VipLevel         *int32       `protobuf:"varint,11,opt,name=vipLevel" json:"vipLevel,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspShopBuy) Reset()                    { *m = RspShopBuy{} }
func (m *RspShopBuy) String() string            { return proto.CompactTextString(m) }
func (*RspShopBuy) ProtoMessage()               {}
func (*RspShopBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *RspShopBuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspShopBuy) GetStonePay() int32 {
	if m != nil && m.StonePay != nil {
		return *m.StonePay
	}
	return 0
}

func (m *RspShopBuy) GetStoneFree() int32 {
	if m != nil && m.StoneFree != nil {
		return *m.StoneFree
	}
	return 0
}

func (m *RspShopBuy) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspShopBuy) GetMonthBonus() *BonusInfo {
	if m != nil {
		return m.MonthBonus
	}
	return nil
}

func (m *RspShopBuy) GetWeekBonus() *BonusInfo {
	if m != nil {
		return m.WeekBonus
	}
	return nil
}

func (m *RspShopBuy) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *RspShopBuy) GetPayTotal() int32 {
	if m != nil && m.PayTotal != nil {
		return *m.PayTotal
	}
	return 0
}

func (m *RspShopBuy) GetProductPrice() float32 {
	if m != nil && m.ProductPrice != nil {
		return *m.ProductPrice
	}
	return 0
}

func (m *RspShopBuy) GetGotStone() int32 {
	if m != nil && m.GotStone != nil {
		return *m.GotStone
	}
	return 0
}

func (m *RspShopBuy) GetVipLevel() int32 {
	if m != nil && m.VipLevel != nil {
		return *m.VipLevel
	}
	return 0
}

type ReqBuyMoney struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqBuyMoney) Reset()                    { *m = ReqBuyMoney{} }
func (m *ReqBuyMoney) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyMoney) ProtoMessage()               {}
func (*ReqBuyMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *ReqBuyMoney) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspBuyMoney struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Stone            *int32       `protobuf:"varint,2,opt,name=stone" json:"stone,omitempty"`
	GotMoney         *int32       `protobuf:"varint,3,opt,name=gotMoney" json:"gotMoney,omitempty"`
	Money            *int32       `protobuf:"varint,4,opt,name=money" json:"money,omitempty"`
	UsedBuyMoneyCnt  *int32       `protobuf:"varint,5,opt,name=usedBuyMoneyCnt" json:"usedBuyMoneyCnt,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspBuyMoney) Reset()                    { *m = RspBuyMoney{} }
func (m *RspBuyMoney) String() string            { return proto.CompactTextString(m) }
func (*RspBuyMoney) ProtoMessage()               {}
func (*RspBuyMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *RspBuyMoney) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspBuyMoney) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspBuyMoney) GetGotMoney() int32 {
	if m != nil && m.GotMoney != nil {
		return *m.GotMoney
	}
	return 0
}

func (m *RspBuyMoney) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspBuyMoney) GetUsedBuyMoneyCnt() int32 {
	if m != nil && m.UsedBuyMoneyCnt != nil {
		return *m.UsedBuyMoneyCnt
	}
	return 0
}

// 任务系统配置
type TaskConf struct {
	TaskID           *int32        `protobuf:"varint,1,req,name=taskID" json:"taskID,omitempty"`
	TaskType         *ETaskType    `protobuf:"varint,2,req,name=taskType,enum=bbproto.ETaskType" json:"taskType,omitempty"`
	TaskDesc         *string       `protobuf:"bytes,3,opt,name=taskDesc" json:"taskDesc,omitempty"`
	TaskGoal         *string       `protobuf:"bytes,4,req,name=taskGoal" json:"taskGoal,omitempty"`
	GoalCnt          *int32        `protobuf:"varint,5,req,name=goalCnt" json:"goalCnt,omitempty"`
	GiftItem         []*GiftItem   `protobuf:"bytes,6,rep,name=giftItem" json:"giftItem,omitempty"`
	GoToSence        *string       `protobuf:"bytes,7,req,name=goToSence" json:"goToSence,omitempty"`
	AchieveType      *EAchieveType `protobuf:"varint,8,opt,name=achieveType,enum=bbproto.EAchieveType" json:"achieveType,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TaskConf) Reset()                    { *m = TaskConf{} }
func (m *TaskConf) String() string            { return proto.CompactTextString(m) }
func (*TaskConf) ProtoMessage()               {}
func (*TaskConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *TaskConf) GetTaskID() int32 {
	if m != nil && m.TaskID != nil {
		return *m.TaskID
	}
	return 0
}

func (m *TaskConf) GetTaskType() ETaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return ETaskType_ACHIEVEMENT
}

func (m *TaskConf) GetTaskDesc() string {
	if m != nil && m.TaskDesc != nil {
		return *m.TaskDesc
	}
	return ""
}

func (m *TaskConf) GetTaskGoal() string {
	if m != nil && m.TaskGoal != nil {
		return *m.TaskGoal
	}
	return ""
}

func (m *TaskConf) GetGoalCnt() int32 {
	if m != nil && m.GoalCnt != nil {
		return *m.GoalCnt
	}
	return 0
}

func (m *TaskConf) GetGiftItem() []*GiftItem {
	if m != nil {
		return m.GiftItem
	}
	return nil
}

func (m *TaskConf) GetGoToSence() string {
	if m != nil && m.GoToSence != nil {
		return *m.GoToSence
	}
	return ""
}

func (m *TaskConf) GetAchieveType() EAchieveType {
	if m != nil && m.AchieveType != nil {
		return *m.AchieveType
	}
	return EAchieveType_STAGE_PASS
}

// 任务基本结构
type TaskObj struct {
	TaskId           *int32     `protobuf:"varint,1,req,name=taskId" json:"taskId,omitempty"`
	TaskType         *ETaskType `protobuf:"varint,2,opt,name=taskType,enum=bbproto.ETaskType" json:"taskType,omitempty"`
	BonusId          *int32     `protobuf:"varint,3,opt,name=bonusId" json:"bonusId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TaskObj) Reset()                    { *m = TaskObj{} }
func (m *TaskObj) String() string            { return proto.CompactTextString(m) }
func (*TaskObj) ProtoMessage()               {}
func (*TaskObj) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *TaskObj) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *TaskObj) GetTaskType() ETaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return ETaskType_ACHIEVEMENT
}

func (m *TaskObj) GetBonusId() int32 {
	if m != nil && m.BonusId != nil {
		return *m.BonusId
	}
	return 0
}

type ReqTaskList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskType         *ETaskType   `protobuf:"varint,2,opt,name=taskType,enum=bbproto.ETaskType" json:"taskType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqTaskList) Reset()                    { *m = ReqTaskList{} }
func (m *ReqTaskList) String() string            { return proto.CompactTextString(m) }
func (*ReqTaskList) ProtoMessage()               {}
func (*ReqTaskList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *ReqTaskList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqTaskList) GetTaskType() ETaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return ETaskType_ACHIEVEMENT
}

type AchievedTaskRspObj struct {
	TaskId           *int32 `protobuf:"varint,1,opt,name=taskId" json:"taskId,omitempty"`
	BonusId          *int32 `protobuf:"varint,2,opt,name=bonusId" json:"bonusId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AchievedTaskRspObj) Reset()                    { *m = AchievedTaskRspObj{} }
func (m *AchievedTaskRspObj) String() string            { return proto.CompactTextString(m) }
func (*AchievedTaskRspObj) ProtoMessage()               {}
func (*AchievedTaskRspObj) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *AchievedTaskRspObj) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *AchievedTaskRspObj) GetBonusId() int32 {
	if m != nil && m.BonusId != nil {
		return *m.BonusId
	}
	return 0
}

type UnAchievedTaskRspObj struct {
	TaskId           *int32 `protobuf:"varint,1,opt,name=taskId" json:"taskId,omitempty"`
	CurrentCnt       *int32 `protobuf:"varint,2,opt,name=currentCnt" json:"currentCnt,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnAchievedTaskRspObj) Reset()                    { *m = UnAchievedTaskRspObj{} }
func (m *UnAchievedTaskRspObj) String() string            { return proto.CompactTextString(m) }
func (*UnAchievedTaskRspObj) ProtoMessage()               {}
func (*UnAchievedTaskRspObj) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *UnAchievedTaskRspObj) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *UnAchievedTaskRspObj) GetCurrentCnt() int32 {
	if m != nil && m.CurrentCnt != nil {
		return *m.CurrentCnt
	}
	return 0
}

type TaskTypeRsp struct {
	Achieved         []*AchievedTaskRspObj   `protobuf:"bytes,1,rep,name=achieved" json:"achieved,omitempty"`
	UnAchieved       []*UnAchievedTaskRspObj `protobuf:"bytes,2,rep,name=unAchieved" json:"unAchieved,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *TaskTypeRsp) Reset()                    { *m = TaskTypeRsp{} }
func (m *TaskTypeRsp) String() string            { return proto.CompactTextString(m) }
func (*TaskTypeRsp) ProtoMessage()               {}
func (*TaskTypeRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *TaskTypeRsp) GetAchieved() []*AchievedTaskRspObj {
	if m != nil {
		return m.Achieved
	}
	return nil
}

func (m *TaskTypeRsp) GetUnAchieved() []*UnAchievedTaskRspObj {
	if m != nil {
		return m.UnAchieved
	}
	return nil
}

type RspTaskList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Achieve          *TaskTypeRsp `protobuf:"bytes,2,opt,name=achieve" json:"achieve,omitempty"`
	DailyTask        *TaskTypeRsp `protobuf:"bytes,3,opt,name=dailyTask" json:"dailyTask,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspTaskList) Reset()                    { *m = RspTaskList{} }
func (m *RspTaskList) String() string            { return proto.CompactTextString(m) }
func (*RspTaskList) ProtoMessage()               {}
func (*RspTaskList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *RspTaskList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspTaskList) GetAchieve() *TaskTypeRsp {
	if m != nil {
		return m.Achieve
	}
	return nil
}

func (m *RspTaskList) GetDailyTask() *TaskTypeRsp {
	if m != nil {
		return m.DailyTask
	}
	return nil
}

type ReqAcceptTaskBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BonusId          []int32      `protobuf:"varint,2,rep,name=bonusId" json:"bonusId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAcceptTaskBonus) Reset()                    { *m = ReqAcceptTaskBonus{} }
func (m *ReqAcceptTaskBonus) String() string            { return proto.CompactTextString(m) }
func (*ReqAcceptTaskBonus) ProtoMessage()               {}
func (*ReqAcceptTaskBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *ReqAcceptTaskBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAcceptTaskBonus) GetBonusId() []int32 {
	if m != nil {
		return m.BonusId
	}
	return nil
}

type RspAcceptTaskBonus struct {
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	//    optional int32           money                  = 2;  // money
	//    optional int32           stone                  = 3;  // stone
	//    optional int32           friendPoint            = 4;  // friendPoint
	//    optional int32           staminaNow             = 5;  // stamina
	//    optional int32           expNow                 = 6;  // exp
	//    optional int32           rank                   = 7;  // rank
	//    repeated UserUnit        newUnitList            = 8;  // unitList
	NewUnitList      []*UserUnit `protobuf:"bytes,2,rep,name=newUnitList" json:"newUnitList,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *RspAcceptTaskBonus) Reset()                    { *m = RspAcceptTaskBonus{} }
func (m *RspAcceptTaskBonus) String() string            { return proto.CompactTextString(m) }
func (*RspAcceptTaskBonus) ProtoMessage()               {}
func (*RspAcceptTaskBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *RspAcceptTaskBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAcceptTaskBonus) GetNewUnitList() []*UserUnit {
	if m != nil {
		return m.NewUnitList
	}
	return nil
}

type UnitResource struct {
	Id               *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Path             *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Size             *int32   `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	FileName         []string `protobuf:"bytes,4,rep,name=fileName" json:"fileName,omitempty"`
	Version          *int32   `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UnitResource) Reset()                    { *m = UnitResource{} }
func (m *UnitResource) String() string            { return proto.CompactTextString(m) }
func (*UnitResource) ProtoMessage()               {}
func (*UnitResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *UnitResource) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitResource) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *UnitResource) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *UnitResource) GetFileName() []string {
	if m != nil {
		return m.FileName
	}
	return nil
}

func (m *UnitResource) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type UserUnit struct {
	UniqueId         *uint32       `protobuf:"varint,1,req,name=uniqueId" json:"uniqueId,omitempty"`
	UnitId           *uint32       `protobuf:"varint,2,opt,name=unitId" json:"unitId,omitempty"`
	Exp              *int32        `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	Level            *int32        `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	ActiveSkillLevel *int32        `protobuf:"varint,5,opt,name=activeSkillLevel" json:"activeSkillLevel,omitempty"`
	AddAttack        *int32        `protobuf:"varint,6,opt,name=addAttack" json:"addAttack,omitempty"`
	AddDefence       *int32        `protobuf:"varint,7,opt,name=addDefence" json:"addDefence,omitempty"`
	AddHp            *int32        `protobuf:"varint,8,opt,name=addHp" json:"addHp,omitempty"`
	LimitbreakLv     *int32        `protobuf:"varint,9,opt,name=limitbreakLv" json:"limitbreakLv,omitempty"`
	GetTime          *uint32       `protobuf:"varint,10,opt,name=getTime" json:"getTime,omitempty"`
	IsFavorite       *int32        `protobuf:"varint,11,opt,name=isFavorite" json:"isFavorite,omitempty"`
	MtType           *MaterialType `protobuf:"varint,12,opt,name=mtType,enum=bbproto.MaterialType" json:"mtType,omitempty"`
	FragCnt          *int32        `protobuf:"varint,13,opt,name=fragCnt" json:"fragCnt,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UserUnit) Reset()                    { *m = UserUnit{} }
func (m *UserUnit) String() string            { return proto.CompactTextString(m) }
func (*UserUnit) ProtoMessage()               {}
func (*UserUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *UserUnit) GetUniqueId() uint32 {
	if m != nil && m.UniqueId != nil {
		return *m.UniqueId
	}
	return 0
}

func (m *UserUnit) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *UserUnit) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *UserUnit) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *UserUnit) GetActiveSkillLevel() int32 {
	if m != nil && m.ActiveSkillLevel != nil {
		return *m.ActiveSkillLevel
	}
	return 0
}

func (m *UserUnit) GetAddAttack() int32 {
	if m != nil && m.AddAttack != nil {
		return *m.AddAttack
	}
	return 0
}

func (m *UserUnit) GetAddDefence() int32 {
	if m != nil && m.AddDefence != nil {
		return *m.AddDefence
	}
	return 0
}

func (m *UserUnit) GetAddHp() int32 {
	if m != nil && m.AddHp != nil {
		return *m.AddHp
	}
	return 0
}

func (m *UserUnit) GetLimitbreakLv() int32 {
	if m != nil && m.LimitbreakLv != nil {
		return *m.LimitbreakLv
	}
	return 0
}

func (m *UserUnit) GetGetTime() uint32 {
	if m != nil && m.GetTime != nil {
		return *m.GetTime
	}
	return 0
}

func (m *UserUnit) GetIsFavorite() int32 {
	if m != nil && m.IsFavorite != nil {
		return *m.IsFavorite
	}
	return 0
}

func (m *UserUnit) GetMtType() MaterialType {
	if m != nil && m.MtType != nil {
		return *m.MtType
	}
	return MaterialType_MT_UNIT
}

func (m *UserUnit) GetFragCnt() int32 {
	if m != nil && m.FragCnt != nil {
		return *m.FragCnt
	}
	return 0
}

type UnitInfo struct {
	Id               *uint32       `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Race             *EUnitRace    `protobuf:"varint,3,opt,name=race,enum=bbproto.EUnitRace" json:"race,omitempty"`
	Type             *EUnitType    `protobuf:"varint,4,opt,name=type,enum=bbproto.EUnitType" json:"type,omitempty"`
	Rare             *int32        `protobuf:"varint,5,opt,name=rare" json:"rare,omitempty"`
	Skill1           *int32        `protobuf:"varint,6,opt,name=skill1" json:"skill1,omitempty"`
	Skill2           *int32        `protobuf:"varint,7,opt,name=skill2" json:"skill2,omitempty"`
	LeaderSkill      *int32        `protobuf:"varint,8,opt,name=leaderSkill" json:"leaderSkill,omitempty"`
	ActiveSkill      *int32        `protobuf:"varint,9,opt,name=activeSkill" json:"activeSkill,omitempty"`
	PassiveSkill     *int32        `protobuf:"varint,10,opt,name=passiveSkill" json:"passiveSkill,omitempty"`
	MaxLevel         *int32        `protobuf:"varint,11,opt,name=maxLevel" json:"maxLevel,omitempty"`
	Profile          *string       `protobuf:"bytes,12,opt,name=profile" json:"profile,omitempty"`
	PowerType        *PowerType    `protobuf:"bytes,13,opt,name=powerType" json:"powerType,omitempty"`
	EvolveInfo       *EvolveInfo   `protobuf:"bytes,14,opt,name=evolveInfo" json:"evolveInfo,omitempty"`
	Cost             *int32        `protobuf:"varint,15,opt,name=cost" json:"cost,omitempty"`
	SaleValue        *int32        `protobuf:"varint,16,opt,name=saleValue" json:"saleValue,omitempty"`
	DevourValue      *int32        `protobuf:"varint,17,opt,name=devourValue" json:"devourValue,omitempty"`
	GetWay           []*UnitGetWay `protobuf:"bytes,18,rep,name=getWay" json:"getWay,omitempty"`
	MaxActiveSkillLv *int32        `protobuf:"varint,19,opt,name=maxActiveSkillLv" json:"maxActiveSkillLv,omitempty"`
	MaxStar          *int32        `protobuf:"varint,20,opt,name=maxStar" json:"maxStar,omitempty"`
	ShowPos          *UVPosition   `protobuf:"bytes,21,opt,name=showPos" json:"showPos,omitempty"`
	FragmentsSize    *int32        `protobuf:"varint,22,opt,name=fragmentsSize" json:"fragmentsSize,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UnitInfo) Reset()                    { *m = UnitInfo{} }
func (m *UnitInfo) String() string            { return proto.CompactTextString(m) }
func (*UnitInfo) ProtoMessage()               {}
func (*UnitInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *UnitInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UnitInfo) GetRace() EUnitRace {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return EUnitRace_ALL
}

func (m *UnitInfo) GetType() EUnitType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EUnitType_UALL
}

func (m *UnitInfo) GetRare() int32 {
	if m != nil && m.Rare != nil {
		return *m.Rare
	}
	return 0
}

func (m *UnitInfo) GetSkill1() int32 {
	if m != nil && m.Skill1 != nil {
		return *m.Skill1
	}
	return 0
}

func (m *UnitInfo) GetSkill2() int32 {
	if m != nil && m.Skill2 != nil {
		return *m.Skill2
	}
	return 0
}

func (m *UnitInfo) GetLeaderSkill() int32 {
	if m != nil && m.LeaderSkill != nil {
		return *m.LeaderSkill
	}
	return 0
}

func (m *UnitInfo) GetActiveSkill() int32 {
	if m != nil && m.ActiveSkill != nil {
		return *m.ActiveSkill
	}
	return 0
}

func (m *UnitInfo) GetPassiveSkill() int32 {
	if m != nil && m.PassiveSkill != nil {
		return *m.PassiveSkill
	}
	return 0
}

func (m *UnitInfo) GetMaxLevel() int32 {
	if m != nil && m.MaxLevel != nil {
		return *m.MaxLevel
	}
	return 0
}

func (m *UnitInfo) GetProfile() string {
	if m != nil && m.Profile != nil {
		return *m.Profile
	}
	return ""
}

func (m *UnitInfo) GetPowerType() *PowerType {
	if m != nil {
		return m.PowerType
	}
	return nil
}

func (m *UnitInfo) GetEvolveInfo() *EvolveInfo {
	if m != nil {
		return m.EvolveInfo
	}
	return nil
}

func (m *UnitInfo) GetCost() int32 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *UnitInfo) GetSaleValue() int32 {
	if m != nil && m.SaleValue != nil {
		return *m.SaleValue
	}
	return 0
}

func (m *UnitInfo) GetDevourValue() int32 {
	if m != nil && m.DevourValue != nil {
		return *m.DevourValue
	}
	return 0
}

func (m *UnitInfo) GetGetWay() []*UnitGetWay {
	if m != nil {
		return m.GetWay
	}
	return nil
}

func (m *UnitInfo) GetMaxActiveSkillLv() int32 {
	if m != nil && m.MaxActiveSkillLv != nil {
		return *m.MaxActiveSkillLv
	}
	return 0
}

func (m *UnitInfo) GetMaxStar() int32 {
	if m != nil && m.MaxStar != nil {
		return *m.MaxStar
	}
	return 0
}

func (m *UnitInfo) GetShowPos() *UVPosition {
	if m != nil {
		return m.ShowPos
	}
	return nil
}

func (m *UnitInfo) GetFragmentsSize() int32 {
	if m != nil && m.FragmentsSize != nil {
		return *m.FragmentsSize
	}
	return 0
}

type UVPosition struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	W                *float32 `protobuf:"fixed32,3,opt,name=w" json:"w,omitempty"`
	H                *float32 `protobuf:"fixed32,4,opt,name=h" json:"h,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UVPosition) Reset()                    { *m = UVPosition{} }
func (m *UVPosition) String() string            { return proto.CompactTextString(m) }
func (*UVPosition) ProtoMessage()               {}
func (*UVPosition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *UVPosition) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *UVPosition) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *UVPosition) GetW() float32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *UVPosition) GetH() float32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

type UnitGetWay struct {
	GetType          *EUnitGetType `protobuf:"varint,1,opt,name=getType,enum=bbproto.EUnitGetType" json:"getType,omitempty"`
	GetPath          *uint32       `protobuf:"varint,2,opt,name=getPath" json:"getPath,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UnitGetWay) Reset()                    { *m = UnitGetWay{} }
func (m *UnitGetWay) String() string            { return proto.CompactTextString(m) }
func (*UnitGetWay) ProtoMessage()               {}
func (*UnitGetWay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *UnitGetWay) GetGetType() EUnitGetType {
	if m != nil && m.GetType != nil {
		return *m.GetType
	}
	return EUnitGetType_E_NONE
}

func (m *UnitGetWay) GetGetPath() uint32 {
	if m != nil && m.GetPath != nil {
		return *m.GetPath
	}
	return 0
}

// ///////unsed///////////////////////////////////////////////////////////////////
type PowerValue struct {
	Level            *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Value            *int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerValue) Reset()                    { *m = PowerValue{} }
func (m *PowerValue) String() string            { return proto.CompactTextString(m) }
func (*PowerValue) ProtoMessage()               {}
func (*PowerValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *PowerValue) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PowerValue) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type PowerTable struct {
	Power            []*PowerValue `protobuf:"bytes,1,rep,name=power" json:"power,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PowerTable) Reset()                    { *m = PowerTable{} }
func (m *PowerTable) String() string            { return proto.CompactTextString(m) }
func (*PowerTable) ProtoMessage()               {}
func (*PowerTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *PowerTable) GetPower() []*PowerValue {
	if m != nil {
		return m.Power
	}
	return nil
}

type PowerInfo struct {
	Min              *int32   `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max              *int32   `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	GrowCurve        *float32 `protobuf:"fixed32,3,opt,name=growCurve" json:"growCurve,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PowerInfo) Reset()                    { *m = PowerInfo{} }
func (m *PowerInfo) String() string            { return proto.CompactTextString(m) }
func (*PowerInfo) ProtoMessage()               {}
func (*PowerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *PowerInfo) GetMin() int32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *PowerInfo) GetMax() int32 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

func (m *PowerInfo) GetGrowCurve() float32 {
	if m != nil && m.GrowCurve != nil {
		return *m.GrowCurve
	}
	return 0
}

type PowerType struct {
	AttackType       *PowerInfo `protobuf:"bytes,1,opt,name=attackType" json:"attackType,omitempty"`
	HpType           *PowerInfo `protobuf:"bytes,2,opt,name=hpType" json:"hpType,omitempty"`
	ExpType          *PowerInfo `protobuf:"bytes,3,opt,name=expType" json:"expType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *PowerType) Reset()                    { *m = PowerType{} }
func (m *PowerType) String() string            { return proto.CompactTextString(m) }
func (*PowerType) ProtoMessage()               {}
func (*PowerType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *PowerType) GetAttackType() *PowerInfo {
	if m != nil {
		return m.AttackType
	}
	return nil
}

func (m *PowerType) GetHpType() *PowerInfo {
	if m != nil {
		return m.HpType
	}
	return nil
}

func (m *PowerType) GetExpType() *PowerInfo {
	if m != nil {
		return m.ExpType
	}
	return nil
}

type HelperRequire struct {
	Level            *int32     `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Race             *EUnitRace `protobuf:"varint,2,opt,name=race,enum=bbproto.EUnitRace" json:"race,omitempty"`
	Type             *EUnitType `protobuf:"varint,3,opt,name=type,enum=bbproto.EUnitType" json:"type,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *HelperRequire) Reset()                    { *m = HelperRequire{} }
func (m *HelperRequire) String() string            { return proto.CompactTextString(m) }
func (*HelperRequire) ProtoMessage()               {}
func (*HelperRequire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *HelperRequire) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *HelperRequire) GetRace() EUnitRace {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return EUnitRace_ALL
}

func (m *HelperRequire) GetType() EUnitType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EUnitType_UALL
}

type EvolveInfo struct {
	EvolveUnitId     *uint32        `protobuf:"varint,1,req,name=evolveUnitId" json:"evolveUnitId,omitempty"`
	MaterialUnitId   []uint32       `protobuf:"varint,2,rep,name=materialUnitId" json:"materialUnitId,omitempty"`
	HelperRequire    *HelperRequire `protobuf:"bytes,3,opt,name=helperRequire" json:"helperRequire,omitempty"`
	EvolveQuestId    *uint32        `protobuf:"varint,4,opt,name=evolveQuestId" json:"evolveQuestId,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *EvolveInfo) Reset()                    { *m = EvolveInfo{} }
func (m *EvolveInfo) String() string            { return proto.CompactTextString(m) }
func (*EvolveInfo) ProtoMessage()               {}
func (*EvolveInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *EvolveInfo) GetEvolveUnitId() uint32 {
	if m != nil && m.EvolveUnitId != nil {
		return *m.EvolveUnitId
	}
	return 0
}

func (m *EvolveInfo) GetMaterialUnitId() []uint32 {
	if m != nil {
		return m.MaterialUnitId
	}
	return nil
}

func (m *EvolveInfo) GetHelperRequire() *HelperRequire {
	if m != nil {
		return m.HelperRequire
	}
	return nil
}

func (m *EvolveInfo) GetEvolveQuestId() uint32 {
	if m != nil && m.EvolveQuestId != nil {
		return *m.EvolveQuestId
	}
	return 0
}

type GachaConfig struct {
	GachaId          *int32           `protobuf:"varint,1,opt,name=gachaId" json:"gachaId,omitempty"`
	GachaType        *EGachaType      `protobuf:"varint,2,opt,name=gachaType,enum=bbproto.EGachaType" json:"gachaType,omitempty"`
	BeginTime        *uint32          `protobuf:"varint,3,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime          *uint32          `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	EventId          *int32           `protobuf:"varint,5,opt,name=eventId" json:"eventId,omitempty"`
	StarList         []*GachaStarInfo `protobuf:"bytes,6,rep,name=starList" json:"starList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GachaConfig) Reset()                    { *m = GachaConfig{} }
func (m *GachaConfig) String() string            { return proto.CompactTextString(m) }
func (*GachaConfig) ProtoMessage()               {}
func (*GachaConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *GachaConfig) GetGachaId() int32 {
	if m != nil && m.GachaId != nil {
		return *m.GachaId
	}
	return 0
}

func (m *GachaConfig) GetGachaType() EGachaType {
	if m != nil && m.GachaType != nil {
		return *m.GachaType
	}
	return EGachaType_E_FRIEND_GACHA
}

func (m *GachaConfig) GetBeginTime() uint32 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *GachaConfig) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *GachaConfig) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *GachaConfig) GetStarList() []*GachaStarInfo {
	if m != nil {
		return m.StarList
	}
	return nil
}

type GachaUnitList struct {
	MinMatch         *int32        `protobuf:"varint,1,opt,name=minMatch" json:"minMatch,omitempty"`
	MaxMatch         *int32        `protobuf:"varint,2,opt,name=maxMatch" json:"maxMatch,omitempty"`
	UnitId           []uint32      `protobuf:"varint,3,rep,name=unitId" json:"unitId,omitempty"`
	Mtype            *MaterialType `protobuf:"varint,4,opt,name=mtype,enum=bbproto.MaterialType" json:"mtype,omitempty"`
	UnitCnt          *int32        `protobuf:"varint,5,opt,name=unitCnt" json:"unitCnt,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GachaUnitList) Reset()                    { *m = GachaUnitList{} }
func (m *GachaUnitList) String() string            { return proto.CompactTextString(m) }
func (*GachaUnitList) ProtoMessage()               {}
func (*GachaUnitList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *GachaUnitList) GetMinMatch() int32 {
	if m != nil && m.MinMatch != nil {
		return *m.MinMatch
	}
	return 0
}

func (m *GachaUnitList) GetMaxMatch() int32 {
	if m != nil && m.MaxMatch != nil {
		return *m.MaxMatch
	}
	return 0
}

func (m *GachaUnitList) GetUnitId() []uint32 {
	if m != nil {
		return m.UnitId
	}
	return nil
}

func (m *GachaUnitList) GetMtype() MaterialType {
	if m != nil && m.Mtype != nil {
		return *m.Mtype
	}
	return MaterialType_MT_UNIT
}

func (m *GachaUnitList) GetUnitCnt() int32 {
	if m != nil && m.UnitCnt != nil {
		return *m.UnitCnt
	}
	return 0
}

type GachaStarInfo struct {
	StarVal          *int32           `protobuf:"varint,1,opt,name=starVal" json:"starVal,omitempty"`
	MinMatch         *int32           `protobuf:"varint,2,opt,name=minMatch" json:"minMatch,omitempty"`
	MaxMatch         *int32           `protobuf:"varint,3,opt,name=maxMatch" json:"maxMatch,omitempty"`
	UnitList         []*GachaUnitList `protobuf:"bytes,4,rep,name=unitList" json:"unitList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GachaStarInfo) Reset()                    { *m = GachaStarInfo{} }
func (m *GachaStarInfo) String() string            { return proto.CompactTextString(m) }
func (*GachaStarInfo) ProtoMessage()               {}
func (*GachaStarInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *GachaStarInfo) GetStarVal() int32 {
	if m != nil && m.StarVal != nil {
		return *m.StarVal
	}
	return 0
}

func (m *GachaStarInfo) GetMinMatch() int32 {
	if m != nil && m.MinMatch != nil {
		return *m.MinMatch
	}
	return 0
}

func (m *GachaStarInfo) GetMaxMatch() int32 {
	if m != nil && m.MaxMatch != nil {
		return *m.MaxMatch
	}
	return 0
}

func (m *GachaStarInfo) GetUnitList() []*GachaUnitList {
	if m != nil {
		return m.UnitList
	}
	return nil
}

type ReqGetUnitResource struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitId           []uint32     `protobuf:"varint,2,rep,name=unitId" json:"unitId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUnitResource) Reset()                    { *m = ReqGetUnitResource{} }
func (m *ReqGetUnitResource) String() string            { return proto.CompactTextString(m) }
func (*ReqGetUnitResource) ProtoMessage()               {}
func (*ReqGetUnitResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *ReqGetUnitResource) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUnitResource) GetUnitId() []uint32 {
	if m != nil {
		return m.UnitId
	}
	return nil
}

type RspGetUnitResource struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Server           *string         `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	Unitres          []*UnitResource `protobuf:"bytes,3,rep,name=unitres" json:"unitres,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RspGetUnitResource) Reset()                    { *m = RspGetUnitResource{} }
func (m *RspGetUnitResource) String() string            { return proto.CompactTextString(m) }
func (*RspGetUnitResource) ProtoMessage()               {}
func (*RspGetUnitResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *RspGetUnitResource) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUnitResource) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *RspGetUnitResource) GetUnitres() []*UnitResource {
	if m != nil {
		return m.Unitres
	}
	return nil
}

type ReqGetUserUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitId           []uint32     `protobuf:"varint,2,rep,name=unitId" json:"unitId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUserUnit) Reset()                    { *m = ReqGetUserUnit{} }
func (m *ReqGetUserUnit) String() string            { return proto.CompactTextString(m) }
func (*ReqGetUserUnit) ProtoMessage()               {}
func (*ReqGetUserUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *ReqGetUserUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUserUnit) GetUnitId() []uint32 {
	if m != nil {
		return m.UnitId
	}
	return nil
}

type RspGetUserUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Unit             []*UserUnit  `protobuf:"bytes,2,rep,name=unit" json:"unit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetUserUnit) Reset()                    { *m = RspGetUserUnit{} }
func (m *RspGetUserUnit) String() string            { return proto.CompactTextString(m) }
func (*RspGetUserUnit) ProtoMessage()               {}
func (*RspGetUserUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *RspGetUserUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUserUnit) GetUnit() []*UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type ReqLevelUp struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BaseUniqueId     *uint32      `protobuf:"varint,2,opt,name=baseUniqueId" json:"baseUniqueId,omitempty"`
	PartUniqueId     []uint32     `protobuf:"varint,3,rep,name=partUniqueId" json:"partUniqueId,omitempty"`
	HelperUserId     *uint32      `protobuf:"varint,4,opt,name=helperUserId" json:"helperUserId,omitempty"`
	HelperUnit       *UserUnit    `protobuf:"bytes,5,opt,name=helperUnit" json:"helperUnit,omitempty"`
	HelperPremium    *int32       `protobuf:"varint,6,opt,name=helperPremium" json:"helperPremium,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqLevelUp) Reset()                    { *m = ReqLevelUp{} }
func (m *ReqLevelUp) String() string            { return proto.CompactTextString(m) }
func (*ReqLevelUp) ProtoMessage()               {}
func (*ReqLevelUp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *ReqLevelUp) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqLevelUp) GetBaseUniqueId() uint32 {
	if m != nil && m.BaseUniqueId != nil {
		return *m.BaseUniqueId
	}
	return 0
}

func (m *ReqLevelUp) GetPartUniqueId() []uint32 {
	if m != nil {
		return m.PartUniqueId
	}
	return nil
}

func (m *ReqLevelUp) GetHelperUserId() uint32 {
	if m != nil && m.HelperUserId != nil {
		return *m.HelperUserId
	}
	return 0
}

func (m *ReqLevelUp) GetHelperUnit() *UserUnit {
	if m != nil {
		return m.HelperUnit
	}
	return nil
}

func (m *ReqLevelUp) GetHelperPremium() int32 {
	if m != nil && m.HelperPremium != nil {
		return *m.HelperPremium
	}
	return 0
}

type RspLevelUp struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitList         []*UserUnit  `protobuf:"bytes,2,rep,name=unitList" json:"unitList,omitempty"`
	BaseUnit         *UserUnit    `protobuf:"bytes,3,opt,name=baseUnit" json:"baseUnit,omitempty"`
	Money            *int32       `protobuf:"varint,4,opt,name=money" json:"money,omitempty"`
	BlendUniqueId    *uint32      `protobuf:"varint,5,opt,name=blendUniqueId" json:"blendUniqueId,omitempty"`
	BlendExp         *int32       `protobuf:"varint,6,opt,name=blendExp" json:"blendExp,omitempty"`
	PartUniqueId     []uint32     `protobuf:"varint,7,rep,name=partUniqueId" json:"partUniqueId,omitempty"`
	FriendPoint      *int32       `protobuf:"varint,8,opt,name=friendPoint" json:"friendPoint,omitempty"`
	GotFriendPoint   *int32       `protobuf:"varint,9,opt,name=gotFriendPoint" json:"gotFriendPoint,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspLevelUp) Reset()                    { *m = RspLevelUp{} }
func (m *RspLevelUp) String() string            { return proto.CompactTextString(m) }
func (*RspLevelUp) ProtoMessage()               {}
func (*RspLevelUp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *RspLevelUp) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspLevelUp) GetUnitList() []*UserUnit {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *RspLevelUp) GetBaseUnit() *UserUnit {
	if m != nil {
		return m.BaseUnit
	}
	return nil
}

func (m *RspLevelUp) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspLevelUp) GetBlendUniqueId() uint32 {
	if m != nil && m.BlendUniqueId != nil {
		return *m.BlendUniqueId
	}
	return 0
}

func (m *RspLevelUp) GetBlendExp() int32 {
	if m != nil && m.BlendExp != nil {
		return *m.BlendExp
	}
	return 0
}

func (m *RspLevelUp) GetPartUniqueId() []uint32 {
	if m != nil {
		return m.PartUniqueId
	}
	return nil
}

func (m *RspLevelUp) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *RspLevelUp) GetGotFriendPoint() int32 {
	if m != nil && m.GotFriendPoint != nil {
		return *m.GotFriendPoint
	}
	return 0
}

type ReqEvolveStart struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BaseUniqueId     *uint32      `protobuf:"varint,2,opt,name=baseUniqueId" json:"baseUniqueId,omitempty"`
	PartUniqueId     []uint32     `protobuf:"varint,3,rep,name=partUniqueId" json:"partUniqueId,omitempty"`
	HelperUserId     *uint32      `protobuf:"varint,4,opt,name=helperUserId" json:"helperUserId,omitempty"`
	HelperUnit       *UserUnit    `protobuf:"bytes,5,opt,name=helperUnit" json:"helperUnit,omitempty"`
	HelperPremium    *int32       `protobuf:"varint,6,opt,name=helperPremium" json:"helperPremium,omitempty"`
	EvolveQuestId    *uint32      `protobuf:"varint,7,opt,name=evolveQuestId" json:"evolveQuestId,omitempty"`
	RestartNew       *int32       `protobuf:"varint,8,opt,name=restartNew" json:"restartNew,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqEvolveStart) Reset()                    { *m = ReqEvolveStart{} }
func (m *ReqEvolveStart) String() string            { return proto.CompactTextString(m) }
func (*ReqEvolveStart) ProtoMessage()               {}
func (*ReqEvolveStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *ReqEvolveStart) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqEvolveStart) GetBaseUniqueId() uint32 {
	if m != nil && m.BaseUniqueId != nil {
		return *m.BaseUniqueId
	}
	return 0
}

func (m *ReqEvolveStart) GetPartUniqueId() []uint32 {
	if m != nil {
		return m.PartUniqueId
	}
	return nil
}

func (m *ReqEvolveStart) GetHelperUserId() uint32 {
	if m != nil && m.HelperUserId != nil {
		return *m.HelperUserId
	}
	return 0
}

func (m *ReqEvolveStart) GetHelperUnit() *UserUnit {
	if m != nil {
		return m.HelperUnit
	}
	return nil
}

func (m *ReqEvolveStart) GetHelperPremium() int32 {
	if m != nil && m.HelperPremium != nil {
		return *m.HelperPremium
	}
	return 0
}

func (m *ReqEvolveStart) GetEvolveQuestId() uint32 {
	if m != nil && m.EvolveQuestId != nil {
		return *m.EvolveQuestId
	}
	return 0
}

func (m *ReqEvolveStart) GetRestartNew() int32 {
	if m != nil && m.RestartNew != nil {
		return *m.RestartNew
	}
	return 0
}

type RspEvolveStart struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StaminaNow       *int32            `protobuf:"varint,2,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaRecover   *uint32           `protobuf:"varint,3,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	DungeonData      *QuestDungeonData `protobuf:"bytes,4,opt,name=dungeonData" json:"dungeonData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RspEvolveStart) Reset()                    { *m = RspEvolveStart{} }
func (m *RspEvolveStart) String() string            { return proto.CompactTextString(m) }
func (*RspEvolveStart) ProtoMessage()               {}
func (*RspEvolveStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *RspEvolveStart) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspEvolveStart) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspEvolveStart) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *RspEvolveStart) GetDungeonData() *QuestDungeonData {
	if m != nil {
		return m.DungeonData
	}
	return nil
}

type ReqEvolveDone struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	QuestId          *uint32      `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	SecurityKey      *uint32      `protobuf:"varint,3,opt,name=securityKey" json:"securityKey,omitempty"`
	GetMoney         *int32       `protobuf:"varint,4,opt,name=getMoney" json:"getMoney,omitempty"`
	GetUnit          []uint32     `protobuf:"varint,5,rep,name=getUnit" json:"getUnit,omitempty"`
	HitGrid          []uint32     `protobuf:"varint,6,rep,name=hitGrid" json:"hitGrid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqEvolveDone) Reset()                    { *m = ReqEvolveDone{} }
func (m *ReqEvolveDone) String() string            { return proto.CompactTextString(m) }
func (*ReqEvolveDone) ProtoMessage()               {}
func (*ReqEvolveDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *ReqEvolveDone) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqEvolveDone) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *ReqEvolveDone) GetSecurityKey() uint32 {
	if m != nil && m.SecurityKey != nil {
		return *m.SecurityKey
	}
	return 0
}

func (m *ReqEvolveDone) GetGetMoney() int32 {
	if m != nil && m.GetMoney != nil {
		return *m.GetMoney
	}
	return 0
}

func (m *ReqEvolveDone) GetGetUnit() []uint32 {
	if m != nil {
		return m.GetUnit
	}
	return nil
}

func (m *ReqEvolveDone) GetHitGrid() []uint32 {
	if m != nil {
		return m.HitGrid
	}
	return nil
}

type RspEvolveDone struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Rank             *int32       `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	RankAdd          *int32       `protobuf:"varint,3,opt,name=rankAdd" json:"rankAdd,omitempty"`
	Exp              *int32       `protobuf:"varint,4,opt,name=exp" json:"exp,omitempty"`
	Money            *int32       `protobuf:"varint,5,opt,name=money" json:"money,omitempty"`
	FriendPoint      *int32       `protobuf:"varint,6,opt,name=friendPoint" json:"friendPoint,omitempty"`
	StaminaNow       *int32       `protobuf:"varint,7,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaMax       *int32       `protobuf:"varint,8,opt,name=staminaMax" json:"staminaMax,omitempty"`
	StaminaRecover   *uint32      `protobuf:"varint,9,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	GotMoney         *int32       `protobuf:"varint,10,opt,name=gotMoney" json:"gotMoney,omitempty"`
	GotExp           *int32       `protobuf:"varint,11,opt,name=gotExp" json:"gotExp,omitempty"`
	GotStone         *int32       `protobuf:"varint,12,opt,name=gotStone" json:"gotStone,omitempty"`
	GotFriendPoint   *int32       `protobuf:"varint,13,opt,name=gotFriendPoint" json:"gotFriendPoint,omitempty"`
	GotUnit          []*UserUnit  `protobuf:"bytes,14,rep,name=gotUnit" json:"gotUnit,omitempty"`
	EvolvedUnit      *UserUnit    `protobuf:"bytes,15,opt,name=evolvedUnit" json:"evolvedUnit,omitempty"`
	CostMaxAdd       *int32       `protobuf:"varint,16,opt,name=costMaxAdd" json:"costMaxAdd,omitempty"`
	UnitMaxAdd       *int32       `protobuf:"varint,17,opt,name=unitMaxAdd" json:"unitMaxAdd,omitempty"`
	FriendMaxAdd     *int32       `protobuf:"varint,18,opt,name=friendMaxAdd" json:"friendMaxAdd,omitempty"`
	StaminaMaxAdd    *int32       `protobuf:"varint,19,opt,name=staminaMaxAdd" json:"staminaMaxAdd,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspEvolveDone) Reset()                    { *m = RspEvolveDone{} }
func (m *RspEvolveDone) String() string            { return proto.CompactTextString(m) }
func (*RspEvolveDone) ProtoMessage()               {}
func (*RspEvolveDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *RspEvolveDone) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspEvolveDone) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RspEvolveDone) GetRankAdd() int32 {
	if m != nil && m.RankAdd != nil {
		return *m.RankAdd
	}
	return 0
}

func (m *RspEvolveDone) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *RspEvolveDone) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspEvolveDone) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *RspEvolveDone) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspEvolveDone) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *RspEvolveDone) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *RspEvolveDone) GetGotMoney() int32 {
	if m != nil && m.GotMoney != nil {
		return *m.GotMoney
	}
	return 0
}

func (m *RspEvolveDone) GetGotExp() int32 {
	if m != nil && m.GotExp != nil {
		return *m.GotExp
	}
	return 0
}

func (m *RspEvolveDone) GetGotStone() int32 {
	if m != nil && m.GotStone != nil {
		return *m.GotStone
	}
	return 0
}

func (m *RspEvolveDone) GetGotFriendPoint() int32 {
	if m != nil && m.GotFriendPoint != nil {
		return *m.GotFriendPoint
	}
	return 0
}

func (m *RspEvolveDone) GetGotUnit() []*UserUnit {
	if m != nil {
		return m.GotUnit
	}
	return nil
}

func (m *RspEvolveDone) GetEvolvedUnit() *UserUnit {
	if m != nil {
		return m.EvolvedUnit
	}
	return nil
}

func (m *RspEvolveDone) GetCostMaxAdd() int32 {
	if m != nil && m.CostMaxAdd != nil {
		return *m.CostMaxAdd
	}
	return 0
}

func (m *RspEvolveDone) GetUnitMaxAdd() int32 {
	if m != nil && m.UnitMaxAdd != nil {
		return *m.UnitMaxAdd
	}
	return 0
}

func (m *RspEvolveDone) GetFriendMaxAdd() int32 {
	if m != nil && m.FriendMaxAdd != nil {
		return *m.FriendMaxAdd
	}
	return 0
}

func (m *RspEvolveDone) GetStaminaMaxAdd() int32 {
	if m != nil && m.StaminaMaxAdd != nil {
		return *m.StaminaMaxAdd
	}
	return 0
}

type ReqEvolve struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BaseUniqueId     *uint32      `protobuf:"varint,2,opt,name=baseUniqueId" json:"baseUniqueId,omitempty"`
	PartUniqueId     []uint32     `protobuf:"varint,3,rep,name=partUniqueId" json:"partUniqueId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqEvolve) Reset()                    { *m = ReqEvolve{} }
func (m *ReqEvolve) String() string            { return proto.CompactTextString(m) }
func (*ReqEvolve) ProtoMessage()               {}
func (*ReqEvolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *ReqEvolve) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqEvolve) GetBaseUniqueId() uint32 {
	if m != nil && m.BaseUniqueId != nil {
		return *m.BaseUniqueId
	}
	return 0
}

func (m *ReqEvolve) GetPartUniqueId() []uint32 {
	if m != nil {
		return m.PartUniqueId
	}
	return nil
}

type RspEvolve struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UsedMoney        *int32       `protobuf:"varint,2,opt,name=usedMoney" json:"usedMoney,omitempty"`
	TotalMoney       *int32       `protobuf:"varint,3,opt,name=totalMoney" json:"totalMoney,omitempty"`
	EvolvedUnit      *UserUnit    `protobuf:"bytes,4,opt,name=evolvedUnit" json:"evolvedUnit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspEvolve) Reset()                    { *m = RspEvolve{} }
func (m *RspEvolve) String() string            { return proto.CompactTextString(m) }
func (*RspEvolve) ProtoMessage()               {}
func (*RspEvolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *RspEvolve) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspEvolve) GetUsedMoney() int32 {
	if m != nil && m.UsedMoney != nil {
		return *m.UsedMoney
	}
	return 0
}

func (m *RspEvolve) GetTotalMoney() int32 {
	if m != nil && m.TotalMoney != nil {
		return *m.TotalMoney
	}
	return 0
}

func (m *RspEvolve) GetEvolvedUnit() *UserUnit {
	if m != nil {
		return m.EvolvedUnit
	}
	return nil
}

type ReqGacha struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GachaId          *int32       `protobuf:"varint,2,opt,name=gachaId" json:"gachaId,omitempty"`
	GachaCount       *int32       `protobuf:"varint,3,opt,name=gachaCount" json:"gachaCount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGacha) Reset()                    { *m = ReqGacha{} }
func (m *ReqGacha) String() string            { return proto.CompactTextString(m) }
func (*ReqGacha) ProtoMessage()               {}
func (*ReqGacha) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *ReqGacha) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGacha) GetGachaId() int32 {
	if m != nil && m.GachaId != nil {
		return *m.GachaId
	}
	return 0
}

func (m *ReqGacha) GetGachaCount() int32 {
	if m != nil && m.GachaCount != nil {
		return *m.GachaCount
	}
	return 0
}

type RspGacha struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitList         []*UserUnit  `protobuf:"bytes,2,rep,name=unitList" json:"unitList,omitempty"`
	UnitUniqueId     []uint32     `protobuf:"varint,3,rep,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	BlankUnitId      []uint32     `protobuf:"varint,4,rep,name=blankUnitId" json:"blankUnitId,omitempty"`
	Stone            *int32       `protobuf:"varint,5,opt,name=stone" json:"stone,omitempty"`
	FriendPoint      *int32       `protobuf:"varint,6,opt,name=friendPoint" json:"friendPoint,omitempty"`
	CountInfo        *DataCount   `protobuf:"bytes,7,opt,name=countInfo" json:"countInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGacha) Reset()                    { *m = RspGacha{} }
func (m *RspGacha) String() string            { return proto.CompactTextString(m) }
func (*RspGacha) ProtoMessage()               {}
func (*RspGacha) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *RspGacha) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGacha) GetUnitList() []*UserUnit {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *RspGacha) GetUnitUniqueId() []uint32 {
	if m != nil {
		return m.UnitUniqueId
	}
	return nil
}

func (m *RspGacha) GetBlankUnitId() []uint32 {
	if m != nil {
		return m.BlankUnitId
	}
	return nil
}

func (m *RspGacha) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspGacha) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *RspGacha) GetCountInfo() *DataCount {
	if m != nil {
		return m.CountInfo
	}
	return nil
}

type ReqSellUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitUniqueId     []uint32     `protobuf:"varint,2,rep,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqSellUnit) Reset()                    { *m = ReqSellUnit{} }
func (m *ReqSellUnit) String() string            { return proto.CompactTextString(m) }
func (*ReqSellUnit) ProtoMessage()               {}
func (*ReqSellUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *ReqSellUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqSellUnit) GetUnitUniqueId() []uint32 {
	if m != nil {
		return m.UnitUniqueId
	}
	return nil
}

type RspSellUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Money            *int32       `protobuf:"varint,2,opt,name=money" json:"money,omitempty"`
	GotMoney         *int32       `protobuf:"varint,3,opt,name=gotMoney" json:"gotMoney,omitempty"`
	UnitList         []*UserUnit  `protobuf:"bytes,4,rep,name=unitList" json:"unitList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspSellUnit) Reset()                    { *m = RspSellUnit{} }
func (m *RspSellUnit) String() string            { return proto.CompactTextString(m) }
func (*RspSellUnit) ProtoMessage()               {}
func (*RspSellUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *RspSellUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspSellUnit) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspSellUnit) GetGotMoney() int32 {
	if m != nil && m.GotMoney != nil {
		return *m.GotMoney
	}
	return 0
}

func (m *RspSellUnit) GetUnitList() []*UserUnit {
	if m != nil {
		return m.UnitList
	}
	return nil
}

type ReqUnitFavorite struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitUniqueId     *uint32          `protobuf:"varint,2,opt,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	Action           *EFavoriteAction `protobuf:"varint,3,opt,name=action,enum=bbproto.EFavoriteAction" json:"action,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ReqUnitFavorite) Reset()                    { *m = ReqUnitFavorite{} }
func (m *ReqUnitFavorite) String() string            { return proto.CompactTextString(m) }
func (*ReqUnitFavorite) ProtoMessage()               {}
func (*ReqUnitFavorite) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *ReqUnitFavorite) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqUnitFavorite) GetUnitUniqueId() uint32 {
	if m != nil && m.UnitUniqueId != nil {
		return *m.UnitUniqueId
	}
	return 0
}

func (m *ReqUnitFavorite) GetAction() EFavoriteAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return EFavoriteAction_ADD_FAVORITE
}

type RspUnitFavorite struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitUniqueId     *uint32      `protobuf:"varint,2,opt,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspUnitFavorite) Reset()                    { *m = RspUnitFavorite{} }
func (m *RspUnitFavorite) String() string            { return proto.CompactTextString(m) }
func (*RspUnitFavorite) ProtoMessage()               {}
func (*RspUnitFavorite) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *RspUnitFavorite) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspUnitFavorite) GetUnitUniqueId() uint32 {
	if m != nil && m.UnitUniqueId != nil {
		return *m.UnitUniqueId
	}
	return 0
}

type ReqUserGuideEvolveUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitId           *uint32      `protobuf:"varint,2,opt,name=unitId" json:"unitId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqUserGuideEvolveUnit) Reset()                    { *m = ReqUserGuideEvolveUnit{} }
func (m *ReqUserGuideEvolveUnit) String() string            { return proto.CompactTextString(m) }
func (*ReqUserGuideEvolveUnit) ProtoMessage()               {}
func (*ReqUserGuideEvolveUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *ReqUserGuideEvolveUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqUserGuideEvolveUnit) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

type RspUserGuideEvolveUnit struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	AddUnit          []*UserUnit  `protobuf:"bytes,2,rep,name=addUnit" json:"addUnit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspUserGuideEvolveUnit) Reset()                    { *m = RspUserGuideEvolveUnit{} }
func (m *RspUserGuideEvolveUnit) String() string            { return proto.CompactTextString(m) }
func (*RspUserGuideEvolveUnit) ProtoMessage()               {}
func (*RspUserGuideEvolveUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *RspUserGuideEvolveUnit) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspUserGuideEvolveUnit) GetAddUnit() []*UserUnit {
	if m != nil {
		return m.AddUnit
	}
	return nil
}

type ReqFragsFusion struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FragsUniqueId    *uint32      `protobuf:"varint,2,opt,name=fragsUniqueId" json:"fragsUniqueId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqFragsFusion) Reset()                    { *m = ReqFragsFusion{} }
func (m *ReqFragsFusion) String() string            { return proto.CompactTextString(m) }
func (*ReqFragsFusion) ProtoMessage()               {}
func (*ReqFragsFusion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *ReqFragsFusion) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqFragsFusion) GetFragsUniqueId() uint32 {
	if m != nil && m.FragsUniqueId != nil {
		return *m.FragsUniqueId
	}
	return 0
}

type RspFragsFusion struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UsedMoeny        *int32       `protobuf:"varint,2,opt,name=usedMoeny" json:"usedMoeny,omitempty"`
	TotalMoeny       *int32       `protobuf:"varint,3,opt,name=totalMoeny" json:"totalMoeny,omitempty"`
	FusionedUnit     *UserUnit    `protobuf:"bytes,4,opt,name=fusionedUnit" json:"fusionedUnit,omitempty"`
	FragsUnit        *UserUnit    `protobuf:"bytes,5,opt,name=fragsUnit" json:"fragsUnit,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspFragsFusion) Reset()                    { *m = RspFragsFusion{} }
func (m *RspFragsFusion) String() string            { return proto.CompactTextString(m) }
func (*RspFragsFusion) ProtoMessage()               {}
func (*RspFragsFusion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *RspFragsFusion) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspFragsFusion) GetUsedMoeny() int32 {
	if m != nil && m.UsedMoeny != nil {
		return *m.UsedMoeny
	}
	return 0
}

func (m *RspFragsFusion) GetTotalMoeny() int32 {
	if m != nil && m.TotalMoeny != nil {
		return *m.TotalMoeny
	}
	return 0
}

func (m *RspFragsFusion) GetFusionedUnit() *UserUnit {
	if m != nil {
		return m.FusionedUnit
	}
	return nil
}

func (m *RspFragsFusion) GetFragsUnit() *UserUnit {
	if m != nil {
		return m.FragsUnit
	}
	return nil
}

type UserInfo struct {
	Uuid             *string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	UserId           *uint32   `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	UserName         *string   `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	Password         *string   `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	NickName         *string   `protobuf:"bytes,5,opt,name=nickName" json:"nickName,omitempty"`
	Rank             *int32    `protobuf:"varint,6,opt,name=rank,def=-1" json:"rank,omitempty"`
	Exp              *int32    `protobuf:"varint,7,opt,name=exp,def=-1" json:"exp,omitempty"`
	StaminaNow       *int32    `protobuf:"varint,8,opt,name=staminaNow,def=-1" json:"staminaNow,omitempty"`
	StaminaMax       *int32    `protobuf:"varint,9,opt,name=staminaMax" json:"staminaMax,omitempty"`
	StaminaRecover   *uint32   `protobuf:"varint,10,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	FriendMax        *int32    `protobuf:"varint,11,opt,name=friendMax" json:"friendMax,omitempty"`
	UnitMax          *int32    `protobuf:"varint,12,opt,name=unitMax" json:"unitMax,omitempty"`
	CostMax          *int32    `protobuf:"varint,13,opt,name=costMax" json:"costMax,omitempty"`
	Unit             *UserUnit `protobuf:"bytes,14,opt,name=unit" json:"unit,omitempty"`
	RegTime          *uint32   `protobuf:"varint,15,opt,name=regTime" json:"regTime,omitempty"`
	VipLevel         *int32    `protobuf:"varint,16,opt,name=vipLevel,def=-1" json:"vipLevel,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

const Default_UserInfo_Rank int32 = -1
const Default_UserInfo_Exp int32 = -1
const Default_UserInfo_StaminaNow int32 = -1
const Default_UserInfo_VipLevel int32 = -1

func (m *UserInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *UserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UserInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *UserInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *UserInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return Default_UserInfo_Rank
}

func (m *UserInfo) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return Default_UserInfo_Exp
}

func (m *UserInfo) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return Default_UserInfo_StaminaNow
}

func (m *UserInfo) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *UserInfo) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *UserInfo) GetFriendMax() int32 {
	if m != nil && m.FriendMax != nil {
		return *m.FriendMax
	}
	return 0
}

func (m *UserInfo) GetUnitMax() int32 {
	if m != nil && m.UnitMax != nil {
		return *m.UnitMax
	}
	return 0
}

func (m *UserInfo) GetCostMax() int32 {
	if m != nil && m.CostMax != nil {
		return *m.CostMax
	}
	return 0
}

func (m *UserInfo) GetUnit() *UserUnit {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *UserInfo) GetRegTime() uint32 {
	if m != nil && m.RegTime != nil {
		return *m.RegTime
	}
	return 0
}

func (m *UserInfo) GetVipLevel() int32 {
	if m != nil && m.VipLevel != nil {
		return *m.VipLevel
	}
	return Default_UserInfo_VipLevel
}

type UserInfoDetail struct {
	User             *UserInfo        `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account          *AccountInfo     `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Quest            *QuestLog        `protobuf:"bytes,3,opt,name=quest" json:"quest,omitempty"`
	UnitList         []*UserUnit      `protobuf:"bytes,4,rep,name=unitList" json:"unitList,omitempty"`
	Party            *PartyInfo       `protobuf:"bytes,5,opt,name=party" json:"party,omitempty"`
	Login            *LoginInfo       `protobuf:"bytes,6,opt,name=login" json:"login,omitempty"`
	QuestClear       *QuestClearInfo  `protobuf:"bytes,7,opt,name=questClear" json:"questClear,omitempty"`
	UnitFavoriteFlag []byte           `protobuf:"bytes,8,opt,name=unitFavoriteFlag" json:"unitFavoriteFlag,omitempty"`
	HaveUnitFlag     []byte           `protobuf:"bytes,9,opt,name=haveUnitFlag" json:"haveUnitFlag,omitempty"`
	MeetUnitFlag     []byte           `protobuf:"bytes,10,opt,name=meetUnitFlag" json:"meetUnitFlag,omitempty"`
	UserGuideFlag    []byte           `protobuf:"bytes,11,opt,name=userGuideFlag" json:"userGuideFlag,omitempty"`
	Flag             *int32           `protobuf:"varint,12,opt,name=flag" json:"flag,omitempty"`
	DailyOptCnt      *DailyUserOptCnt `protobuf:"bytes,13,opt,name=dailyOptCnt" json:"dailyOptCnt,omitempty"`
	UserTaskInfo     *UserTaskInfo    `protobuf:"bytes,14,opt,name=userTaskInfo" json:"userTaskInfo,omitempty"`
	TotalOptCnt      *TotalUserOptCnt `protobuf:"bytes,15,opt,name=totalOptCnt" json:"totalOptCnt,omitempty"`
	CopyInfo         *UserCopyInfo    `protobuf:"bytes,16,opt,name=copyInfo" json:"copyInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *UserInfoDetail) Reset()                    { *m = UserInfoDetail{} }
func (m *UserInfoDetail) String() string            { return proto.CompactTextString(m) }
func (*UserInfoDetail) ProtoMessage()               {}
func (*UserInfoDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *UserInfoDetail) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserInfoDetail) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *UserInfoDetail) GetQuest() *QuestLog {
	if m != nil {
		return m.Quest
	}
	return nil
}

func (m *UserInfoDetail) GetUnitList() []*UserUnit {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *UserInfoDetail) GetParty() *PartyInfo {
	if m != nil {
		return m.Party
	}
	return nil
}

func (m *UserInfoDetail) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *UserInfoDetail) GetQuestClear() *QuestClearInfo {
	if m != nil {
		return m.QuestClear
	}
	return nil
}

func (m *UserInfoDetail) GetUnitFavoriteFlag() []byte {
	if m != nil {
		return m.UnitFavoriteFlag
	}
	return nil
}

func (m *UserInfoDetail) GetHaveUnitFlag() []byte {
	if m != nil {
		return m.HaveUnitFlag
	}
	return nil
}

func (m *UserInfoDetail) GetMeetUnitFlag() []byte {
	if m != nil {
		return m.MeetUnitFlag
	}
	return nil
}

func (m *UserInfoDetail) GetUserGuideFlag() []byte {
	if m != nil {
		return m.UserGuideFlag
	}
	return nil
}

func (m *UserInfoDetail) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *UserInfoDetail) GetDailyOptCnt() *DailyUserOptCnt {
	if m != nil {
		return m.DailyOptCnt
	}
	return nil
}

func (m *UserInfoDetail) GetUserTaskInfo() *UserTaskInfo {
	if m != nil {
		return m.UserTaskInfo
	}
	return nil
}

func (m *UserInfoDetail) GetTotalOptCnt() *TotalUserOptCnt {
	if m != nil {
		return m.TotalOptCnt
	}
	return nil
}

func (m *UserInfoDetail) GetCopyInfo() *UserCopyInfo {
	if m != nil {
		return m.CopyInfo
	}
	return nil
}

type MonthCard struct {
	BuyFlag          *bool   `protobuf:"varint,1,opt,name=buyFlag" json:"buyFlag,omitempty"`
	BuyTime          *uint32 `protobuf:"varint,2,opt,name=buyTime" json:"buyTime,omitempty"`
	NextReceiveTime  *uint32 `protobuf:"varint,3,opt,name=nextReceiveTime" json:"nextReceiveTime,omitempty"`
	RemainCount      *int32  `protobuf:"varint,4,opt,name=remainCount" json:"remainCount,omitempty"`
	CardType         *int32  `protobuf:"varint,5,opt,name=cardType" json:"cardType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MonthCard) Reset()                    { *m = MonthCard{} }
func (m *MonthCard) String() string            { return proto.CompactTextString(m) }
func (*MonthCard) ProtoMessage()               {}
func (*MonthCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *MonthCard) GetBuyFlag() bool {
	if m != nil && m.BuyFlag != nil {
		return *m.BuyFlag
	}
	return false
}

func (m *MonthCard) GetBuyTime() uint32 {
	if m != nil && m.BuyTime != nil {
		return *m.BuyTime
	}
	return 0
}

func (m *MonthCard) GetNextReceiveTime() uint32 {
	if m != nil && m.NextReceiveTime != nil {
		return *m.NextReceiveTime
	}
	return 0
}

func (m *MonthCard) GetRemainCount() int32 {
	if m != nil && m.RemainCount != nil {
		return *m.RemainCount
	}
	return 0
}

func (m *MonthCard) GetCardType() int32 {
	if m != nil && m.CardType != nil {
		return *m.CardType
	}
	return 0
}

type AccountInfo struct {
	Review           *int32     `protobuf:"varint,1,opt,name=review" json:"review,omitempty"`
	PayTotal         *int32     `protobuf:"varint,2,opt,name=payTotal,def=-1" json:"payTotal,omitempty"`
	PayMonth         *int32     `protobuf:"varint,3,opt,name=payMonth,def=-1" json:"payMonth,omitempty"`
	Money            *int32     `protobuf:"varint,4,opt,name=money,def=-1" json:"money,omitempty"`
	StonePay         *int32     `protobuf:"varint,5,opt,name=stonePay,def=-1" json:"stonePay,omitempty"`
	StoneFree        *int32     `protobuf:"varint,6,opt,name=stoneFree,def=-1" json:"stoneFree,omitempty"`
	Stone            *int32     `protobuf:"varint,7,opt,name=stone,def=-1" json:"stone,omitempty"`
	FriendPoint      *int32     `protobuf:"varint,8,opt,name=friendPoint,def=-1" json:"friendPoint,omitempty"`
	FirstSelectNum   *int32     `protobuf:"varint,9,opt,name=firstSelectNum,def=-1" json:"firstSelectNum,omitempty"`
	MonthCard        *MonthCard `protobuf:"bytes,10,opt,name=monthCard" json:"monthCard,omitempty"`
	WeekCard         *MonthCard `protobuf:"bytes,11,opt,name=weekCard" json:"weekCard,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *AccountInfo) Reset()                    { *m = AccountInfo{} }
func (m *AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()               {}
func (*AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

const Default_AccountInfo_PayTotal int32 = -1
const Default_AccountInfo_PayMonth int32 = -1
const Default_AccountInfo_Money int32 = -1
const Default_AccountInfo_StonePay int32 = -1
const Default_AccountInfo_StoneFree int32 = -1
const Default_AccountInfo_Stone int32 = -1
const Default_AccountInfo_FriendPoint int32 = -1
const Default_AccountInfo_FirstSelectNum int32 = -1

func (m *AccountInfo) GetReview() int32 {
	if m != nil && m.Review != nil {
		return *m.Review
	}
	return 0
}

func (m *AccountInfo) GetPayTotal() int32 {
	if m != nil && m.PayTotal != nil {
		return *m.PayTotal
	}
	return Default_AccountInfo_PayTotal
}

func (m *AccountInfo) GetPayMonth() int32 {
	if m != nil && m.PayMonth != nil {
		return *m.PayMonth
	}
	return Default_AccountInfo_PayMonth
}

func (m *AccountInfo) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return Default_AccountInfo_Money
}

func (m *AccountInfo) GetStonePay() int32 {
	if m != nil && m.StonePay != nil {
		return *m.StonePay
	}
	return Default_AccountInfo_StonePay
}

func (m *AccountInfo) GetStoneFree() int32 {
	if m != nil && m.StoneFree != nil {
		return *m.StoneFree
	}
	return Default_AccountInfo_StoneFree
}

func (m *AccountInfo) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return Default_AccountInfo_Stone
}

func (m *AccountInfo) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return Default_AccountInfo_FriendPoint
}

func (m *AccountInfo) GetFirstSelectNum() int32 {
	if m != nil && m.FirstSelectNum != nil {
		return *m.FirstSelectNum
	}
	return Default_AccountInfo_FirstSelectNum
}

func (m *AccountInfo) GetMonthCard() *MonthCard {
	if m != nil {
		return m.MonthCard
	}
	return nil
}

func (m *AccountInfo) GetWeekCard() *MonthCard {
	if m != nil {
		return m.WeekCard
	}
	return nil
}

type StageClearItem struct {
	StageId          *uint32 `protobuf:"varint,1,opt,name=stageId" json:"stageId,omitempty"`
	QuestId          *uint32 `protobuf:"varint,2,opt,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StageClearItem) Reset()                    { *m = StageClearItem{} }
func (m *StageClearItem) String() string            { return proto.CompactTextString(m) }
func (*StageClearItem) ProtoMessage()               {}
func (*StageClearItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *StageClearItem) GetStageId() uint32 {
	if m != nil && m.StageId != nil {
		return *m.StageId
	}
	return 0
}

func (m *StageClearItem) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type QuestClearInfo struct {
	StoryClear       *StageClearItem   `protobuf:"bytes,1,opt,name=storyClear" json:"storyClear,omitempty"`
	EventClear       []*StageClearItem `protobuf:"bytes,2,rep,name=eventClear" json:"eventClear,omitempty"`
	EliteClear       *StageClearItem   `protobuf:"bytes,3,opt,name=eliteClear" json:"eliteClear,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *QuestClearInfo) Reset()                    { *m = QuestClearInfo{} }
func (m *QuestClearInfo) String() string            { return proto.CompactTextString(m) }
func (*QuestClearInfo) ProtoMessage()               {}
func (*QuestClearInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *QuestClearInfo) GetStoryClear() *StageClearItem {
	if m != nil {
		return m.StoryClear
	}
	return nil
}

func (m *QuestClearInfo) GetEventClear() []*StageClearItem {
	if m != nil {
		return m.EventClear
	}
	return nil
}

func (m *QuestClearInfo) GetEliteClear() *StageClearItem {
	if m != nil {
		return m.EliteClear
	}
	return nil
}

type PartyItem struct {
	UnitPos          *int32  `protobuf:"varint,1,opt,name=unitPos" json:"unitPos,omitempty"`
	UnitUniqueId     *uint32 `protobuf:"varint,2,opt,name=unitUniqueId" json:"unitUniqueId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PartyItem) Reset()                    { *m = PartyItem{} }
func (m *PartyItem) String() string            { return proto.CompactTextString(m) }
func (*PartyItem) ProtoMessage()               {}
func (*PartyItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *PartyItem) GetUnitPos() int32 {
	if m != nil && m.UnitPos != nil {
		return *m.UnitPos
	}
	return 0
}

func (m *PartyItem) GetUnitUniqueId() uint32 {
	if m != nil && m.UnitUniqueId != nil {
		return *m.UnitUniqueId
	}
	return 0
}

type UnitParty struct {
	Id               *int32       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Items            []*PartyItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UnitParty) Reset()                    { *m = UnitParty{} }
func (m *UnitParty) String() string            { return proto.CompactTextString(m) }
func (*UnitParty) ProtoMessage()               {}
func (*UnitParty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *UnitParty) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UnitParty) GetItems() []*PartyItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type PartyInfo struct {
	PartyList        []*UnitParty `protobuf:"bytes,1,rep,name=partyList" json:"partyList,omitempty"`
	CurrentParty     *int32       `protobuf:"varint,2,opt,name=currentParty" json:"currentParty,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PartyInfo) Reset()                    { *m = PartyInfo{} }
func (m *PartyInfo) String() string            { return proto.CompactTextString(m) }
func (*PartyInfo) ProtoMessage()               {}
func (*PartyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *PartyInfo) GetPartyList() []*UnitParty {
	if m != nil {
		return m.PartyList
	}
	return nil
}

func (m *PartyInfo) GetCurrentParty() int32 {
	if m != nil && m.CurrentParty != nil {
		return *m.CurrentParty
	}
	return 0
}

type TerminalInfo struct {
	Channel          *string `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	DeviceName       *string `protobuf:"bytes,2,opt,name=deviceName" json:"deviceName,omitempty"`
	Uuid             *string `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	Os               *string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TerminalInfo) Reset()                    { *m = TerminalInfo{} }
func (m *TerminalInfo) String() string            { return proto.CompactTextString(m) }
func (*TerminalInfo) ProtoMessage()               {}
func (*TerminalInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *TerminalInfo) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *TerminalInfo) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *TerminalInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *TerminalInfo) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

type GiftItem struct {
	Content          *int32        `protobuf:"varint,1,opt,name=content" json:"content,omitempty"`
	Value            *int32        `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Count            *int32        `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Mtype            *MaterialType `protobuf:"varint,4,opt,name=mtype,enum=bbproto.MaterialType" json:"mtype,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GiftItem) Reset()                    { *m = GiftItem{} }
func (m *GiftItem) String() string            { return proto.CompactTextString(m) }
func (*GiftItem) ProtoMessage()               {}
func (*GiftItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *GiftItem) GetContent() int32 {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return 0
}

func (m *GiftItem) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *GiftItem) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *GiftItem) GetMtype() MaterialType {
	if m != nil && m.Mtype != nil {
		return *m.Mtype
	}
	return MaterialType_MT_UNIT
}

type BonusInfo struct {
	Id               *int32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *int32      `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	MatchValue       *int32      `protobuf:"varint,3,opt,name=matchValue" json:"matchValue,omitempty"`
	ValidTime        *uint32     `protobuf:"varint,4,opt,name=validTime" json:"validTime,omitempty"`
	Message          *string     `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	GiftItem         []*GiftItem `protobuf:"bytes,6,rep,name=giftItem" json:"giftItem,omitempty"`
	Enabled          *int32      `protobuf:"varint,7,opt,name=enabled" json:"enabled,omitempty"`
	Tag              *int32      `protobuf:"varint,8,opt,name=tag" json:"tag,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *BonusInfo) Reset()                    { *m = BonusInfo{} }
func (m *BonusInfo) String() string            { return proto.CompactTextString(m) }
func (*BonusInfo) ProtoMessage()               {}
func (*BonusInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *BonusInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BonusInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BonusInfo) GetMatchValue() int32 {
	if m != nil && m.MatchValue != nil {
		return *m.MatchValue
	}
	return 0
}

func (m *BonusInfo) GetValidTime() uint32 {
	if m != nil && m.ValidTime != nil {
		return *m.ValidTime
	}
	return 0
}

func (m *BonusInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *BonusInfo) GetGiftItem() []*GiftItem {
	if m != nil {
		return m.GiftItem
	}
	return nil
}

func (m *BonusInfo) GetEnabled() int32 {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return 0
}

func (m *BonusInfo) GetTag() int32 {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return 0
}

type LoginInfo struct {
	LoginTotal       *int32       `protobuf:"varint,1,opt,name=loginTotal" json:"loginTotal,omitempty"`
	LoginChain       *int32       `protobuf:"varint,2,opt,name=loginChain" json:"loginChain,omitempty"`
	LoginDayTotal    *int32       `protobuf:"varint,3,opt,name=loginDayTotal" json:"loginDayTotal,omitempty"`
	LastLoginTime    *uint32      `protobuf:"varint,4,opt,name=lastLoginTime" json:"lastLoginTime,omitempty"`
	LastPlayTime     *uint32      `protobuf:"varint,5,opt,name=lastPlayTime" json:"lastPlayTime,omitempty"`
	Bonus            []*BonusInfo `protobuf:"bytes,6,rep,name=bonus" json:"bonus,omitempty"`
	MaxBonusId       *int32       `protobuf:"varint,7,opt,name=maxBonusId" json:"maxBonusId,omitempty"`
	OnceBonusId      []int32      `protobuf:"varint,8,rep,name=onceBonusId" json:"onceBonusId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *LoginInfo) Reset()                    { *m = LoginInfo{} }
func (m *LoginInfo) String() string            { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()               {}
func (*LoginInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *LoginInfo) GetLoginTotal() int32 {
	if m != nil && m.LoginTotal != nil {
		return *m.LoginTotal
	}
	return 0
}

func (m *LoginInfo) GetLoginChain() int32 {
	if m != nil && m.LoginChain != nil {
		return *m.LoginChain
	}
	return 0
}

func (m *LoginInfo) GetLoginDayTotal() int32 {
	if m != nil && m.LoginDayTotal != nil {
		return *m.LoginDayTotal
	}
	return 0
}

func (m *LoginInfo) GetLastLoginTime() uint32 {
	if m != nil && m.LastLoginTime != nil {
		return *m.LastLoginTime
	}
	return 0
}

func (m *LoginInfo) GetLastPlayTime() uint32 {
	if m != nil && m.LastPlayTime != nil {
		return *m.LastPlayTime
	}
	return 0
}

func (m *LoginInfo) GetBonus() []*BonusInfo {
	if m != nil {
		return m.Bonus
	}
	return nil
}

func (m *LoginInfo) GetMaxBonusId() int32 {
	if m != nil && m.MaxBonusId != nil {
		return *m.MaxBonusId
	}
	return 0
}

func (m *LoginInfo) GetOnceBonusId() []int32 {
	if m != nil {
		return m.OnceBonusId
	}
	return nil
}

type PresentInfo struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SendTime         *uint32 `protobuf:"varint,2,opt,name=sendTime" json:"sendTime,omitempty"`
	Type             *uint32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Value1           *uint32 `protobuf:"varint,4,opt,name=value1" json:"value1,omitempty"`
	Value2           *uint32 `protobuf:"varint,5,opt,name=value2" json:"value2,omitempty"`
	Message          *string `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PresentInfo) Reset()                    { *m = PresentInfo{} }
func (m *PresentInfo) String() string            { return proto.CompactTextString(m) }
func (*PresentInfo) ProtoMessage()               {}
func (*PresentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *PresentInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PresentInfo) GetSendTime() uint32 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *PresentInfo) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PresentInfo) GetValue1() uint32 {
	if m != nil && m.Value1 != nil {
		return *m.Value1
	}
	return 0
}

func (m *PresentInfo) GetValue2() uint32 {
	if m != nil && m.Value2 != nil {
		return *m.Value2
	}
	return 0
}

func (m *PresentInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type SessionInfo struct {
	SessionId        *string `protobuf:"bytes,1,opt,name=sessionId" json:"sessionId,omitempty"`
	Uuid             *string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	QuestId          *uint32 `protobuf:"varint,4,opt,name=questId" json:"questId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionInfo) Reset()                    { *m = SessionInfo{} }
func (m *SessionInfo) String() string            { return proto.CompactTextString(m) }
func (*SessionInfo) ProtoMessage()               {}
func (*SessionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *SessionInfo) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *SessionInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *SessionInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SessionInfo) GetQuestId() uint32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type ReqGetUserInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqGetUserInfo) Reset()                    { *m = ReqGetUserInfo{} }
func (m *ReqGetUserInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqGetUserInfo) ProtoMessage()               {}
func (*ReqGetUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *ReqGetUserInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqGetUserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type RspGetUserInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo    `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspGetUserInfo) Reset()                    { *m = RspGetUserInfo{} }
func (m *RspGetUserInfo) String() string            { return proto.CompactTextString(m) }
func (*RspGetUserInfo) ProtoMessage()               {}
func (*RspGetUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *RspGetUserInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspGetUserInfo) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

// -------------------------------------------------
type NoticeItem struct {
	Title            *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NoticeItem) Reset()                    { *m = NoticeItem{} }
func (m *NoticeItem) String() string            { return proto.CompactTextString(m) }
func (*NoticeItem) ProtoMessage()               {}
func (*NoticeItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *NoticeItem) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *NoticeItem) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type NoticeInfo struct {
	Items            []*NoticeItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	GachaNotice      *string       `protobuf:"bytes,2,opt,name=gachaNotice" json:"gachaNotice,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *NoticeInfo) Reset()                    { *m = NoticeInfo{} }
func (m *NoticeInfo) String() string            { return proto.CompactTextString(m) }
func (*NoticeInfo) ProtoMessage()               {}
func (*NoticeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *NoticeInfo) GetItems() []*NoticeItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *NoticeInfo) GetGachaNotice() string {
	if m != nil && m.GachaNotice != nil {
		return *m.GachaNotice
	}
	return ""
}

type DataCount struct {
	GachaWillGet5Star *int32 `protobuf:"varint,1,opt,name=gachaWillGet5Star,def=-1" json:"gachaWillGet5Star,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *DataCount) Reset()                    { *m = DataCount{} }
func (m *DataCount) String() string            { return proto.CompactTextString(m) }
func (*DataCount) ProtoMessage()               {}
func (*DataCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

const Default_DataCount_GachaWillGet5Star int32 = -1

func (m *DataCount) GetGachaWillGet5Star() int32 {
	if m != nil && m.GachaWillGet5Star != nil {
		return *m.GachaWillGet5Star
	}
	return Default_DataCount_GachaWillGet5Star
}

type ReqAuthUser struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Terminal         *TerminalInfo `protobuf:"bytes,2,opt,name=terminal" json:"terminal,omitempty"`
	SelectRole       *uint32       `protobuf:"varint,3,opt,name=selectRole" json:"selectRole,omitempty"`
	AppVersion       *int32        `protobuf:"varint,4,opt,name=appVersion" json:"appVersion,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ReqAuthUser) Reset()                    { *m = ReqAuthUser{} }
func (m *ReqAuthUser) String() string            { return proto.CompactTextString(m) }
func (*ReqAuthUser) ProtoMessage()               {}
func (*ReqAuthUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *ReqAuthUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAuthUser) GetTerminal() *TerminalInfo {
	if m != nil {
		return m.Terminal
	}
	return nil
}

func (m *ReqAuthUser) GetSelectRole() uint32 {
	if m != nil && m.SelectRole != nil {
		return *m.SelectRole
	}
	return 0
}

func (m *ReqAuthUser) GetAppVersion() int32 {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return 0
}

type RspAuthUser struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo        `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Account          *AccountInfo     `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Quest            *QuestLog        `protobuf:"bytes,4,opt,name=quest" json:"quest,omitempty"`
	UnitList         []*UserUnit      `protobuf:"bytes,5,rep,name=unitList" json:"unitList,omitempty"`
	Party            *PartyInfo       `protobuf:"bytes,6,opt,name=party" json:"party,omitempty"`
	ServerTime       *uint32          `protobuf:"varint,7,opt,name=serverTime" json:"serverTime,omitempty"`
	Login            *LoginInfo       `protobuf:"bytes,8,opt,name=login" json:"login,omitempty"`
	Friends          []*FriendInfo    `protobuf:"bytes,9,rep,name=friends" json:"friends,omitempty"`
	Present          []*PresentInfo   `protobuf:"bytes,10,rep,name=present" json:"present,omitempty"`
	EvolveType       *EUnitType       `protobuf:"varint,11,opt,name=evolveType,enum=bbproto.EUnitType" json:"evolveType,omitempty"`
	QuestClear       *QuestClearInfo  `protobuf:"bytes,12,opt,name=questClear" json:"questClear,omitempty"`
	IsNewUser        *int32           `protobuf:"varint,13,opt,name=isNewUser" json:"isNewUser,omitempty"`
	HaveUnitFlag     []byte           `protobuf:"bytes,14,opt,name=haveUnitFlag" json:"haveUnitFlag,omitempty"`
	MeetUnitFlag     []byte           `protobuf:"bytes,15,opt,name=meetUnitFlag" json:"meetUnitFlag,omitempty"`
	NewAppVersion    *int32           `protobuf:"varint,16,opt,name=newAppVersion" json:"newAppVersion,omitempty"`
	AppUrl           *string          `protobuf:"bytes,17,opt,name=appUrl" json:"appUrl,omitempty"`
	UserGuideStep    *int32           `protobuf:"varint,18,opt,name=userGuideStep" json:"userGuideStep,omitempty"`
	Notice           *NoticeInfo      `protobuf:"bytes,19,opt,name=notice" json:"notice,omitempty"`
	EventList        []*StageInfo     `protobuf:"bytes,20,rep,name=eventList" json:"eventList,omitempty"`
	HelpCountInfo    *StatHelperCount `protobuf:"bytes,21,opt,name=helpCountInfo" json:"helpCountInfo,omitempty"`
	VipConfList      []*VipConf       `protobuf:"bytes,22,rep,name=vipConfList" json:"vipConfList,omitempty"`
	CountInfo        *DataCount       `protobuf:"bytes,23,opt,name=countInfo" json:"countInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RspAuthUser) Reset()                    { *m = RspAuthUser{} }
func (m *RspAuthUser) String() string            { return proto.CompactTextString(m) }
func (*RspAuthUser) ProtoMessage()               {}
func (*RspAuthUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *RspAuthUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAuthUser) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *RspAuthUser) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *RspAuthUser) GetQuest() *QuestLog {
	if m != nil {
		return m.Quest
	}
	return nil
}

func (m *RspAuthUser) GetUnitList() []*UserUnit {
	if m != nil {
		return m.UnitList
	}
	return nil
}

func (m *RspAuthUser) GetParty() *PartyInfo {
	if m != nil {
		return m.Party
	}
	return nil
}

func (m *RspAuthUser) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *RspAuthUser) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *RspAuthUser) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *RspAuthUser) GetPresent() []*PresentInfo {
	if m != nil {
		return m.Present
	}
	return nil
}

func (m *RspAuthUser) GetEvolveType() EUnitType {
	if m != nil && m.EvolveType != nil {
		return *m.EvolveType
	}
	return EUnitType_UALL
}

func (m *RspAuthUser) GetQuestClear() *QuestClearInfo {
	if m != nil {
		return m.QuestClear
	}
	return nil
}

func (m *RspAuthUser) GetIsNewUser() int32 {
	if m != nil && m.IsNewUser != nil {
		return *m.IsNewUser
	}
	return 0
}

func (m *RspAuthUser) GetHaveUnitFlag() []byte {
	if m != nil {
		return m.HaveUnitFlag
	}
	return nil
}

func (m *RspAuthUser) GetMeetUnitFlag() []byte {
	if m != nil {
		return m.MeetUnitFlag
	}
	return nil
}

func (m *RspAuthUser) GetNewAppVersion() int32 {
	if m != nil && m.NewAppVersion != nil {
		return *m.NewAppVersion
	}
	return 0
}

func (m *RspAuthUser) GetAppUrl() string {
	if m != nil && m.AppUrl != nil {
		return *m.AppUrl
	}
	return ""
}

func (m *RspAuthUser) GetUserGuideStep() int32 {
	if m != nil && m.UserGuideStep != nil {
		return *m.UserGuideStep
	}
	return 0
}

func (m *RspAuthUser) GetNotice() *NoticeInfo {
	if m != nil {
		return m.Notice
	}
	return nil
}

func (m *RspAuthUser) GetEventList() []*StageInfo {
	if m != nil {
		return m.EventList
	}
	return nil
}

func (m *RspAuthUser) GetHelpCountInfo() *StatHelperCount {
	if m != nil {
		return m.HelpCountInfo
	}
	return nil
}

func (m *RspAuthUser) GetVipConfList() []*VipConf {
	if m != nil {
		return m.VipConfList
	}
	return nil
}

func (m *RspAuthUser) GetCountInfo() *DataCount {
	if m != nil {
		return m.CountInfo
	}
	return nil
}

// -------------------------------------------------
type ReqLoginPack struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GetLogin         *bool        `protobuf:"varint,2,opt,name=getLogin" json:"getLogin,omitempty"`
	GetFriend        *bool        `protobuf:"varint,3,opt,name=getFriend" json:"getFriend,omitempty"`
	GetHelper        *bool        `protobuf:"varint,4,opt,name=getHelper" json:"getHelper,omitempty"`
	GetPresent       *bool        `protobuf:"varint,5,opt,name=getPresent" json:"getPresent,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqLoginPack) Reset()                    { *m = ReqLoginPack{} }
func (m *ReqLoginPack) String() string            { return proto.CompactTextString(m) }
func (*ReqLoginPack) ProtoMessage()               {}
func (*ReqLoginPack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *ReqLoginPack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqLoginPack) GetGetLogin() bool {
	if m != nil && m.GetLogin != nil {
		return *m.GetLogin
	}
	return false
}

func (m *ReqLoginPack) GetGetFriend() bool {
	if m != nil && m.GetFriend != nil {
		return *m.GetFriend
	}
	return false
}

func (m *ReqLoginPack) GetGetHelper() bool {
	if m != nil && m.GetHelper != nil {
		return *m.GetHelper
	}
	return false
}

func (m *ReqLoginPack) GetGetPresent() bool {
	if m != nil && m.GetPresent != nil {
		return *m.GetPresent
	}
	return false
}

type RspLoginPack struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Login            *LoginInfo     `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Friends          []*FriendInfo  `protobuf:"bytes,9,rep,name=friends" json:"friends,omitempty"`
	Present          []*PresentInfo `protobuf:"bytes,4,rep,name=present" json:"present,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RspLoginPack) Reset()                    { *m = RspLoginPack{} }
func (m *RspLoginPack) String() string            { return proto.CompactTextString(m) }
func (*RspLoginPack) ProtoMessage()               {}
func (*RspLoginPack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *RspLoginPack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspLoginPack) GetLogin() *LoginInfo {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *RspLoginPack) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *RspLoginPack) GetPresent() []*PresentInfo {
	if m != nil {
		return m.Present
	}
	return nil
}

type ReqRenameNick struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NewNickName      *string      `protobuf:"bytes,2,opt,name=newNickName" json:"newNickName,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqRenameNick) Reset()                    { *m = ReqRenameNick{} }
func (m *ReqRenameNick) String() string            { return proto.CompactTextString(m) }
func (*ReqRenameNick) ProtoMessage()               {}
func (*ReqRenameNick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

func (m *ReqRenameNick) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqRenameNick) GetNewNickName() string {
	if m != nil && m.NewNickName != nil {
		return *m.NewNickName
	}
	return ""
}

type RspRenameNick struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NewNickName      *string      `protobuf:"bytes,2,opt,name=newNickName" json:"newNickName,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspRenameNick) Reset()                    { *m = RspRenameNick{} }
func (m *RspRenameNick) String() string            { return proto.CompactTextString(m) }
func (*RspRenameNick) ProtoMessage()               {}
func (*RspRenameNick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *RspRenameNick) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspRenameNick) GetNewNickName() string {
	if m != nil && m.NewNickName != nil {
		return *m.NewNickName
	}
	return ""
}

type ReqRestoreStamina struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqRestoreStamina) Reset()                    { *m = ReqRestoreStamina{} }
func (m *ReqRestoreStamina) String() string            { return proto.CompactTextString(m) }
func (*ReqRestoreStamina) ProtoMessage()               {}
func (*ReqRestoreStamina) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *ReqRestoreStamina) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspRestoreStamina struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StaminaNow       *int32       `protobuf:"varint,2,opt,name=staminaNow" json:"staminaNow,omitempty"`
	StaminaMax       *int32       `protobuf:"varint,3,opt,name=staminaMax" json:"staminaMax,omitempty"`
	StaminaRecover   *uint32      `protobuf:"varint,4,opt,name=staminaRecover" json:"staminaRecover,omitempty"`
	Stone            *int32       `protobuf:"varint,5,opt,name=stone" json:"stone,omitempty"`
	UsedVipCnt       *int32       `protobuf:"varint,6,opt,name=usedVipCnt" json:"usedVipCnt,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspRestoreStamina) Reset()                    { *m = RspRestoreStamina{} }
func (m *RspRestoreStamina) String() string            { return proto.CompactTextString(m) }
func (*RspRestoreStamina) ProtoMessage()               {}
func (*RspRestoreStamina) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *RspRestoreStamina) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspRestoreStamina) GetStaminaNow() int32 {
	if m != nil && m.StaminaNow != nil {
		return *m.StaminaNow
	}
	return 0
}

func (m *RspRestoreStamina) GetStaminaMax() int32 {
	if m != nil && m.StaminaMax != nil {
		return *m.StaminaMax
	}
	return 0
}

func (m *RspRestoreStamina) GetStaminaRecover() uint32 {
	if m != nil && m.StaminaRecover != nil {
		return *m.StaminaRecover
	}
	return 0
}

func (m *RspRestoreStamina) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspRestoreStamina) GetUsedVipCnt() int32 {
	if m != nil && m.UsedVipCnt != nil {
		return *m.UsedVipCnt
	}
	return 0
}

// -------------------------------------------------
type ReqChangeParty struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Party            *PartyInfo   `protobuf:"bytes,2,opt,name=party" json:"party,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqChangeParty) Reset()                    { *m = ReqChangeParty{} }
func (m *ReqChangeParty) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeParty) ProtoMessage()               {}
func (*ReqChangeParty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *ReqChangeParty) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqChangeParty) GetParty() *PartyInfo {
	if m != nil {
		return m.Party
	}
	return nil
}

type RspChangeParty struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspChangeParty) Reset()                    { *m = RspChangeParty{} }
func (m *RspChangeParty) String() string            { return proto.CompactTextString(m) }
func (*RspChangeParty) ProtoMessage()               {}
func (*RspChangeParty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *RspChangeParty) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// -------------------------------------------------
type ReqUnitMaxExpand struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqUnitMaxExpand) Reset()                    { *m = ReqUnitMaxExpand{} }
func (m *ReqUnitMaxExpand) String() string            { return proto.CompactTextString(m) }
func (*ReqUnitMaxExpand) ProtoMessage()               {}
func (*ReqUnitMaxExpand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *ReqUnitMaxExpand) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspUnitMaxExpand struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UnitMax          *int32       `protobuf:"varint,2,opt,name=unitMax" json:"unitMax,omitempty"`
	Stone            *int32       `protobuf:"varint,3,opt,name=stone" json:"stone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspUnitMaxExpand) Reset()                    { *m = RspUnitMaxExpand{} }
func (m *RspUnitMaxExpand) String() string            { return proto.CompactTextString(m) }
func (*RspUnitMaxExpand) ProtoMessage()               {}
func (*RspUnitMaxExpand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *RspUnitMaxExpand) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspUnitMaxExpand) GetUnitMax() int32 {
	if m != nil && m.UnitMax != nil {
		return *m.UnitMax
	}
	return 0
}

func (m *RspUnitMaxExpand) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

// -------------------------------------------------
type ReqFriendMaxExpand struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqFriendMaxExpand) Reset()                    { *m = ReqFriendMaxExpand{} }
func (m *ReqFriendMaxExpand) String() string            { return proto.CompactTextString(m) }
func (*ReqFriendMaxExpand) ProtoMessage()               {}
func (*ReqFriendMaxExpand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{166} }

func (m *ReqFriendMaxExpand) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspFriendMaxExpand struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FriendMax        *int32       `protobuf:"varint,2,opt,name=friendMax" json:"friendMax,omitempty"`
	Stone            *int32       `protobuf:"varint,3,opt,name=stone" json:"stone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspFriendMaxExpand) Reset()                    { *m = RspFriendMaxExpand{} }
func (m *RspFriendMaxExpand) String() string            { return proto.CompactTextString(m) }
func (*RspFriendMaxExpand) ProtoMessage()               {}
func (*RspFriendMaxExpand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{167} }

func (m *RspFriendMaxExpand) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspFriendMaxExpand) GetFriendMax() int32 {
	if m != nil && m.FriendMax != nil {
		return *m.FriendMax
	}
	return 0
}

func (m *RspFriendMaxExpand) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

// -------------------------------------------------
type ReqFinishUserGuide struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Step             *int32       `protobuf:"varint,2,opt,name=step" json:"step,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqFinishUserGuide) Reset()                    { *m = ReqFinishUserGuide{} }
func (m *ReqFinishUserGuide) String() string            { return proto.CompactTextString(m) }
func (*ReqFinishUserGuide) ProtoMessage()               {}
func (*ReqFinishUserGuide) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *ReqFinishUserGuide) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqFinishUserGuide) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

type RspFinishUserGuide struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NowStep          *int32       `protobuf:"varint,2,opt,name=nowStep" json:"nowStep,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspFinishUserGuide) Reset()                    { *m = RspFinishUserGuide{} }
func (m *RspFinishUserGuide) String() string            { return proto.CompactTextString(m) }
func (*RspFinishUserGuide) ProtoMessage()               {}
func (*RspFinishUserGuide) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *RspFinishUserGuide) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspFinishUserGuide) GetNowStep() int32 {
	if m != nil && m.NowStep != nil {
		return *m.NowStep
	}
	return 0
}

type ReqAcceptBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BonusId          []int32      `protobuf:"varint,2,rep,name=bonusId" json:"bonusId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqAcceptBonus) Reset()                    { *m = ReqAcceptBonus{} }
func (m *ReqAcceptBonus) String() string            { return proto.CompactTextString(m) }
func (*ReqAcceptBonus) ProtoMessage()               {}
func (*ReqAcceptBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *ReqAcceptBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReqAcceptBonus) GetBonusId() []int32 {
	if m != nil {
		return m.BonusId
	}
	return nil
}

type RspAcceptBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Stone            *int32       `protobuf:"varint,2,opt,name=stone" json:"stone,omitempty"`
	Money            *int32       `protobuf:"varint,3,opt,name=money" json:"money,omitempty"`
	FriendPoint      *int32       `protobuf:"varint,4,opt,name=friendPoint" json:"friendPoint,omitempty"`
	NewUnitList      []*UserUnit  `protobuf:"bytes,5,rep,name=newUnitList" json:"newUnitList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspAcceptBonus) Reset()                    { *m = RspAcceptBonus{} }
func (m *RspAcceptBonus) String() string            { return proto.CompactTextString(m) }
func (*RspAcceptBonus) ProtoMessage()               {}
func (*RspAcceptBonus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *RspAcceptBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspAcceptBonus) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *RspAcceptBonus) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RspAcceptBonus) GetFriendPoint() int32 {
	if m != nil && m.FriendPoint != nil {
		return *m.FriendPoint
	}
	return 0
}

func (m *RspAcceptBonus) GetNewUnitList() []*UserUnit {
	if m != nil {
		return m.NewUnitList
	}
	return nil
}

type ReqBonusList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ReqBonusList) Reset()                    { *m = ReqBonusList{} }
func (m *ReqBonusList) String() string            { return proto.CompactTextString(m) }
func (*ReqBonusList) ProtoMessage()               {}
func (*ReqBonusList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *ReqBonusList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RspBonusList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Bonus            []*BonusInfo `protobuf:"bytes,2,rep,name=bonus" json:"bonus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspBonusList) Reset()                    { *m = RspBonusList{} }
func (m *RspBonusList) String() string            { return proto.CompactTextString(m) }
func (*RspBonusList) ProtoMessage()               {}
func (*RspBonusList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *RspBonusList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspBonusList) GetBonus() []*BonusInfo {
	if m != nil {
		return m.Bonus
	}
	return nil
}

// 用户关卡星级状态
type RspQuestStarList struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CopyInfo         *UserCopyInfo `protobuf:"bytes,2,opt,name=copyInfo" json:"copyInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *RspQuestStarList) Reset()                    { *m = RspQuestStarList{} }
func (m *RspQuestStarList) String() string            { return proto.CompactTextString(m) }
func (*RspQuestStarList) ProtoMessage()               {}
func (*RspQuestStarList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *RspQuestStarList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspQuestStarList) GetCopyInfo() *UserCopyInfo {
	if m != nil {
		return m.CopyInfo
	}
	return nil
}

type StatHelperCount struct {
	FriendPointGet   *int32 `protobuf:"varint,1,opt,name=friendPointGet" json:"friendPointGet,omitempty"`
	HelpFriendCount  *int32 `protobuf:"varint,2,opt,name=helpFriendCount" json:"helpFriendCount,omitempty"`
	HelpHelperCount  *int32 `protobuf:"varint,3,opt,name=helpHelperCount" json:"helpHelperCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StatHelperCount) Reset()                    { *m = StatHelperCount{} }
func (m *StatHelperCount) String() string            { return proto.CompactTextString(m) }
func (*StatHelperCount) ProtoMessage()               {}
func (*StatHelperCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *StatHelperCount) GetFriendPointGet() int32 {
	if m != nil && m.FriendPointGet != nil {
		return *m.FriendPointGet
	}
	return 0
}

func (m *StatHelperCount) GetHelpFriendCount() int32 {
	if m != nil && m.HelpFriendCount != nil {
		return *m.HelpFriendCount
	}
	return 0
}

func (m *StatHelperCount) GetHelpHelperCount() int32 {
	if m != nil && m.HelpHelperCount != nil {
		return *m.HelpHelperCount
	}
	return 0
}

// VIP 配置
type VipConf struct {
	VipName            *string  `protobuf:"bytes,1,opt,name=vipName" json:"vipName,omitempty"`
	VipLevel           *int32   `protobuf:"varint,2,opt,name=vipLevel" json:"vipLevel,omitempty"`
	PayTotal           *float32 `protobuf:"fixed32,3,opt,name=payTotal" json:"payTotal,omitempty"`
	StaminaAdd         *int32   `protobuf:"varint,4,opt,name=staminaAdd" json:"staminaAdd,omitempty"`
	PartyCostAdd       *int32   `protobuf:"varint,5,opt,name=partyCostAdd" json:"partyCostAdd,omitempty"`
	DailyReliveCnt     *int32   `protobuf:"varint,6,opt,name=dailyReliveCnt" json:"dailyReliveCnt,omitempty"`
	DailyBuyStaminaCnt *int32   `protobuf:"varint,7,opt,name=dailyBuyStaminaCnt" json:"dailyBuyStaminaCnt,omitempty"`
	DailyBuyMoneyCnt   *int32   `protobuf:"varint,8,opt,name=dailyBuyMoneyCnt" json:"dailyBuyMoneyCnt,omitempty"`
	DailyFriendPoint   *int32   `protobuf:"varint,9,opt,name=dailyFriendPoint" json:"dailyFriendPoint,omitempty"`
	XXX_unrecognized   []byte   `json:"-"`
}

func (m *VipConf) Reset()                    { *m = VipConf{} }
func (m *VipConf) String() string            { return proto.CompactTextString(m) }
func (*VipConf) ProtoMessage()               {}
func (*VipConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

func (m *VipConf) GetVipName() string {
	if m != nil && m.VipName != nil {
		return *m.VipName
	}
	return ""
}

func (m *VipConf) GetVipLevel() int32 {
	if m != nil && m.VipLevel != nil {
		return *m.VipLevel
	}
	return 0
}

func (m *VipConf) GetPayTotal() float32 {
	if m != nil && m.PayTotal != nil {
		return *m.PayTotal
	}
	return 0
}

func (m *VipConf) GetStaminaAdd() int32 {
	if m != nil && m.StaminaAdd != nil {
		return *m.StaminaAdd
	}
	return 0
}

func (m *VipConf) GetPartyCostAdd() int32 {
	if m != nil && m.PartyCostAdd != nil {
		return *m.PartyCostAdd
	}
	return 0
}

func (m *VipConf) GetDailyReliveCnt() int32 {
	if m != nil && m.DailyReliveCnt != nil {
		return *m.DailyReliveCnt
	}
	return 0
}

func (m *VipConf) GetDailyBuyStaminaCnt() int32 {
	if m != nil && m.DailyBuyStaminaCnt != nil {
		return *m.DailyBuyStaminaCnt
	}
	return 0
}

func (m *VipConf) GetDailyBuyMoneyCnt() int32 {
	if m != nil && m.DailyBuyMoneyCnt != nil {
		return *m.DailyBuyMoneyCnt
	}
	return 0
}

func (m *VipConf) GetDailyFriendPoint() int32 {
	if m != nil && m.DailyFriendPoint != nil {
		return *m.DailyFriendPoint
	}
	return 0
}

// task system
type UserTaskInfo struct {
	AchievedTaskList []*TaskObj   `protobuf:"bytes,1,rep,name=achievedTaskList" json:"achievedTaskList,omitempty"`
	MaxBonusId       *int32       `protobuf:"varint,2,req,name=maxBonusId" json:"maxBonusId,omitempty"`
	BonusList        []*BonusInfo `protobuf:"bytes,3,rep,name=bonusList" json:"bonusList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UserTaskInfo) Reset()                    { *m = UserTaskInfo{} }
func (m *UserTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*UserTaskInfo) ProtoMessage()               {}
func (*UserTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *UserTaskInfo) GetAchievedTaskList() []*TaskObj {
	if m != nil {
		return m.AchievedTaskList
	}
	return nil
}

func (m *UserTaskInfo) GetMaxBonusId() int32 {
	if m != nil && m.MaxBonusId != nil {
		return *m.MaxBonusId
	}
	return 0
}

func (m *UserTaskInfo) GetBonusList() []*BonusInfo {
	if m != nil {
		return m.BonusList
	}
	return nil
}

// 精英副本与关卡评★
type UserCopyInfo struct {
	NormalCopyInfo   *CopyPassInfo `protobuf:"bytes,1,opt,name=normalCopyInfo" json:"normalCopyInfo,omitempty"`
	EliteCopyInfo    *CopyPassInfo `protobuf:"bytes,2,opt,name=eliteCopyInfo" json:"eliteCopyInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UserCopyInfo) Reset()                    { *m = UserCopyInfo{} }
func (m *UserCopyInfo) String() string            { return proto.CompactTextString(m) }
func (*UserCopyInfo) ProtoMessage()               {}
func (*UserCopyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

func (m *UserCopyInfo) GetNormalCopyInfo() *CopyPassInfo {
	if m != nil {
		return m.NormalCopyInfo
	}
	return nil
}

func (m *UserCopyInfo) GetEliteCopyInfo() *CopyPassInfo {
	if m != nil {
		return m.EliteCopyInfo
	}
	return nil
}

// 每日用户操作计数, 每日第一次登录时清0
type DailyUserOptCnt struct {
	ResumeQuestCnt   *int32 `protobuf:"varint,1,opt,name=resumeQuestCnt" json:"resumeQuestCnt,omitempty"`
	BuyStaminaCnt    *int32 `protobuf:"varint,2,opt,name=buyStaminaCnt" json:"buyStaminaCnt,omitempty"`
	BuyMoneyCnt      *int32 `protobuf:"varint,3,opt,name=buyMoneyCnt" json:"buyMoneyCnt,omitempty"`
	ClearQuestCnt    *int32 `protobuf:"varint,4,opt,name=clearQuestCnt" json:"clearQuestCnt,omitempty"`
	FriendPointGot   *int32 `protobuf:"varint,5,opt,name=friendPointGot" json:"friendPointGot,omitempty"`
	FriendCnt        *int32 `protobuf:"varint,6,opt,name=friendCnt" json:"friendCnt,omitempty"`
	PowerUpCnt       *int32 `protobuf:"varint,7,opt,name=powerUpCnt" json:"powerUpCnt,omitempty"`
	EvolveCnt        *int32 `protobuf:"varint,8,opt,name=evolveCnt" json:"evolveCnt,omitempty"`
	SummonCnt_FP     *int32 `protobuf:"varint,9,opt,name=summonCnt_FP" json:"summonCnt_FP,omitempty"`
	SummonCnt_Rare   *int32 `protobuf:"varint,10,opt,name=summonCnt_Rare" json:"summonCnt_Rare,omitempty"`
	EventQuestCnt    *int32 `protobuf:"varint,11,opt,name=eventQuestCnt" json:"eventQuestCnt,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DailyUserOptCnt) Reset()                    { *m = DailyUserOptCnt{} }
func (m *DailyUserOptCnt) String() string            { return proto.CompactTextString(m) }
func (*DailyUserOptCnt) ProtoMessage()               {}
func (*DailyUserOptCnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *DailyUserOptCnt) GetResumeQuestCnt() int32 {
	if m != nil && m.ResumeQuestCnt != nil {
		return *m.ResumeQuestCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetBuyStaminaCnt() int32 {
	if m != nil && m.BuyStaminaCnt != nil {
		return *m.BuyStaminaCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetBuyMoneyCnt() int32 {
	if m != nil && m.BuyMoneyCnt != nil {
		return *m.BuyMoneyCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetClearQuestCnt() int32 {
	if m != nil && m.ClearQuestCnt != nil {
		return *m.ClearQuestCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetFriendPointGot() int32 {
	if m != nil && m.FriendPointGot != nil {
		return *m.FriendPointGot
	}
	return 0
}

func (m *DailyUserOptCnt) GetFriendCnt() int32 {
	if m != nil && m.FriendCnt != nil {
		return *m.FriendCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetPowerUpCnt() int32 {
	if m != nil && m.PowerUpCnt != nil {
		return *m.PowerUpCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetEvolveCnt() int32 {
	if m != nil && m.EvolveCnt != nil {
		return *m.EvolveCnt
	}
	return 0
}

func (m *DailyUserOptCnt) GetSummonCnt_FP() int32 {
	if m != nil && m.SummonCnt_FP != nil {
		return *m.SummonCnt_FP
	}
	return 0
}

func (m *DailyUserOptCnt) GetSummonCnt_Rare() int32 {
	if m != nil && m.SummonCnt_Rare != nil {
		return *m.SummonCnt_Rare
	}
	return 0
}

func (m *DailyUserOptCnt) GetEventQuestCnt() int32 {
	if m != nil && m.EventQuestCnt != nil {
		return *m.EventQuestCnt
	}
	return 0
}

// 用户总的操作计数
type TotalUserOptCnt struct {
	FriendCnt        *int32 `protobuf:"varint,1,opt,name=friendCnt" json:"friendCnt,omitempty"`
	SummonCnt_FP     *int32 `protobuf:"varint,2,opt,name=summonCnt_FP" json:"summonCnt_FP,omitempty"`
	SummonCnt_FP9    *int32 `protobuf:"varint,3,opt,name=summonCnt_FP9" json:"summonCnt_FP9,omitempty"`
	SummonCnt_Rare   *int32 `protobuf:"varint,4,opt,name=summonCnt_Rare" json:"summonCnt_Rare,omitempty"`
	SummonCnt_Rare9  *int32 `protobuf:"varint,5,opt,name=summonCnt_Rare9" json:"summonCnt_Rare9,omitempty"`
	PowerUpCnt       *int32 `protobuf:"varint,6,opt,name=powerUpCnt" json:"powerUpCnt,omitempty"`
	PowerUpCnt_Max   *int32 `protobuf:"varint,7,opt,name=powerUpCnt_Max" json:"powerUpCnt_Max,omitempty"`
	EvolveCnt        *int32 `protobuf:"varint,8,opt,name=evolveCnt" json:"evolveCnt,omitempty"`
	EvolveCnt_Max    *int32 `protobuf:"varint,9,opt,name=evolveCnt_Max" json:"evolveCnt_Max,omitempty"`
	UnitCnt_3        *int32 `protobuf:"varint,10,opt,name=unitCnt_3" json:"unitCnt_3,omitempty"`
	UnitCnt_4        *int32 `protobuf:"varint,11,opt,name=unitCnt_4" json:"unitCnt_4,omitempty"`
	UnitCnt_5        *int32 `protobuf:"varint,12,opt,name=unitCnt_5" json:"unitCnt_5,omitempty"`
	MoneyCnt_Quest   *int32 `protobuf:"varint,13,opt,name=moneyCnt_Quest" json:"moneyCnt_Quest,omitempty"`
	FriendPointCnt   *int32 `protobuf:"varint,14,opt,name=friendPointCnt" json:"friendPointCnt,omitempty"`
	EventQuestCnt    *int32 `protobuf:"varint,15,opt,name=eventQuestCnt" json:"eventQuestCnt,omitempty"`
	CityPass         *int32 `protobuf:"varint,16,opt,name=cityPass" json:"cityPass,omitempty"`
	StagePass        *int32 `protobuf:"varint,17,opt,name=stagePass" json:"stagePass,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TotalUserOptCnt) Reset()                    { *m = TotalUserOptCnt{} }
func (m *TotalUserOptCnt) String() string            { return proto.CompactTextString(m) }
func (*TotalUserOptCnt) ProtoMessage()               {}
func (*TotalUserOptCnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *TotalUserOptCnt) GetFriendCnt() int32 {
	if m != nil && m.FriendCnt != nil {
		return *m.FriendCnt
	}
	return 0
}

func (m *TotalUserOptCnt) GetSummonCnt_FP() int32 {
	if m != nil && m.SummonCnt_FP != nil {
		return *m.SummonCnt_FP
	}
	return 0
}

func (m *TotalUserOptCnt) GetSummonCnt_FP9() int32 {
	if m != nil && m.SummonCnt_FP9 != nil {
		return *m.SummonCnt_FP9
	}
	return 0
}

func (m *TotalUserOptCnt) GetSummonCnt_Rare() int32 {
	if m != nil && m.SummonCnt_Rare != nil {
		return *m.SummonCnt_Rare
	}
	return 0
}

func (m *TotalUserOptCnt) GetSummonCnt_Rare9() int32 {
	if m != nil && m.SummonCnt_Rare9 != nil {
		return *m.SummonCnt_Rare9
	}
	return 0
}

func (m *TotalUserOptCnt) GetPowerUpCnt() int32 {
	if m != nil && m.PowerUpCnt != nil {
		return *m.PowerUpCnt
	}
	return 0
}

func (m *TotalUserOptCnt) GetPowerUpCnt_Max() int32 {
	if m != nil && m.PowerUpCnt_Max != nil {
		return *m.PowerUpCnt_Max
	}
	return 0
}

func (m *TotalUserOptCnt) GetEvolveCnt() int32 {
	if m != nil && m.EvolveCnt != nil {
		return *m.EvolveCnt
	}
	return 0
}

func (m *TotalUserOptCnt) GetEvolveCnt_Max() int32 {
	if m != nil && m.EvolveCnt_Max != nil {
		return *m.EvolveCnt_Max
	}
	return 0
}

func (m *TotalUserOptCnt) GetUnitCnt_3() int32 {
	if m != nil && m.UnitCnt_3 != nil {
		return *m.UnitCnt_3
	}
	return 0
}

func (m *TotalUserOptCnt) GetUnitCnt_4() int32 {
	if m != nil && m.UnitCnt_4 != nil {
		return *m.UnitCnt_4
	}
	return 0
}

func (m *TotalUserOptCnt) GetUnitCnt_5() int32 {
	if m != nil && m.UnitCnt_5 != nil {
		return *m.UnitCnt_5
	}
	return 0
}

func (m *TotalUserOptCnt) GetMoneyCnt_Quest() int32 {
	if m != nil && m.MoneyCnt_Quest != nil {
		return *m.MoneyCnt_Quest
	}
	return 0
}

func (m *TotalUserOptCnt) GetFriendPointCnt() int32 {
	if m != nil && m.FriendPointCnt != nil {
		return *m.FriendPointCnt
	}
	return 0
}

func (m *TotalUserOptCnt) GetEventQuestCnt() int32 {
	if m != nil && m.EventQuestCnt != nil {
		return *m.EventQuestCnt
	}
	return 0
}

func (m *TotalUserOptCnt) GetCityPass() int32 {
	if m != nil && m.CityPass != nil {
		return *m.CityPass
	}
	return 0
}

func (m *TotalUserOptCnt) GetStagePass() int32 {
	if m != nil && m.StagePass != nil {
		return *m.StagePass
	}
	return 0
}

// 玩家指引api response
type RspUserGuideStep struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Step             *int32       `protobuf:"varint,2,opt,name=step" json:"step,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspUserGuideStep) Reset()                    { *m = RspUserGuideStep{} }
func (m *RspUserGuideStep) String() string            { return proto.CompactTextString(m) }
func (*RspUserGuideStep) ProtoMessage()               {}
func (*RspUserGuideStep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{181} }

func (m *RspUserGuideStep) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspUserGuideStep) GetStep() int32 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return 0
}

type RspRefreshUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *UserInfo    `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Account          *AccountInfo `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RspRefreshUser) Reset()                    { *m = RspRefreshUser{} }
func (m *RspRefreshUser) String() string            { return proto.CompactTextString(m) }
func (*RspRefreshUser) ProtoMessage()               {}
func (*RspRefreshUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{182} }

func (m *RspRefreshUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RspRefreshUser) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *RspRefreshUser) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoHeader)(nil), "bbproto.ProtoHeader")
	proto.RegisterType((*FriendData)(nil), "bbproto.FriendData")
	proto.RegisterType((*FriendInfo)(nil), "bbproto.FriendInfo")
	proto.RegisterType((*FriendList)(nil), "bbproto.FriendList")
	proto.RegisterType((*ReqGetFriend)(nil), "bbproto.ReqGetFriend")
	proto.RegisterType((*RspGetFriend)(nil), "bbproto.RspGetFriend")
	proto.RegisterType((*ReqFindFriend)(nil), "bbproto.ReqFindFriend")
	proto.RegisterType((*RspFindFriend)(nil), "bbproto.RspFindFriend")
	proto.RegisterType((*ReqAddFriend)(nil), "bbproto.ReqAddFriend")
	proto.RegisterType((*RspAddFriend)(nil), "bbproto.RspAddFriend")
	proto.RegisterType((*ReqDelFriend)(nil), "bbproto.ReqDelFriend")
	proto.RegisterType((*RspDelFriend)(nil), "bbproto.RspDelFriend")
	proto.RegisterType((*ReqAcceptFriend)(nil), "bbproto.ReqAcceptFriend")
	proto.RegisterType((*RspAcceptFriend)(nil), "bbproto.RspAcceptFriend")
	proto.RegisterType((*ReqGetPremiumHelper)(nil), "bbproto.ReqGetPremiumHelper")
	proto.RegisterType((*RspGetPremiumHelper)(nil), "bbproto.RspGetPremiumHelper")
	proto.RegisterType((*GeneralProtoRsp)(nil), "bbproto.GeneralProtoRsp")
	proto.RegisterType((*EventDataParam)(nil), "bbproto.EventDataParam")
	proto.RegisterType((*EventData)(nil), "bbproto.EventData")
	proto.RegisterType((*ReqUploadStat)(nil), "bbproto.ReqUploadStat")
	proto.RegisterType((*RspUploadStat)(nil), "bbproto.RspUploadStat")
	proto.RegisterType((*ReqGetServerTime)(nil), "bbproto.ReqGetServerTime")
	proto.RegisterType((*RspGetServerTime)(nil), "bbproto.RspGetServerTime")
	proto.RegisterType((*ReqAcceptStarBonus)(nil), "bbproto.ReqAcceptStarBonus")
	proto.RegisterType((*RspAcceptStarBonus)(nil), "bbproto.RspAcceptStarBonus")
	proto.RegisterType((*ParamQuestPass)(nil), "bbproto.ParamQuestPass")
	proto.RegisterType((*RspQuestPass)(nil), "bbproto.RspQuestPass")
	proto.RegisterType((*ParamQuestStar)(nil), "bbproto.ParamQuestStar")
	proto.RegisterType((*RspQuestStar)(nil), "bbproto.RspQuestStar")
	proto.RegisterType((*ParamUserMoney)(nil), "bbproto.ParamUserMoney")
	proto.RegisterType((*RspUserMoney)(nil), "bbproto.RspUserMoney")
	proto.RegisterType((*ParamUserStone)(nil), "bbproto.ParamUserStone")
	proto.RegisterType((*RspUserStone)(nil), "bbproto.RspUserStone")
	proto.RegisterType((*ParamUserRank)(nil), "bbproto.ParamUserRank")
	proto.RegisterType((*RspUserRank)(nil), "bbproto.RspUserRank")
	proto.RegisterType((*ParamUserUnit)(nil), "bbproto.ParamUserUnit")
	proto.RegisterType((*RspUserUnit)(nil), "bbproto.RspUserUnit")
	proto.RegisterType((*ParamUserFriend)(nil), "bbproto.ParamUserFriend")
	proto.RegisterType((*RspUserFriend)(nil), "bbproto.RspUserFriend")
	proto.RegisterType((*ReqStatSettingTool)(nil), "bbproto.ReqStatSettingTool")
	proto.RegisterType((*RspStatSettingTool)(nil), "bbproto.RspStatSettingTool")
	proto.RegisterType((*ReqClientLog)(nil), "bbproto.ReqClientLog")
	proto.RegisterType((*RspClientLog)(nil), "bbproto.RspClientLog")
	proto.RegisterType((*QuestStatus)(nil), "bbproto.QuestStatus")
	proto.RegisterType((*QuestLog)(nil), "bbproto.QuestLog")
	proto.RegisterType((*NumRange)(nil), "bbproto.NumRange")
	proto.RegisterType((*ColorPercent)(nil), "bbproto.ColorPercent")
	proto.RegisterType((*StarConfig)(nil), "bbproto.StarConfig")
	proto.RegisterType((*QuestFloorConfig)(nil), "bbproto.QuestFloorConfig")
	proto.RegisterType((*QuestConfig)(nil), "bbproto.QuestConfig")
	proto.RegisterType((*EnemyInfo)(nil), "bbproto.EnemyInfo")
	proto.RegisterType((*EnemyInfoConf)(nil), "bbproto.EnemyInfoConf")
	proto.RegisterType((*DropUnit)(nil), "bbproto.DropUnit")
	proto.RegisterType((*QuestGrid)(nil), "bbproto.QuestGrid")
	proto.RegisterType((*QuestFloor)(nil), "bbproto.QuestFloor")
	proto.RegisterType((*QuestDungeonData)(nil), "bbproto.QuestDungeonData")
	proto.RegisterType((*Position)(nil), "bbproto.Position")
	proto.RegisterType((*QuestBoost)(nil), "bbproto.QuestBoost")
	proto.RegisterType((*QuestInfo)(nil), "bbproto.QuestInfo")
	proto.RegisterType((*Period)(nil), "bbproto.Period")
	proto.RegisterType((*StageInfo)(nil), "bbproto.StageInfo")
	proto.RegisterType((*CityInfo)(nil), "bbproto.CityInfo")
	proto.RegisterType((*WorldMapInfo)(nil), "bbproto.WorldMapInfo")
	proto.RegisterType((*QuestStarObj)(nil), "bbproto.QuestStarObj")
	proto.RegisterType((*CopyPassInfo)(nil), "bbproto.CopyPassInfo")
	proto.RegisterType((*ReqStartQuest)(nil), "bbproto.ReqStartQuest")
	proto.RegisterType((*RspStartQuest)(nil), "bbproto.RspStartQuest")
	proto.RegisterType((*ReqClearQuest)(nil), "bbproto.ReqClearQuest")
	proto.RegisterType((*RspClearQuest)(nil), "bbproto.RspClearQuest")
	proto.RegisterType((*ReqRetireQuest)(nil), "bbproto.ReqRetireQuest")
	proto.RegisterType((*RspRetireQuest)(nil), "bbproto.RspRetireQuest")
	proto.RegisterType((*ReqResumeQuest)(nil), "bbproto.ReqResumeQuest")
	proto.RegisterType((*RspResumeQuest)(nil), "bbproto.RspResumeQuest")
	proto.RegisterType((*ReqRedoQuest)(nil), "bbproto.ReqRedoQuest")
	proto.RegisterType((*RspRedoQuest)(nil), "bbproto.RspRedoQuest")
	proto.RegisterType((*ReqGetQuestColors)(nil), "bbproto.ReqGetQuestColors")
	proto.RegisterType((*RspGetQuestColors)(nil), "bbproto.RspGetQuestColors")
	proto.RegisterType((*ReqGetQuestInfo)(nil), "bbproto.ReqGetQuestInfo")
	proto.RegisterType((*RspGetQuestInfo)(nil), "bbproto.RspGetQuestInfo")
	proto.RegisterType((*TrapInjuredValue)(nil), "bbproto.TrapInjuredValue")
	proto.RegisterType((*TrapInfo)(nil), "bbproto.TrapInfo")
	proto.RegisterType((*StoreBattleData)(nil), "bbproto.StoreBattleData")
	proto.RegisterType((*ClearQuestParam)(nil), "bbproto.ClearQuestParam")
	proto.RegisterType((*AttackInfoProto)(nil), "bbproto.AttackInfoProto")
	proto.RegisterType((*ActiveSkillData)(nil), "bbproto.ActiveSkillData")
	proto.RegisterType((*ReqShopBuy)(nil), "bbproto.ReqShopBuy")
	proto.RegisterType((*RspShopBuy)(nil), "bbproto.RspShopBuy")
	proto.RegisterType((*ReqBuyMoney)(nil), "bbproto.ReqBuyMoney")
	proto.RegisterType((*RspBuyMoney)(nil), "bbproto.RspBuyMoney")
	proto.RegisterType((*TaskConf)(nil), "bbproto.TaskConf")
	proto.RegisterType((*TaskObj)(nil), "bbproto.TaskObj")
	proto.RegisterType((*ReqTaskList)(nil), "bbproto.ReqTaskList")
	proto.RegisterType((*AchievedTaskRspObj)(nil), "bbproto.AchievedTaskRspObj")
	proto.RegisterType((*UnAchievedTaskRspObj)(nil), "bbproto.UnAchievedTaskRspObj")
	proto.RegisterType((*TaskTypeRsp)(nil), "bbproto.TaskTypeRsp")
	proto.RegisterType((*RspTaskList)(nil), "bbproto.RspTaskList")
	proto.RegisterType((*ReqAcceptTaskBonus)(nil), "bbproto.ReqAcceptTaskBonus")
	proto.RegisterType((*RspAcceptTaskBonus)(nil), "bbproto.RspAcceptTaskBonus")
	proto.RegisterType((*UnitResource)(nil), "bbproto.UnitResource")
	proto.RegisterType((*UserUnit)(nil), "bbproto.UserUnit")
	proto.RegisterType((*UnitInfo)(nil), "bbproto.UnitInfo")
	proto.RegisterType((*UVPosition)(nil), "bbproto.UVPosition")
	proto.RegisterType((*UnitGetWay)(nil), "bbproto.UnitGetWay")
	proto.RegisterType((*PowerValue)(nil), "bbproto.PowerValue")
	proto.RegisterType((*PowerTable)(nil), "bbproto.PowerTable")
	proto.RegisterType((*PowerInfo)(nil), "bbproto.PowerInfo")
	proto.RegisterType((*PowerType)(nil), "bbproto.PowerType")
	proto.RegisterType((*HelperRequire)(nil), "bbproto.HelperRequire")
	proto.RegisterType((*EvolveInfo)(nil), "bbproto.EvolveInfo")
	proto.RegisterType((*GachaConfig)(nil), "bbproto.GachaConfig")
	proto.RegisterType((*GachaUnitList)(nil), "bbproto.GachaUnitList")
	proto.RegisterType((*GachaStarInfo)(nil), "bbproto.GachaStarInfo")
	proto.RegisterType((*ReqGetUnitResource)(nil), "bbproto.ReqGetUnitResource")
	proto.RegisterType((*RspGetUnitResource)(nil), "bbproto.RspGetUnitResource")
	proto.RegisterType((*ReqGetUserUnit)(nil), "bbproto.ReqGetUserUnit")
	proto.RegisterType((*RspGetUserUnit)(nil), "bbproto.RspGetUserUnit")
	proto.RegisterType((*ReqLevelUp)(nil), "bbproto.ReqLevelUp")
	proto.RegisterType((*RspLevelUp)(nil), "bbproto.RspLevelUp")
	proto.RegisterType((*ReqEvolveStart)(nil), "bbproto.ReqEvolveStart")
	proto.RegisterType((*RspEvolveStart)(nil), "bbproto.RspEvolveStart")
	proto.RegisterType((*ReqEvolveDone)(nil), "bbproto.ReqEvolveDone")
	proto.RegisterType((*RspEvolveDone)(nil), "bbproto.RspEvolveDone")
	proto.RegisterType((*ReqEvolve)(nil), "bbproto.ReqEvolve")
	proto.RegisterType((*RspEvolve)(nil), "bbproto.RspEvolve")
	proto.RegisterType((*ReqGacha)(nil), "bbproto.ReqGacha")
	proto.RegisterType((*RspGacha)(nil), "bbproto.RspGacha")
	proto.RegisterType((*ReqSellUnit)(nil), "bbproto.ReqSellUnit")
	proto.RegisterType((*RspSellUnit)(nil), "bbproto.RspSellUnit")
	proto.RegisterType((*ReqUnitFavorite)(nil), "bbproto.ReqUnitFavorite")
	proto.RegisterType((*RspUnitFavorite)(nil), "bbproto.RspUnitFavorite")
	proto.RegisterType((*ReqUserGuideEvolveUnit)(nil), "bbproto.ReqUserGuideEvolveUnit")
	proto.RegisterType((*RspUserGuideEvolveUnit)(nil), "bbproto.RspUserGuideEvolveUnit")
	proto.RegisterType((*ReqFragsFusion)(nil), "bbproto.ReqFragsFusion")
	proto.RegisterType((*RspFragsFusion)(nil), "bbproto.RspFragsFusion")
	proto.RegisterType((*UserInfo)(nil), "bbproto.UserInfo")
	proto.RegisterType((*UserInfoDetail)(nil), "bbproto.UserInfoDetail")
	proto.RegisterType((*MonthCard)(nil), "bbproto.MonthCard")
	proto.RegisterType((*AccountInfo)(nil), "bbproto.AccountInfo")
	proto.RegisterType((*StageClearItem)(nil), "bbproto.StageClearItem")
	proto.RegisterType((*QuestClearInfo)(nil), "bbproto.QuestClearInfo")
	proto.RegisterType((*PartyItem)(nil), "bbproto.PartyItem")
	proto.RegisterType((*UnitParty)(nil), "bbproto.UnitParty")
	proto.RegisterType((*PartyInfo)(nil), "bbproto.PartyInfo")
	proto.RegisterType((*TerminalInfo)(nil), "bbproto.TerminalInfo")
	proto.RegisterType((*GiftItem)(nil), "bbproto.GiftItem")
	proto.RegisterType((*BonusInfo)(nil), "bbproto.BonusInfo")
	proto.RegisterType((*LoginInfo)(nil), "bbproto.LoginInfo")
	proto.RegisterType((*PresentInfo)(nil), "bbproto.PresentInfo")
	proto.RegisterType((*SessionInfo)(nil), "bbproto.SessionInfo")
	proto.RegisterType((*ReqGetUserInfo)(nil), "bbproto.ReqGetUserInfo")
	proto.RegisterType((*RspGetUserInfo)(nil), "bbproto.RspGetUserInfo")
	proto.RegisterType((*NoticeItem)(nil), "bbproto.NoticeItem")
	proto.RegisterType((*NoticeInfo)(nil), "bbproto.NoticeInfo")
	proto.RegisterType((*DataCount)(nil), "bbproto.DataCount")
	proto.RegisterType((*ReqAuthUser)(nil), "bbproto.ReqAuthUser")
	proto.RegisterType((*RspAuthUser)(nil), "bbproto.RspAuthUser")
	proto.RegisterType((*ReqLoginPack)(nil), "bbproto.ReqLoginPack")
	proto.RegisterType((*RspLoginPack)(nil), "bbproto.RspLoginPack")
	proto.RegisterType((*ReqRenameNick)(nil), "bbproto.ReqRenameNick")
	proto.RegisterType((*RspRenameNick)(nil), "bbproto.RspRenameNick")
	proto.RegisterType((*ReqRestoreStamina)(nil), "bbproto.ReqRestoreStamina")
	proto.RegisterType((*RspRestoreStamina)(nil), "bbproto.RspRestoreStamina")
	proto.RegisterType((*ReqChangeParty)(nil), "bbproto.ReqChangeParty")
	proto.RegisterType((*RspChangeParty)(nil), "bbproto.RspChangeParty")
	proto.RegisterType((*ReqUnitMaxExpand)(nil), "bbproto.ReqUnitMaxExpand")
	proto.RegisterType((*RspUnitMaxExpand)(nil), "bbproto.RspUnitMaxExpand")
	proto.RegisterType((*ReqFriendMaxExpand)(nil), "bbproto.ReqFriendMaxExpand")
	proto.RegisterType((*RspFriendMaxExpand)(nil), "bbproto.RspFriendMaxExpand")
	proto.RegisterType((*ReqFinishUserGuide)(nil), "bbproto.ReqFinishUserGuide")
	proto.RegisterType((*RspFinishUserGuide)(nil), "bbproto.RspFinishUserGuide")
	proto.RegisterType((*ReqAcceptBonus)(nil), "bbproto.ReqAcceptBonus")
	proto.RegisterType((*RspAcceptBonus)(nil), "bbproto.RspAcceptBonus")
	proto.RegisterType((*ReqBonusList)(nil), "bbproto.ReqBonusList")
	proto.RegisterType((*RspBonusList)(nil), "bbproto.RspBonusList")
	proto.RegisterType((*RspQuestStarList)(nil), "bbproto.RspQuestStarList")
	proto.RegisterType((*StatHelperCount)(nil), "bbproto.StatHelperCount")
	proto.RegisterType((*VipConf)(nil), "bbproto.VipConf")
	proto.RegisterType((*UserTaskInfo)(nil), "bbproto.UserTaskInfo")
	proto.RegisterType((*UserCopyInfo)(nil), "bbproto.UserCopyInfo")
	proto.RegisterType((*DailyUserOptCnt)(nil), "bbproto.DailyUserOptCnt")
	proto.RegisterType((*TotalUserOptCnt)(nil), "bbproto.TotalUserOptCnt")
	proto.RegisterType((*RspUserGuideStep)(nil), "bbproto.RspUserGuideStep")
	proto.RegisterType((*RspRefreshUser)(nil), "bbproto.RspRefreshUser")
	proto.RegisterEnum("bbproto.EUnitType", EUnitType_name, EUnitType_value)
	proto.RegisterEnum("bbproto.EUnitRace", EUnitRace_name, EUnitRace_value)
	proto.RegisterEnum("bbproto.EFriendState", EFriendState_name, EFriendState_value)
	proto.RegisterEnum("bbproto.IntervalSettingType", IntervalSettingType_name, IntervalSettingType_value)
	proto.RegisterEnum("bbproto.RecoveBattleStep", RecoveBattleStep_name, RecoveBattleStep_value)
	proto.RegisterEnum("bbproto.EQuestState", EQuestState_name, EQuestState_value)
	proto.RegisterEnum("bbproto.ETrapType", ETrapType_name, ETrapType_value)
	proto.RegisterEnum("bbproto.EQuestGridType", EQuestGridType_name, EQuestGridType_value)
	proto.RegisterEnum("bbproto.EGridStar", EGridStar_name, EGridStar_value)
	proto.RegisterEnum("bbproto.ECopyType", ECopyType_name, ECopyType_value)
	proto.RegisterEnum("bbproto.QuestBoostType", QuestBoostType_name, QuestBoostType_value)
	proto.RegisterEnum("bbproto.QuestType", QuestType_name, QuestType_value)
	proto.RegisterEnum("bbproto.ETaskType", ETaskType_name, ETaskType_value)
	proto.RegisterEnum("bbproto.EAchieveType", EAchieveType_name, EAchieveType_value)
	proto.RegisterEnum("bbproto.MaterialType", MaterialType_name, MaterialType_value)
	proto.RegisterEnum("bbproto.EUnitGetType", EUnitGetType_name, EUnitGetType_value)
	proto.RegisterEnum("bbproto.EGachaType", EGachaType_name, EGachaType_value)
	proto.RegisterEnum("bbproto.EFavoriteAction", EFavoriteAction_name, EFavoriteAction_value)
	proto.RegisterEnum("bbproto.EGiftContent", EGiftContent_name, EGiftContent_value)
}

var fileDescriptor0 = []byte{
	// 8276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe4, 0x7d, 0x4b, 0x8c, 0x63, 0xd9,
	0x75, 0x98, 0xf8, 0x2d, 0xf2, 0xb2, 0x58, 0xc5, 0x62, 0xff, 0x38, 0xa3, 0x91, 0x66, 0xf4, 0x7a,
	0xba, 0x67, 0x54, 0x33, 0x23, 0xa9, 0x7b, 0x66, 0x24, 0xcd, 0x6c, 0x02, 0x36, 0x8b, 0xf5, 0x51,
	0xd7, 0x87, 0x43, 0x56, 0x75, 0x4f, 0x4b, 0x11, 0x0a, 0xaf, 0xc8, 0x57, 0x55, 0x4f, 0xcd, 0xe2,
	0xe3, 0xbc, 0x47, 0x56, 0x77, 0x09, 0x42, 0xa0, 0x40, 0x41, 0x10, 0xe4, 0x03, 0x41, 0x41, 0x80,
	0x2c, 0x12, 0x04, 0x09, 0xa2, 0x20, 0x9b, 0x6c, 0xa2, 0x4d, 0x96, 0x81, 0xa5, 0x9d, 0x0d, 0x18,
	0x06, 0x0c, 0xd8, 0x30, 0xbc, 0x92, 0xf7, 0xf6, 0xc6, 0x0b, 0xc3, 0x0b, 0x03, 0x3e, 0x9f, 0xfb,
	0x7b, 0x8f, 0x64, 0x37, 0xab, 0x66, 0x6c, 0xc3, 0xf0, 0xa6, 0x9b, 0xef, 0xbe, 0x73, 0xef, 0x3d,
	0xf7, 0xdc, 0x73, 0xcf, 0xff, 0xbe, 0x12, 0xe5, 0xa3, 0xa3, 0x61, 0x18, 0x8c, 0x82, 0x6f, 0xd0,
	0xbf, 0xd5, 0x05, 0xf9, 0xe8, 0xfc, 0xcb, 0x94, 0x28, 0xb5, 0xf0, 0xd7, 0xa6, 0xe7, 0xf6, 0xbc,
	0xb0, 0xba, 0x24, 0xf2, 0xee, 0xd0, 0x7f, 0xe4, 0x85, 0xb5, 0xd4, 0x1b, 0xe9, 0xb7, 0x8b, 0xd5,
	0x15, 0x51, 0x8c, 0xbc, 0x28, 0xf2, 0x83, 0xc1, 0x56, 0xaf, 0x96, 0x7e, 0x23, 0x05, 0x4d, 0x00,
	0x32, 0x8e, 0xbc, 0x10, 0x9e, 0x33, 0xf0, 0x5c, 0xae, 0x56, 0x44, 0x61, 0xe8, 0x76, 0x9f, 0x7a,
	0x23, 0x68, 0xc9, 0x42, 0x4b, 0xae, 0xba, 0x28, 0xb2, 0xdd, 0xa0, 0xe7, 0xd5, 0x72, 0xf4, 0x54,
	0x16, 0x39, 0x2f, 0x0c, 0x83, 0xb0, 0x96, 0xa7, 0xee, 0x00, 0xee, 0x3d, 0x1f, 0x85, 0xee, 0xbe,
	0x7b, 0x52, 0x5b, 0x40, 0x00, 0xa7, 0x2b, 0xc4, 0x7a, 0xe8, 0x7b, 0x83, 0xde, 0x9a, 0x3b, 0x72,
	0xad, 0xe1, 0x53, 0x34, 0xfc, 0xaa, 0x28, 0x1d, 0xd3, 0xdb, 0xce, 0xc8, 0x1d, 0x79, 0x84, 0xc3,
	0xd2, 0xfd, 0x1b, 0xdf, 0x50, 0xeb, 0x69, 0xae, 0x9b, 0x97, 0xd5, 0x57, 0xc4, 0x8a, 0x05, 0x7b,
	0x30, 0xec, 0x61, 0x0f, 0xc2, 0xd2, 0xf9, 0x6d, 0x4a, 0xcd, 0xb2, 0x35, 0x38, 0x0e, 0x26, 0x66,
	0x01, 0xac, 0x06, 0x7e, 0xf7, 0xe9, 0xae, 0x7b, 0xe6, 0xc9, 0x65, 0xc2, 0x22, 0x42, 0x77, 0xf0,
	0x94, 0xba, 0xe7, 0xaa, 0xd7, 0xc5, 0x62, 0xdf, 0x8d, 0x46, 0xad, 0xbe, 0x7b, 0xb1, 0xef, 0x03,
	0x4c, 0x76, 0x1a, 0x6e, 0xb9, 0x4b, 0xe3, 0x96, 0xa7, 0x61, 0xae, 0xa9, 0x61, 0x5a, 0x81, 0x3f,
	0x18, 0x31, 0x55, 0xaa, 0xaf, 0x8b, 0xec, 0x78, 0xe0, 0x8f, 0x6a, 0x05, 0x78, 0x2a, 0xdd, 0x5f,
	0xd1, 0x83, 0x1e, 0x00, 0xda, 0x07, 0xf0, 0x02, 0x51, 0x86, 0x25, 0xf4, 0x08, 0x9d, 0x22, 0xad,
	0xf1, 0x7f, 0xe9, 0x35, 0x6e, 0xfb, 0xd1, 0xa8, 0x7a, 0x5b, 0xe4, 0x79, 0x58, 0x58, 0x63, 0x06,
	0xc6, 0xb8, 0xa6, 0xc7, 0xb0, 0x08, 0x01, 0x40, 0xa7, 0x5e, 0x7f, 0x08, 0x1b, 0x9e, 0x9e, 0x0d,
	0x74, 0x47, 0x14, 0x8e, 0xe5, 0x13, 0xd0, 0x63, 0x26, 0xd8, 0x5d, 0x51, 0x64, 0xb0, 0xbd, 0xf1,
	0x08, 0x28, 0x34, 0x0b, 0xce, 0xf9, 0xbe, 0x58, 0x6c, 0x7b, 0x9f, 0x6d, 0x78, 0x23, 0x6e, 0xab,
	0xbe, 0x89, 0x38, 0x20, 0xfb, 0xd1, 0x66, 0x94, 0xee, 0x5f, 0xd7, 0x9d, 0x6c, 0xd6, 0x04, 0x56,
	0x3c, 0x51, 0x5d, 0x68, 0x8f, 0x0a, 0xb2, 0x69, 0x93, 0xf1, 0xc7, 0x8d, 0x2a, 0xd0, 0xd8, 0xd1,
	0xf0, 0xb2, 0x63, 0xbf, 0x29, 0x16, 0x18, 0xf3, 0x88, 0x46, 0x9e, 0xc4, 0x1b, 0x09, 0xea, 0x6c,
	0x8a, 0x32, 0xe0, 0xbd, 0xee, 0x0f, 0x7a, 0x97, 0x45, 0x9c, 0x07, 0x3f, 0xf0, 0x19, 0xf1, 0x32,
	0x60, 0x59, 0x06, 0x2c, 0x2f, 0x3d, 0x92, 0xd9, 0xd1, 0xe9, 0x58, 0x12, 0x75, 0x37, 0x88, 0xba,
	0xf5, 0xde, 0x17, 0x80, 0x24, 0x92, 0xf2, 0xb2, 0x03, 0xcd, 0x47, 0x4a, 0x46, 0x72, 0xcd, 0xeb,
	0x7f, 0x1e, 0x24, 0x33, 0x1a, 0xc9, 0xcb, 0x0e, 0x34, 0x1f, 0x92, 0xdf, 0x13, 0xcb, 0x48, 0xc9,
	0x6e, 0xd7, 0x1b, 0x8e, 0x3e, 0x2f, 0x31, 0x7f, 0x08, 0x63, 0x01, 0x31, 0x2f, 0x3f, 0xd6, 0x7c,
	0xa8, 0xfe, 0xcf, 0x94, 0xb8, 0xc6, 0x67, 0xaa, 0x15, 0x7a, 0x67, 0xfe, 0xf8, 0x8c, 0x0f, 0xc5,
	0x9c, 0x73, 0xbc, 0x81, 0xb2, 0xae, 0xab, 0x84, 0x6b, 0xd5, 0x08, 0x30, 0x14, 0x34, 0x6d, 0x78,
	0x83, 0x10, 0xa3, 0x8b, 0x21, 0x0b, 0xd3, 0x09, 0x88, 0x7d, 0x78, 0x83, 0x62, 0xbe, 0xef, 0x9d,
	0x7b, 0x7d, 0xa9, 0x03, 0x40, 0xa6, 0x0d, 0x19, 0x93, 0x87, 0xc0, 0xe5, 0xac, 0x0a, 0x1c, 0x17,
	0x90, 0xa4, 0xc3, 0x79, 0x15, 0x24, 0x81, 0x10, 0x2c, 0xa9, 0xa2, 0x17, 0x88, 0x2a, 0xe7, 0xcf,
	0x96, 0xc5, 0xf2, 0x86, 0x37, 0xf0, 0x42, 0xb7, 0x4f, 0x9d, 0x61, 0xbe, 0xea, 0xd7, 0x45, 0x29,
	0x04, 0xda, 0x8f, 0x47, 0xa7, 0x28, 0x3c, 0x27, 0x26, 0x69, 0x9b, 0x77, 0xd5, 0x6f, 0x8a, 0x25,
	0x00, 0x6d, 0x9c, 0xba, 0x83, 0x13, 0xaf, 0xe5, 0x86, 0xa3, 0x0b, 0x49, 0xf4, 0x5b, 0x36, 0xb4,
	0xf5, 0xba, 0xfa, 0x9e, 0x28, 0x43, 0x87, 0xb6, 0x37, 0x00, 0xcd, 0xb1, 0x0b, 0x1a, 0x84, 0x28,
	0x54, 0xba, 0x7f, 0xd3, 0x86, 0x37, 0x6f, 0xab, 0x1f, 0x8a, 0x15, 0x02, 0x8f, 0x46, 0x41, 0xe8,
	0x81, 0x26, 0x38, 0xf3, 0x07, 0x2e, 0x51, 0xac, 0x74, 0xff, 0xd5, 0x78, 0x17, 0x1b, 0xa2, 0xfa,
	0xbe, 0xa8, 0x40, 0x37, 0xa4, 0xf5, 0x8e, 0xfb, 0xbc, 0xf9, 0x7c, 0xe8, 0x4a, 0x92, 0x96, 0xee,
	0xbf, 0x62, 0xf7, 0x8a, 0x01, 0x54, 0xbf, 0x23, 0xaa, 0xd0, 0x89, 0x69, 0x63, 0xba, 0xe5, 0xa9,
	0xdb, 0x97, 0xed, 0x6e, 0x09, 0x10, 0xd5, 0xd1, 0x1f, 0xf8, 0x11, 0x51, 0x65, 0x63, 0xec, 0x83,
	0x36, 0x5f, 0x98, 0xd2, 0x31, 0x0e, 0x52, 0x7d, 0x47, 0x2c, 0x86, 0x96, 0xf0, 0x95, 0xba, 0xeb,
	0x86, 0xdd, 0xc5, 0x48, 0x66, 0x06, 0xd6, 0xe2, 0x85, 0x74, 0x58, 0x02, 0xd8, 0xc8, 0x1e, 0x06,
	0xd6, 0xc7, 0xbc, 0x26, 0x26, 0x81, 0x8d, 0x0c, 0xe0, 0x3d, 0x31, 0xd2, 0xb5, 0x56, 0x9a, 0xdc,
	0x13, 0x4b, 0xf6, 0xde, 0x13, 0xcb, 0x61, 0xfc, 0x68, 0xd6, 0x16, 0xa9, 0x43, 0x2d, 0x86, 0x8b,
	0x7d, 0x74, 0x3f, 0x12, 0xd7, 0xc2, 0x49, 0x46, 0xae, 0x95, 0xa9, 0xdb, 0x6b, 0x89, 0xf5, 0xc6,
	0x99, 0x9d, 0x91, 0x83, 0x8d, 0x0d, 0x47, 0x9f, 0x8c, 0x61, 0x97, 0x6b, 0x4b, 0x93, 0xc8, 0x99,
	0xb7, 0x12, 0xbc, 0xd1, 0xf7, 0xdc, 0x90, 0xc1, 0x97, 0x27, 0xc1, 0xcd, 0x5b, 0xc9, 0xbf, 0x6d,
	0x6f, 0xe4, 0x87, 0x1e, 0xc3, 0x57, 0x26, 0xf9, 0xd7, 0x7a, 0x2d, 0x09, 0xdb, 0xf6, 0x7a, 0x01,
	0x83, 0xaf, 0x4c, 0x12, 0x56, 0xbf, 0xd4, 0xa3, 0x47, 0xe3, 0x33, 0x39, 0x7a, 0x75, 0xda, 0xe8,
	0xfa, 0xb5, 0x64, 0x77, 0xa0, 0x01, 0x3d, 0x36, 0x82, 0x7e, 0x00, 0xa7, 0xf7, 0xda, 0x24, 0xbb,
	0xc7, 0x21, 0xaa, 0x6f, 0x09, 0x01, 0xdd, 0xb6, 0x51, 0x9c, 0x1c, 0x0c, 0x6b, 0xd7, 0x13, 0x62,
	0xaf, 0xad, 0x5f, 0x49, 0x84, 0x9a, 0xe7, 0x41, 0xff, 0xdc, 0x23, 0xa2, 0xd5, 0x6e, 0x4c, 0x22,
	0x64, 0xbd, 0x96, 0xe4, 0xe4, 0x96, 0xb5, 0x60, 0xe0, 0xd5, 0x6e, 0x4e, 0x92, 0xd3, 0xbc, 0x05,
	0x85, 0x5b, 0x40, 0xfc, 0xdd, 0xee, 0xa9, 0x5b, 0xbb, 0x95, 0x30, 0xc4, 0xda, 0xf2, 0x85, 0x14,
	0x2f, 0x1d, 0xaf, 0xdf, 0xc7, 0xf3, 0x57, 0xab, 0x4d, 0x8a, 0x17, 0xf5, 0x4e, 0xb2, 0x1a, 0xfe,
	0x5c, 0x77, 0xcf, 0x83, 0xd0, 0x07, 0x13, 0xf0, 0x95, 0x49, 0x56, 0xb3, 0xdf, 0x57, 0xff, 0x99,
	0xb8, 0x89, 0x5d, 0xd4, 0x19, 0x63, 0xe4, 0x68, 0xa2, 0x57, 0xa9, 0xe7, 0xeb, 0xb1, 0x9e, 0x93,
	0x60, 0x52, 0x76, 0x00, 0x85, 0x3b, 0x5e, 0x78, 0xee, 0x85, 0x64, 0x2f, 0x7e, 0x79, 0x52, 0x76,
	0xc4, 0x00, 0x24, 0x9d, 0x0e, 0x86, 0xfd, 0xc0, 0x25, 0x83, 0xb5, 0xf6, 0xda, 0x24, 0x9d, 0xcc,
	0x5b, 0xb9, 0x0f, 0x7c, 0x44, 0x1e, 0x04, 0x83, 0x71, 0x54, 0xfb, 0xca, 0xe4, 0x3e, 0x58, 0xaf,
	0x25, 0xdb, 0xd1, 0x6f, 0xd4, 0x5f, 0xb5, 0xaf, 0x4e, 0xb2, 0x9d, 0x7e, 0x29, 0xd9, 0xa1, 0x73,
	0x1a, 0x0c, 0x1f, 0x8c, 0x2f, 0x6a, 0xaf, 0x4f, 0xb2, 0x83, 0x7c, 0x25, 0x77, 0x02, 0x7e, 0xed,
	0xc0, 0xe6, 0x5d, 0xd4, 0xde, 0x98, 0xdc, 0x09, 0xf5, 0x4e, 0x82, 0xee, 0xbb, 0xd1, 0x53, 0x9a,
	0xff, 0x6b, 0x93, 0xa0, 0xea, 0x9d, 0x14, 0x87, 0x8c, 0x3d, 0x36, 0xf2, 0x02, 0x9d, 0x49, 0x71,
	0x98, 0x00, 0x91, 0x94, 0x27, 0xc6, 0x46, 0xee, 0xa3, 0x89, 0x6e, 0x4f, 0x52, 0x3e, 0x06, 0x10,
	0x9b, 0x0d, 0x1b, 0x79, 0xb6, 0x37, 0x67, 0xcd, 0xa6, 0x41, 0xc0, 0x48, 0x2f, 0x6a, 0xd6, 0xae,
	0xdd, 0x21, 0xf8, 0xea, 0x24, 0x5b, 0x2b, 0x55, 0xa2, 0x18, 0xa5, 0x33, 0xf2, 0x86, 0xb5, 0xbb,
	0x53, 0x54, 0x89, 0x0d, 0x20, 0xf7, 0x77, 0x3d, 0x74, 0x4f, 0xa2, 0xf5, 0x31, 0x7a, 0x83, 0xb5,
	0xb7, 0x26, 0xf7, 0xd7, 0x7a, 0xad, 0x25, 0xc5, 0x71, 0xe8, 0xb1, 0x82, 0xa8, 0xbd, 0x3d, 0x4d,
	0x52, 0xe8, 0xd7, 0x92, 0x21, 0x1a, 0x7d, 0x10, 0xaf, 0xa3, 0xed, 0xe0, 0xa4, 0xf6, 0xf5, 0x49,
	0x86, 0xd0, 0x2f, 0x9d, 0x1d, 0xb1, 0xd4, 0x3c, 0x87, 0xdf, 0xe8, 0x30, 0x82, 0x1a, 0x76, 0xcf,
	0xaa, 0x25, 0x91, 0x79, 0x0a, 0x3b, 0x9e, 0x52, 0x1e, 0xaa, 0xff, 0xc8, 0xed, 0x8f, 0xd9, 0xa0,
	0xc9, 0xe1, 0xf3, 0x31, 0x3f, 0xa3, 0x72, 0x4e, 0xe3, 0x73, 0xc4, 0xcf, 0xa8, 0x79, 0x8b, 0xce,
	0xbf, 0x49, 0x89, 0xa2, 0x1e, 0xaf, 0xba, 0x2c, 0x16, 0x3c, 0x7c, 0x90, 0xbe, 0xe1, 0xa5, 0x87,
	0x43, 0xeb, 0x6f, 0x04, 0x67, 0x28, 0x02, 0xdd, 0x3d, 0x24, 0x2d, 0x5d, 0x06, 0x0e, 0xce, 0x9f,
	0x23, 0x44, 0x04, 0xea, 0x37, 0x13, 0x23, 0x43, 0x7c, 0x1d, 0xce, 0x13, 0x72, 0x31, 0xac, 0x93,
	0x35, 0x9f, 0x6d, 0xe4, 0x88, 0x3c, 0xe1, 0xac, 0x4c, 0xa3, 0xea, 0xe4, 0xf8, 0xce, 0x16, 0xf9,
	0x1c, 0x97, 0x1e, 0xba, 0x2a, 0x44, 0x64, 0x04, 0x07, 0x1b, 0xb3, 0xdf, 0x15, 0x15, 0x36, 0x36,
	0x2d, 0x89, 0x31, 0xd7, 0x68, 0xce, 0x36, 0xf4, 0x4c, 0xca, 0x9a, 0xab, 0xe3, 0xf1, 0x99, 0xa8,
	0x6a, 0x03, 0xdd, 0x1c, 0x84, 0xf9, 0xc6, 0x83, 0x6d, 0x86, 0x1d, 0x3a, 0xf1, 0x64, 0x5c, 0xa3,
	0x0c, 0xdd, 0x0a, 0xdd, 0x60, 0x78, 0xb1, 0x3f, 0xd5, 0xcc, 0x6d, 0xc8, 0x37, 0xce, 0x11, 0x4c,
	0x39, 0x79, 0xf6, 0xe6, 0x9b, 0x12, 0x3c, 0x76, 0xb7, 0x07, 0xb4, 0x47, 0xbd, 0x93, 0x56, 0x61,
	0x85, 0xee, 0x38, 0x0c, 0x61, 0x8b, 0xb8, 0x95, 0x82, 0x0d, 0xe0, 0x1c, 0x2d, 0x11, 0x37, 0x90,
	0x60, 0x68, 0xb9, 0x51, 0x84, 0xc8, 0x7e, 0x86, 0x0f, 0x3a, 0x5e, 0x61, 0x23, 0x9b, 0x9e, 0x89,
	0xec, 0xeb, 0xe4, 0x1c, 0xcd, 0x1e, 0xc6, 0x39, 0xb5, 0x67, 0xc2, 0xe5, 0x20, 0x8e, 0xd1, 0x27,
	0xb1, 0xa9, 0x30, 0x60, 0xa3, 0x5a, 0x98, 0x52, 0x8b, 0x22, 0x0b, 0xa4, 0x0b, 0x65, 0x68, 0xc4,
	0x46, 0x25, 0x3b, 0x13, 0x95, 0xd7, 0x0c, 0x2a, 0x34, 0x0f, 0x8c, 0x71, 0xdc, 0x77, 0x4f, 0x68,
	0x8e, 0x82, 0xe3, 0x48, 0x3c, 0x50, 0x14, 0xb0, 0x7c, 0x66, 0x5a, 0xb1, 0x1c, 0x4f, 0x11, 0x55,
	0x1c, 0x1a, 0xc1, 0x40, 0x00, 0x43, 0x8c, 0x82, 0x91, 0xdb, 0x8f, 0xc3, 0x98, 0x71, 0x88, 0xa2,
	0x31, 0x9a, 0x27, 0xc7, 0x61, 0x08, 0x35, 0x8e, 0x0d, 0xf3, 0x86, 0x28, 0xeb, 0x71, 0xda, 0xee,
	0xe0, 0x29, 0x52, 0x0e, 0x86, 0xc1, 0x9f, 0x12, 0xe2, 0xab, 0xa2, 0x24, 0x47, 0x51, 0xef, 0x61,
	0x23, 0xad, 0xf7, 0x9f, 0x5a, 0x23, 0xe8, 0x70, 0x0d, 0xfc, 0x4f, 0x4a, 0x00, 0xe3, 0x31, 0x65,
	0xec, 0x83, 0x2d, 0x8d, 0xc1, 0x48, 0x72, 0xc3, 0x9b, 0x22, 0x77, 0x66, 0xb1, 0x9f, 0x11, 0x7e,
	0x3b, 0xee, 0xc8, 0x0b, 0x7d, 0xb7, 0x4f, 0x94, 0xfc, 0xb2, 0x9e, 0x99, 0xc6, 0x8d, 0x13, 0x72,
	0x53, 0x2c, 0xeb, 0x69, 0xa5, 0xad, 0xba, 0x62, 0x47, 0x65, 0x08, 0x39, 0xc4, 0x45, 0xc7, 0x73,
	0xd2, 0xaa, 0xc5, 0x8f, 0xa4, 0xf1, 0xcb, 0x4c, 0xb8, 0xce, 0xe2, 0xe2, 0x73, 0x8f, 0xf3, 0xeb,
	0x0c, 0x1d, 0x52, 0x94, 0x38, 0x1d, 0x6f, 0x34, 0xf2, 0x07, 0x27, 0xfb, 0x41, 0xd0, 0x9f, 0xf3,
	0xc4, 0xdc, 0x13, 0xa5, 0x48, 0x76, 0x32, 0x9c, 0x6e, 0xec, 0xeb, 0xad, 0x01, 0xd0, 0x05, 0x04,
	0x6b, 0xc7, 0xc0, 0xa0, 0xe6, 0x19, 0xc6, 0x0e, 0x8f, 0xf4, 0xc8, 0x8c, 0xc8, 0x4d, 0x9c, 0xad,
	0x58, 0x07, 0xe4, 0x4d, 0xe9, 0x8f, 0x4d, 0xeb, 0x40, 0xac, 0xab, 0x3a, 0x68, 0x56, 0x94, 0xae,
	0x58, 0xa2, 0x83, 0xe1, 0x54, 0xbb, 0x03, 0x73, 0x59, 0x7e, 0x56, 0x07, 0x66, 0x49, 0xb0, 0xbe,
	0x86, 0x36, 0xfb, 0x49, 0xdf, 0xeb, 0xe6, 0x24, 0x3c, 0x31, 0x9f, 0x0d, 0x7e, 0x60, 0x62, 0x86,
	0x53, 0xc0, 0x95, 0x11, 0x3a, 0x8c, 0xf3, 0x88, 0xf4, 0xbd, 0x6a, 0x93, 0x1d, 0xf8, 0xbd, 0xf3,
	0x97, 0x69, 0x12, 0x7b, 0x57, 0xdb, 0x44, 0x56, 0xed, 0x66, 0x3f, 0xd2, 0x93, 0xaa, 0xdd, 0xec,
	0x86, 0x05, 0xdc, 0x51, 0x32, 0x66, 0x1a, 0x30, 0xed, 0x04, 0x03, 0x9b, 0x7d, 0xc8, 0x4e, 0x02,
	0x9b, 0x5d, 0x30, 0xc0, 0xbc, 0x07, 0xb9, 0xe9, 0xc0, 0xbc, 0x03, 0x6c, 0x1e, 0x6a, 0xfa, 0xe7,
	0x27, 0xcd, 0x43, 0x4d, 0x7d, 0x03, 0x4a, 0xb4, 0x5f, 0x98, 0x0e, 0x4a, 0x94, 0x97, 0x56, 0xb5,
	0xa1, 0x7b, 0x61, 0x8a, 0x55, 0x6d, 0xa8, 0xde, 0xa2, 0x20, 0x99, 0x36, 0x7b, 0xe6, 0x24, 0x37,
	0x98, 0x42, 0x67, 0xd1, 0x89, 0x8c, 0x62, 0x97, 0x45, 0x0e, 0x44, 0xb5, 0x0c, 0x4b, 0x14, 0x9d,
	0x0f, 0x48, 0xf6, 0x5d, 0x72, 0x44, 0xe7, 0x5b, 0xa2, 0xa4, 0x68, 0x3e, 0x1a, 0x4f, 0x51, 0x46,
	0x98, 0x01, 0x50, 0x81, 0x71, 0x8e, 0xca, 0xfd, 0x7e, 0x46, 0x14, 0xa8, 0x0b, 0x4e, 0x62, 0x69,
	0x5a, 0x86, 0xb7, 0x06, 0x60, 0x85, 0x82, 0x59, 0x06, 0x74, 0xcf, 0x68, 0x84, 0x8c, 0x82, 0x01,
	0x12, 0x58, 0xb1, 0xf6, 0x6f, 0x88, 0x52, 0x6f, 0x3c, 0x38, 0xf1, 0x82, 0x01, 0x5a, 0x33, 0x13,
	0xd1, 0x0f, 0x9a, 0x6d, 0xcd, 0x00, 0xa0, 0x6a, 0xe5, 0x70, 0xd1, 0x01, 0xc7, 0xf9, 0x39, 0xd4,
	0x7e, 0x47, 0x08, 0xd9, 0x6a, 0xf6, 0x6a, 0x4a, 0x6c, 0xdd, 0xe8, 0x65, 0x0e, 0x02, 0x15, 0xa4,
	0x7c, 0x2e, 0xf6, 0xc2, 0x80, 0xdc, 0xb3, 0x08, 0x8e, 0x4c, 0x26, 0xd6, 0x77, 0x4d, 0xbe, 0x01,
	0x5b, 0x6c, 0xe1, 0xc4, 0x1b, 0xd1, 0xf8, 0x22, 0x01, 0xa3, 0xc7, 0x07, 0x93, 0x11, 0x60, 0x9a,
	0xcf, 0x87, 0x14, 0x9a, 0x20, 0xb1, 0x09, 0xcf, 0xcc, 0xc4, 0x8b, 0xd4, 0x72, 0x53, 0x2c, 0xe9,
	0x68, 0x37, 0xa7, 0x05, 0xca, 0xd4, 0x7e, 0x43, 0x94, 0xbb, 0xc1, 0x00, 0x4e, 0xe0, 0xd8, 0x43,
	0xe2, 0x44, 0x14, 0x3e, 0xa0, 0x70, 0x5b, 0x48, 0x7e, 0x37, 0x37, 0x2e, 0x53, 0xe3, 0x6d, 0xda,
	0x7c, 0xf0, 0x31, 0x2b, 0x24, 0x37, 0xcd, 0xe6, 0x36, 0xf5, 0x76, 0x7a, 0x48, 0x7b, 0xda, 0x3c,
	0x54, 0x81, 0xe4, 0xfd, 0xe7, 0x4c, 0x53, 0xcf, 0xbd, 0x20, 0x0f, 0x3f, 0xe7, 0x80, 0x92, 0xdf,
	0x1d, 0x9f, 0xb5, 0x31, 0xee, 0x45, 0x0c, 0xe6, 0x0f, 0xa4, 0x0a, 0xc0, 0x07, 0xf7, 0x39, 0x4b,
	0x7f, 0xe7, 0x81, 0x58, 0x24, 0x0f, 0xbe, 0xe5, 0x85, 0x5d, 0xa0, 0x5d, 0xf5, 0x6b, 0x22, 0xd7,
	0xc5, 0x67, 0x82, 0x9d, 0x1e, 0x36, 0x84, 0x7d, 0x1e, 0x32, 0x34, 0x8d, 0x91, 0xa6, 0x24, 0x06,
	0x1e, 0xee, 0x46, 0x30, 0x38, 0xf6, 0x4f, 0x90, 0x52, 0xa1, 0x37, 0xf4, 0x5c, 0xa5, 0x72, 0xde,
	0x90, 0xb6, 0xc7, 0x84, 0xd1, 0xb3, 0x11, 0xfa, 0x3d, 0x12, 0x0a, 0xaf, 0x63, 0xf6, 0xc9, 0x1f,
	0x48, 0xc9, 0x61, 0x88, 0xaf, 0xf1, 0x87, 0xe5, 0x79, 0x03, 0xef, 0xec, 0xa2, 0x05, 0x22, 0x8c,
	0xd2, 0x14, 0x65, 0xf4, 0xf3, 0xa9, 0x09, 0x60, 0x24, 0x67, 0x4d, 0xe9, 0x07, 0x9a, 0x76, 0x14,
	0xba, 0x43, 0x32, 0xe1, 0xcb, 0xce, 0xcf, 0x53, 0xa2, 0x42, 0x64, 0x5c, 0xef, 0x07, 0x81, 0xc2,
	0x16, 0x56, 0x03, 0x16, 0x2a, 0x39, 0x48, 0x29, 0xb5, 0x2f, 0xa3, 0xd0, 0x73, 0xa3, 0x71, 0xe8,
	0xe1, 0xd8, 0xac, 0x24, 0x01, 0x0a, 0x07, 0xc2, 0x86, 0x8c, 0xda, 0x7e, 0x3d, 0x7d, 0x56, 0xf9,
	0x18, 0xe0, 0xcf, 0x28, 0x74, 0x72, 0xc0, 0x54, 0xb8, 0x95, 0xa1, 0xf2, 0x1f, 0x8c, 0xf7, 0x6b,
	0x48, 0xe5, 0xfc, 0x61, 0x4a, 0x9e, 0x53, 0x83, 0x4c, 0xd2, 0x68, 0xcc, 0x1e, 0x05, 0x91, 0xf2,
	0x11, 0x8c, 0xd4, 0x69, 0xe2, 0xdc, 0x18, 0x3d, 0xc5, 0x8e, 0xd5, 0xbb, 0xe0, 0x4b, 0x60, 0x43,
	0x24, 0x53, 0x3d, 0xb3, 0xe0, 0xee, 0x88, 0x7c, 0x97, 0x03, 0x3a, 0x9c, 0xea, 0x31, 0x92, 0x34,
	0xc6, 0x03, 0xc4, 0x99, 0xb8, 0x81, 0x44, 0x27, 0xb9, 0x9c, 0xaf, 0x83, 0x0b, 0x85, 0x8f, 0x6a,
	0x3d, 0x89, 0x73, 0x6c, 0x91, 0xd4, 0xf9, 0x7f, 0xe8, 0x9c, 0xa9, 0x89, 0x59, 0x2c, 0xe0, 0x83,
	0x5a, 0x13, 0x26, 0xf2, 0x80, 0x97, 0xb4, 0x28, 0x79, 0x79, 0xa0, 0x5a, 0x88, 0xf4, 0xe9, 0xd0,
	0x90, 0xd9, 0x1d, 0x91, 0x7c, 0xcc, 0xa9, 0x9d, 0xe9, 0x79, 0xc7, 0xde, 0x20, 0x62, 0x15, 0x9d,
	0x43, 0xe3, 0x70, 0xe0, 0x3d, 0x1f, 0xd5, 0x19, 0x68, 0x41, 0x1d, 0x0f, 0x29, 0x1c, 0x36, 0x87,
	0x52, 0x32, 0xc0, 0x22, 0x65, 0xd3, 0x2e, 0x40, 0x93, 0x3a, 0xcd, 0x39, 0xbf, 0x9b, 0x12, 0xe5,
	0x38, 0xc9, 0xe0, 0x3c, 0x10, 0xf6, 0x52, 0xda, 0x56, 0x27, 0x29, 0x8b, 0x13, 0x2a, 0x19, 0xa3,
	0xd7, 0x04, 0x67, 0x5e, 0xb5, 0x51, 0xe0, 0xcb, 0x70, 0x0d, 0x36, 0xb7, 0xf1, 0x84, 0x67, 0xc9,
	0x13, 0x55, 0x56, 0xaa, 0xcc, 0x45, 0xa6, 0x8d, 0x45, 0x99, 0x7f, 0x81, 0x45, 0x89, 0x12, 0x0b,
	0x07, 0x6a, 0x0c, 0x26, 0x25, 0xa2, 0x62, 0x7e, 0xdc, 0x86, 0x82, 0x16, 0x71, 0x40, 0x36, 0xec,
	0x30, 0x73, 0x13, 0x74, 0x2e, 0x20, 0xa3, 0x32, 0xc0, 0x80, 0xd6, 0xa6, 0x22, 0x3a, 0xd0, 0x0f,
	0x1e, 0xeb, 0x36, 0xdd, 0x61, 0xd5, 0xd0, 0xb4, 0x86, 0xa4, 0xef, 0x2a, 0xd2, 0x2f, 0x33, 0x56,
	0xad, 0x20, 0x92, 0x74, 0xd7, 0x8b, 0x29, 0xbc, 0x68, 0x31, 0xcb, 0x66, 0x31, 0xbc, 0x0d, 0x7f,
	0x0a, 0x0c, 0x44, 0x5c, 0x85, 0x12, 0x82, 0x74, 0x55, 0x10, 0xf9, 0x23, 0x73, 0x44, 0x5f, 0x2e,
	0x51, 0xca, 0x4a, 0x8c, 0xf1, 0x72, 0xee, 0x48, 0x16, 0x63, 0x67, 0xe7, 0x56, 0x42, 0xaa, 0x62,
	0x2f, 0x85, 0x88, 0x62, 0xd5, 0x1c, 0x09, 0x19, 0x43, 0xb5, 0xbc, 0x52, 0x71, 0xf1, 0x05, 0xd2,
	0x3c, 0xfe, 0x20, 0x92, 0x4c, 0x05, 0xf0, 0x28, 0x26, 0xb6, 0xd8, 0x3c, 0xa3, 0x34, 0x71, 0x0f,
	0xf7, 0x22, 0x64, 0x26, 0x10, 0xb4, 0xba, 0xfb, 0x42, 0x98, 0x23, 0x83, 0xbe, 0xd8, 0x09, 0xcc,
	0x8f, 0x9c, 0x24, 0x93, 0xbe, 0xd5, 0xf8, 0xc9, 0x42, 0xec, 0x9c, 0xff, 0xaf, 0x44, 0x97, 0xad,
	0x2f, 0x27, 0xa4, 0xc5, 0x1b, 0x31, 0x69, 0x31, 0x8d, 0x57, 0x9d, 0x84, 0xa4, 0x98, 0x06, 0xb3,
	0x64, 0x49, 0x89, 0xd4, 0xdb, 0x8b, 0x28, 0x9d, 0x71, 0xd1, 0x44, 0x92, 0xa9, 0xea, 0xf3, 0x76,
	0x42, 0x34, 0x5c, 0x9b, 0x22, 0x1a, 0xc0, 0x3f, 0x2b, 0xb4, 0xe4, 0x2e, 0x56, 0x8b, 0x22, 0xf5,
	0x5c, 0x6e, 0x25, 0xfc, 0xbc, 0xd0, 0xaa, 0x88, 0xe9, 0xf2, 0x20, 0x08, 0xa2, 0x91, 0xde, 0xb2,
	0x54, 0x62, 0xcb, 0x0c, 0x88, 0xca, 0x61, 0x9d, 0x9b, 0x40, 0x8f, 0xf3, 0x17, 0x8a, 0x73, 0x68,
	0x25, 0x20, 0x37, 0xfc, 0x1e, 0x95, 0x45, 0x94, 0x8d, 0x66, 0x4d, 0xbf, 0x40, 0xb3, 0x42, 0x87,
	0x41, 0x20, 0x79, 0x06, 0x74, 0x07, 0xe6, 0x80, 0x64, 0x84, 0x88, 0xac, 0xb2, 0x20, 0x64, 0xc7,
	0xa1, 0x28, 0x0d, 0x24, 0x4a, 0x05, 0xe5, 0x15, 0x23, 0x10, 0x0d, 0x8c, 0xc0, 0x09, 0xbd, 0x67,
	0x6e, 0xd8, 0x43, 0x83, 0xa1, 0x60, 0xf4, 0x3d, 0x36, 0xb1, 0xcd, 0x50, 0x54, 0x0c, 0x83, 0x3b,
	0xb6, 0xd5, 0x23, 0xc3, 0xa3, 0x6c, 0x73, 0x60, 0x89, 0x1a, 0xbe, 0x2a, 0x32, 0xc0, 0xfc, 0x32,
	0xbb, 0x61, 0x68, 0xaf, 0x48, 0xe9, 0xbc, 0x2b, 0xf2, 0x20, 0xb6, 0xfd, 0xa0, 0x17, 0xb7, 0xc8,
	0x52, 0x49, 0x8b, 0x8c, 0xa3, 0x2f, 0x7f, 0x9c, 0x16, 0xc5, 0x0e, 0x19, 0x76, 0x52, 0x32, 0xc7,
	0x55, 0x1f, 0xee, 0xbc, 0x3f, 0xba, 0xd0, 0x42, 0x81, 0xe9, 0xc7, 0xd6, 0x9d, 0xa6, 0x5f, 0xf6,
	0x05, 0xf4, 0x53, 0xa2, 0x3c, 0x97, 0x38, 0x98, 0x04, 0x42, 0xfb, 0xc5, 0x58, 0x9e, 0x78, 0x54,
	0xb6, 0xc1, 0xe5, 0x25, 0x78, 0x48, 0xbc, 0xa8, 0x1b, 0xfa, 0x43, 0x3a, 0xe2, 0x0b, 0x2a, 0x22,
	0x67, 0x56, 0x53, 0x48, 0xae, 0x86, 0x4f, 0x17, 0x68, 0xd8, 0x23, 0x64, 0x04, 0x99, 0x5a, 0xba,
	0x36, 0x85, 0x47, 0x14, 0xfd, 0x4a, 0x33, 0xe8, 0x87, 0x07, 0x82, 0xce, 0x10, 0x92, 0x78, 0xca,
	0xe1, 0x93, 0x87, 0xa6, 0x08, 0x3c, 0xe6, 0xf3, 0xd4, 0x65, 0x02, 0x5b, 0x36, 0x23, 0x11, 0xf5,
	0x9d, 0xff, 0x01, 0xc2, 0xb6, 0x81, 0xb4, 0x9b, 0x4a, 0x58, 0x26, 0xa4, 0x96, 0xb4, 0x4c, 0x48,
	0xad, 0x12, 0x90, 0xe6, 0xbb, 0x86, 0xd5, 0x12, 0xf4, 0x60, 0x86, 0x93, 0xeb, 0xc8, 0xbf, 0x60,
	0x1d, 0x44, 0x57, 0x14, 0x4c, 0xf1, 0x75, 0xe8, 0xfd, 0x46, 0xe7, 0xe4, 0x71, 0x10, 0xf6, 0x7b,
	0x3b, 0x20, 0xa1, 0x5e, 0x8a, 0xe6, 0x6d, 0xc6, 0xab, 0x8f, 0xc1, 0x8f, 0x4c, 0xe2, 0xe4, 0xab,
	0x85, 0x3a, 0xef, 0x89, 0x45, 0xed, 0xda, 0xed, 0x1d, 0xfd, 0x68, 0x52, 0x22, 0x2d, 0x5a, 0x92,
	0x3a, 0xe7, 0x04, 0x68, 0x6c, 0x0e, 0x2f, 0xd0, 0x6b, 0x24, 0x04, 0xde, 0x15, 0xe5, 0xcf, 0x62,
	0xa1, 0xf6, 0x54, 0xc2, 0x2c, 0x89, 0x0d, 0x0e, 0x74, 0x91, 0x4e, 0x09, 0xc1, 0x92, 0xdb, 0x52,
	0x7d, 0x4d, 0x5c, 0x77, 0x4d, 0x92, 0x82, 0xd6, 0xba, 0xad, 0x50, 0x2e, 0x3b, 0x7f, 0x9d, 0xa2,
	0xe0, 0xac, 0x95, 0x9c, 0xbb, 0x62, 0xa4, 0xd1, 0x5a, 0x18, 0x1f, 0x87, 0xa4, 0xaf, 0x92, 0x9d,
	0xe2, 0xab, 0xe4, 0xe6, 0xf5, 0x55, 0xb4, 0xe1, 0x12, 0x7a, 0xc4, 0xf4, 0xbb, 0xde, 0x33, 0x29,
	0x47, 0x60, 0xcd, 0x7e, 0x64, 0x12, 0xba, 0x85, 0x89, 0xf0, 0x5d, 0x71, 0x66, 0xf8, 0xee, 0x17,
	0x29, 0x0a, 0x07, 0x5d, 0x7a, 0xed, 0x18, 0xb5, 0x65, 0xd1, 0xb6, 0x1b, 0x3c, 0x93, 0xe6, 0x2f,
	0xb8, 0x36, 0xb2, 0xad, 0xed, 0x75, 0x83, 0x73, 0x59, 0xba, 0x33, 0xe1, 0xe1, 0x65, 0x5f, 0xe2,
	0xe1, 0x39, 0x7f, 0xc4, 0xfb, 0x61, 0x65, 0x3f, 0xe7, 0xde, 0x8f, 0xb8, 0xfb, 0x89, 0xbc, 0xe0,
	0x01, 0x0d, 0x81, 0x11, 0x1f, 0x82, 0x30, 0xd5, 0x65, 0x6d, 0xda, 0x25, 0xcb, 0x2a, 0x83, 0x44,
	0x39, 0x76, 0x39, 0x25, 0x5f, 0x4f, 0x7d, 0x52, 0xa9, 0xec, 0x13, 0x90, 0x61, 0x8f, 0x7e, 0x14,
	0x98, 0x3a, 0x0b, 0x4a, 0x06, 0xf6, 0xbd, 0x63, 0x63, 0x27, 0xce, 0x47, 0xec, 0xff, 0x92, 0x21,
	0x62, 0x5f, 0x7a, 0x61, 0xaa, 0x64, 0x4d, 0x7b, 0x19, 0xf8, 0x54, 0xef, 0xc9, 0x48, 0x1c, 0xba,
	0x6a, 0xde, 0x73, 0x65, 0x84, 0x81, 0xe0, 0x38, 0xd3, 0xb1, 0xab, 0x5c, 0xb2, 0x04, 0x4d, 0xf3,
	0x90, 0xb5, 0x79, 0x0b, 0x89, 0xb6, 0x1d, 0x70, 0xfb, 0x0a, 0x33, 0x36, 0xb4, 0xa8, 0x49, 0x18,
	0x48, 0x12, 0x0a, 0x45, 0x0f, 0x68, 0x89, 0xfb, 0xbd, 0x81, 0x8c, 0x7d, 0x1b, 0xbf, 0x37, 0x98,
	0xe2, 0xf7, 0xa2, 0x57, 0x1d, 0x30, 0xf1, 0x97, 0x66, 0x79, 0xd5, 0x80, 0x5b, 0x17, 0xc4, 0x34,
	0x20, 0x86, 0x8b, 0x5e, 0x56, 0xf8, 0x8e, 0xb9, 0x2a, 0x02, 0xdb, 0x2a, 0x2a, 0xea, 0x7e, 0xac,
	0x4a, 0x1e, 0xb0, 0x75, 0x45, 0x79, 0xd6, 0x66, 0x65, 0xd8, 0x5c, 0x55, 0x64, 0x04, 0xd6, 0xa0,
	0x58, 0xd4, 0x35, 0x92, 0x3b, 0x3f, 0x10, 0x4b, 0xc0, 0x75, 0x76, 0x0e, 0xfd, 0x8a, 0x6c, 0x07,
	0xa8, 0xf9, 0xd1, 0x06, 0x88, 0xea, 0x3d, 0x75, 0x06, 0x72, 0xce, 0x11, 0x0c, 0x1e, 0x4f, 0xd0,
	0x7f, 0xe1, 0xe7, 0x0c, 0xd3, 0x0b, 0xb4, 0x00, 0x93, 0xa6, 0xbf, 0xda, 0x02, 0x9c, 0x27, 0x12,
	0xd9, 0xcb, 0x0e, 0xc4, 0xe6, 0x8f, 0x4e, 0x82, 0xe0, 0x16, 0x45, 0x5e, 0xef, 0x91, 0x4f, 0x46,
	0x3b, 0xd3, 0xe1, 0x84, 0x42, 0x5f, 0xa6, 0xf2, 0xe0, 0x8a, 0x24, 0xd6, 0x86, 0x54, 0x46, 0x19,
	0x52, 0x70, 0x82, 0x1b, 0xc6, 0x1e, 0xcd, 0x39, 0x11, 0x45, 0xc4, 0x2e, 0x3b, 0x51, 0x62, 0x05,
	0x09, 0xc9, 0x95, 0x79, 0x99, 0xe4, 0x7a, 0x22, 0x56, 0x38, 0x7f, 0x66, 0x17, 0x3d, 0x5c, 0x7d,
	0x89, 0xdd, 0x60, 0xac, 0x09, 0xf7, 0x7d, 0x18, 0x7a, 0xa2, 0x9e, 0xe2, 0x8a, 0x43, 0x1b, 0xdb,
	0x1d, 0xc7, 0x5e, 0x74, 0xbe, 0x43, 0xf5, 0x70, 0x6a, 0x6c, 0x52, 0xba, 0xf3, 0x05, 0x10, 0x0f,
	0xa9, 0xf8, 0xed, 0xf2, 0x1d, 0x27, 0x51, 0xc2, 0xf0, 0x97, 0x4a, 0x98, 0x61, 0x30, 0x52, 0xb2,
	0xf4, 0x43, 0x51, 0xd9, 0x47, 0x57, 0x69, 0xf0, 0xa3, 0x71, 0x08, 0x9c, 0x84, 0x36, 0x3c, 0xa5,
	0x61, 0xa9, 0xad, 0xe7, 0x29, 0xff, 0x40, 0x36, 0xb1, 0xff, 0x94, 0xb6, 0x9b, 0xac, 0x7c, 0xae,
	0xf3, 0xbf, 0xc1, 0xfa, 0xe2, 0xd1, 0xd8, 0x7f, 0xa1, 0x51, 0xd6, 0xa4, 0xe5, 0x0f, 0x12, 0x1c,
	0x9f, 0xa7, 0x27, 0xde, 0xf6, 0xe5, 0x1b, 0x64, 0x69, 0x72, 0x24, 0x78, 0xf2, 0x8c, 0x62, 0x12,
	0x9f, 0xf1, 0x23, 0xf7, 0x2c, 0x9b, 0x08, 0x7c, 0x4c, 0xe0, 0x0f, 0x63, 0x78, 0xc7, 0xc7, 0x5e,
	0x97, 0x4c, 0x5d, 0x53, 0x4b, 0x1d, 0xc2, 0x66, 0xb3, 0x07, 0x99, 0x73, 0x7e, 0x93, 0x16, 0xcb,
	0x1d, 0xac, 0x13, 0x7b, 0xe0, 0x8e, 0x46, 0x7d, 0x8f, 0xfc, 0x38, 0x12, 0x82, 0xb0, 0x69, 0x6a,
	0xdd, 0x69, 0x36, 0xc5, 0x4e, 0x87, 0x72, 0xc1, 0xf0, 0x3b, 0x1a, 0x1a, 0x73, 0xd1, 0x8f, 0xb8,
	0xaf, 0x29, 0xdb, 0x7b, 0xde, 0x80, 0x03, 0xd3, 0x03, 0xa9, 0x31, 0xf2, 0x8c, 0x72, 0xb8, 0xb0,
	0x1a, 0x59, 0x39, 0xbc, 0x23, 0x8a, 0xb4, 0x35, 0xc4, 0xf1, 0x6c, 0x26, 0x9a, 0xfc, 0x81, 0x51,
	0x5d, 0x9c, 0x9e, 0xbf, 0x23, 0x43, 0x6e, 0xb4, 0xf2, 0xc2, 0x8b, 0x9c, 0x45, 0x50, 0xa8, 0x0f,
	0xa5, 0x43, 0x53, 0xc0, 0x89, 0x39, 0x3c, 0xd3, 0xa6, 0x45, 0xb3, 0x0e, 0x79, 0x55, 0x54, 0xdd,
	0xee, 0xc8, 0x3f, 0xf7, 0x3a, 0x4f, 0xfd, 0x7e, 0x1f, 0xf0, 0xea, 0xfb, 0x83, 0x13, 0x72, 0x70,
	0x72, 0x54, 0xdc, 0x40, 0xb2, 0x8e, 0x17, 0x45, 0xc5, 0x0d, 0x8b, 0xb4, 0x4b, 0x56, 0x71, 0x43,
	0x02, 0xc0, 0xf9, 0x89, 0x58, 0x4e, 0xe2, 0xab, 0xf9, 0x4e, 0x6d, 0xbb, 0x6d, 0x0d, 0xa4, 0x93,
	0xd6, 0x40, 0x26, 0x69, 0x0d, 0x70, 0x50, 0xd1, 0x56, 0xf6, 0xb9, 0x99, 0xca, 0xfe, 0xcf, 0x61,
	0x0f, 0x39, 0x16, 0x82, 0x24, 0x20, 0xe6, 0xa7, 0xa4, 0x25, 0x37, 0xad, 0xc9, 0x1d, 0x64, 0x19,
	0x49, 0x6a, 0x0e, 0xda, 0xd2, 0xca, 0x6d, 0xc4, 0x36, 0x8c, 0x1f, 0x64, 0x94, 0xc0, 0x1f, 0x78,
	0x5e, 0xaf, 0x01, 0x6e, 0xe1, 0xee, 0xf8, 0xec, 0xc8, 0x0b, 0x8d, 0xe1, 0x12, 0x21, 0xad, 0xa0,
	0xa7, 0x09, 0xb7, 0xd0, 0xf8, 0x3a, 0x36, 0x64, 0xb5, 0x61, 0xbd, 0xa7, 0x31, 0x18, 0x55, 0x1b,
	0x08, 0x2f, 0xe3, 0x7a, 0x72, 0x23, 0x9f, 0x99, 0x22, 0x05, 0x9a, 0xc0, 0x72, 0x56, 0x61, 0x69,
	0x5e, 0xcc, 0xce, 0xb8, 0x3f, 0xf2, 0x87, 0x72, 0xcb, 0xb4, 0x23, 0xba, 0x46, 0x7a, 0x9f, 0x2c,
	0x2e, 0x3a, 0x0b, 0x17, 0x3c, 0xc6, 0xa2, 0x52, 0xc0, 0xfe, 0xc9, 0x00, 0xb8, 0x79, 0x4d, 0x86,
	0xe0, 0xca, 0xd3, 0x98, 0x60, 0x29, 0x89, 0x2d, 0x70, 0xe4, 0x32, 0xe1, 0x80, 0x6a, 0xdd, 0x7f,
	0x2e, 0x75, 0xdd, 0x66, 0x8b, 0x94, 0x7d, 0x81, 0xaa, 0x37, 0xa2, 0x6d, 0x1f, 0xcc, 0x22, 0x52,
	0xf3, 0xce, 0x3d, 0x20, 0xb7, 0x61, 0x1f, 0x15, 0xfa, 0x60, 0xfa, 0xf4, 0xa4, 0x9c, 0xd0, 0xc7,
	0x8c, 0x3d, 0x8d, 0xa6, 0x10, 0x68, 0xf7, 0xcb, 0x22, 0xa3, 0xb9, 0x4b, 0x80, 0xa1, 0xb1, 0x37,
	0xee, 0x2a, 0xd9, 0x55, 0x74, 0xfe, 0x53, 0x1a, 0xc6, 0x31, 0xc5, 0x4a, 0x73, 0xd7, 0x0c, 0x90,
	0xa6, 0x69, 0xb9, 0x17, 0x46, 0x62, 0x51, 0xcb, 0x7a, 0xe8, 0x79, 0x26, 0xc0, 0xc6, 0xea, 0x88,
	0xf7, 0xfb, 0xae, 0x10, 0x60, 0xdb, 0x8d, 0x4e, 0xb9, 0x74, 0x28, 0x97, 0x88, 0x35, 0x52, 0xab,
	0x2c, 0xeb, 0x2f, 0x3e, 0xf3, 0x3c, 0x59, 0xcf, 0x94, 0x9f, 0x09, 0x16, 0x5b, 0xca, 0x82, 0xba,
	0xc4, 0x31, 0x54, 0x39, 0x83, 0x82, 0xb2, 0xa9, 0x24, 0x50, 0x2b, 0xf4, 0xbb, 0x8a, 0x2d, 0x6c,
	0xfb, 0x4e, 0x28, 0x91, 0x73, 0xee, 0x4b, 0x09, 0x4c, 0x36, 0xa0, 0xf3, 0xbe, 0x28, 0x01, 0x75,
	0x75, 0x61, 0xd6, 0x7c, 0x1a, 0xe5, 0x27, 0x94, 0x04, 0xbf, 0x5c, 0xa7, 0xa4, 0xd6, 0xb6, 0xcd,
	0xd3, 0x4c, 0xdc, 0x28, 0x66, 0x3a, 0xde, 0x12, 0xcb, 0x68, 0x98, 0xa8, 0x59, 0xd0, 0x3a, 0xe1,
	0x3a, 0xe6, 0x3f, 0x41, 0x0d, 0xe1, 0x46, 0x4f, 0x29, 0xa8, 0x8b, 0x1a, 0x02, 0x7e, 0xeb, 0xa3,
	0x8a, 0x1a, 0x02, 0x9e, 0xa5, 0x86, 0x48, 0x27, 0x34, 0x84, 0x7c, 0x83, 0x93, 0x23, 0xd4, 0x1a,
	0xf8, 0xe6, 0x9c, 0x9b, 0x53, 0x2d, 0x1b, 0x81, 0x8b, 0x59, 0x89, 0x34, 0x1f, 0xf0, 0x13, 0x78,
	0xe2, 0x79, 0xd3, 0x94, 0xd0, 0x29, 0x9c, 0xf8, 0xc7, 0xa3, 0xad, 0x91, 0x77, 0x26, 0xa3, 0x63,
	0xc6, 0x0a, 0xde, 0x90, 0x2f, 0xc8, 0xc8, 0x09, 0xf6, 0x83, 0x0e, 0x85, 0x52, 0x17, 0x68, 0xa0,
	0x55, 0x38, 0x42, 0xdd, 0x53, 0x1f, 0x88, 0x3e, 0x35, 0x7e, 0xda, 0xac, 0x9b, 0x97, 0xe0, 0xd7,
	0x2f, 0x20, 0x92, 0xe8, 0x23, 0xab, 0x95, 0xf5, 0xa6, 0xae, 0x2c, 0x35, 0x63, 0x65, 0x80, 0xf5,
	0x11, 0xf1, 0x8e, 0xaa, 0x00, 0x78, 0x42, 0x1b, 0xac, 0xcb, 0xe9, 0xe6, 0xad, 0xf6, 0x9e, 0x63,
	0x2e, 0xe7, 0x43, 0x51, 0x95, 0xb8, 0xf7, 0xb0, 0x0d, 0x58, 0x22, 0x89, 0xb7, 0x14, 0x3f, 0x0a,
	0x23, 0x3e, 0xd0, 0x1f, 0x8b, 0xeb, 0x07, 0x83, 0x39, 0x3a, 0xa2, 0x2e, 0x65, 0x6b, 0x43, 0x17,
	0x69, 0x38, 0x81, 0x28, 0xa9, 0xe9, 0xb1, 0xb6, 0xfc, 0x3d, 0x10, 0xd5, 0x72, 0x20, 0x19, 0x70,
	0x30, 0x45, 0x7a, 0x53, 0x66, 0xb8, 0x87, 0xee, 0x88, 0x6a, 0x97, 0xa1, 0xd5, 0xaf, 0x18, 0x4f,
	0x66, 0x0a, 0x52, 0xce, 0xcf, 0x52, 0xc4, 0xeb, 0x97, 0xa4, 0xdf, 0x1d, 0xb1, 0x20, 0xf1, 0x92,
	0xf9, 0x76, 0x03, 0x66, 0xa3, 0xff, 0x96, 0x28, 0xf6, 0x5c, 0xbf, 0x7f, 0x81, 0x6d, 0xd2, 0x6e,
	0x9d, 0x0a, 0x08, 0x16, 0x96, 0x29, 0xb5, 0x32, 0x15, 0x8e, 0x73, 0x5b, 0x71, 0x86, 0xfe, 0x19,
	0xf2, 0x72, 0xaa, 0x53, 0xca, 0x25, 0xe7, 0x1b, 0xec, 0xae, 0x28, 0x0d, 0xbc, 0x67, 0x07, 0xaa,
	0x94, 0x26, 0x3d, 0xc3, 0x19, 0x04, 0xae, 0x5b, 0xa4, 0xdb, 0x0b, 0x5e, 0x14, 0x8c, 0xc3, 0xae,
	0x17, 0x0b, 0xdf, 0x82, 0xa3, 0x3c, 0x74, 0x47, 0xa7, 0xe6, 0xa6, 0x57, 0xe4, 0xff, 0xd8, 0x0a,
	0xa1, 0x1d, 0xfb, 0x7d, 0x4f, 0x86, 0xd0, 0x32, 0x7c, 0x0c, 0x55, 0x64, 0x8b, 0x8f, 0xff, 0xbf,
	0x4b, 0x8b, 0x42, 0xa2, 0xae, 0x07, 0xac, 0x85, 0x2d, 0x35, 0x7a, 0x32, 0x1b, 0x22, 0xfd, 0x6e,
	0x2d, 0x62, 0xec, 0x6b, 0x12, 0x35, 0x51, 0xb1, 0x8c, 0x19, 0x16, 0x8b, 0xb9, 0xc9, 0x2c, 0x49,
	0x7e, 0x4a, 0x96, 0x64, 0x21, 0x9e, 0x5b, 0xd1, 0x62, 0xb8, 0xef, 0x9f, 0xf9, 0xa3, 0xa3, 0xd0,
	0x73, 0x9f, 0x6e, 0x9f, 0xcb, 0xc0, 0x30, 0xdb, 0x2a, 0x14, 0x71, 0x14, 0xc6, 0xf5, 0xd4, 0x25,
	0xc8, 0x25, 0x99, 0xd6, 0xc8, 0x9f, 0xb1, 0xad, 0xb9, 0xf8, 0x92, 0xfc, 0xca, 0x71, 0xe8, 0x9e,
	0x34, 0x94, 0x67, 0xee, 0xfc, 0xfb, 0x2c, 0x50, 0x03, 0xd7, 0x9b, 0x0c, 0x92, 0xab, 0x98, 0x37,
	0x53, 0x59, 0xdd, 0x31, 0xc9, 0xbc, 0xf4, 0x8e, 0x49, 0x76, 0x66, 0xea, 0x8e, 0x02, 0x1c, 0xa1,
	0x32, 0x4b, 0xb1, 0xee, 0x12, 0xa9, 0x76, 0x4f, 0x92, 0x47, 0x3d, 0xdf, 0x37, 0xd6, 0x4b, 0x9f,
	0x78, 0x86, 0x68, 0x6b, 0x59, 0x2f, 0x86, 0xe0, 0x92, 0x3e, 0xa8, 0xbc, 0xdc, 0x28, 0xd2, 0xad,
	0x5a, 0x55, 0x9d, 0xb9, 0xcf, 0x2d, 0x55, 0x45, 0xc9, 0xea, 0x30, 0x40, 0xf6, 0x20, 0x1a, 0x15,
	0x51, 0x83, 0x0e, 0x83, 0x67, 0x5e, 0x48, 0x64, 0x2b, 0x27, 0x34, 0x68, 0x4b, 0xbd, 0xc1, 0x02,
	0x66, 0x8f, 0xaa, 0x6f, 0xc9, 0xfe, 0x5d, 0x4a, 0x04, 0x98, 0x9b, 0xfa, 0x15, 0xdf, 0x9c, 0x94,
	0x45, 0xfe, 0xac, 0xe9, 0xdd, 0xbe, 0xc7, 0x36, 0x52, 0x45, 0xa1, 0xdf, 0x83, 0xa1, 0xc6, 0x21,
	0x37, 0xae, 0xc8, 0x3c, 0x3f, 0x56, 0x13, 0x3c, 0xa6, 0x64, 0x7d, 0x3c, 0x65, 0x82, 0x94, 0xdb,
	0xa0, 0x57, 0xc8, 0x69, 0xb0, 0x1a, 0xcb, 0xf4, 0x01, 0xee, 0xb8, 0xa6, 0x56, 0x05, 0x6f, 0x28,
	0xc2, 0x71, 0x5d, 0x46, 0xa9, 0x16, 0xa2, 0xd3, 0xe0, 0x19, 0x1a, 0x96, 0x37, 0x12, 0xb8, 0x1e,
	0x3c, 0xd2, 0x41, 0x62, 0x30, 0xd7, 0x90, 0x11, 0xce, 0xb0, 0xec, 0xb4, 0x83, 0xe7, 0xe7, 0x26,
	0xb1, 0xc3, 0x77, 0x85, 0xb0, 0x80, 0x74, 0x72, 0x26, 0x6d, 0x92, 0x33, 0xf4, 0xf3, 0x99, 0x2c,
	0x9e, 0x85, 0x9f, 0xa7, 0x9c, 0xbd, 0x44, 0x33, 0xcb, 0xc2, 0xf7, 0x2e, 0xf3, 0xac, 0xc9, 0xda,
	0xdc, 0x88, 0x33, 0xc4, 0x86, 0xa7, 0x0b, 0x08, 0x00, 0xae, 0xa5, 0x8e, 0x73, 0xd9, 0x59, 0x15,
	0x82, 0x28, 0xcf, 0x5e, 0x94, 0x3e, 0x6f, 0xda, 0xb2, 0xb3, 0x33, 0x3c, 0xdf, 0x92, 0xb0, 0xfb,
	0xee, 0x51, 0x1f, 0xf3, 0xa0, 0x39, 0xda, 0xcd, 0x89, 0xfb, 0x92, 0x66, 0x3c, 0x58, 0x5e, 0x91,
	0x9e, 0x68, 0xbb, 0x66, 0x56, 0x42, 0x90, 0x12, 0x0e, 0x83, 0x67, 0x8d, 0x71, 0x78, 0xae, 0xdc,
	0xca, 0x9f, 0xc8, 0x9e, 0x84, 0xf5, 0xdd, 0x98, 0x05, 0x9e, 0x9a, 0xc6, 0x39, 0x2a, 0xc5, 0x76,
	0x6a, 0x9c, 0xcd, 0xe9, 0x30, 0xb7, 0xc1, 0xba, 0x7e, 0x3e, 0xd4, 0x85, 0x83, 0x53, 0x81, 0x40,
	0xe4, 0x96, 0xf9, 0x02, 0x0a, 0x48, 0xf1, 0xb1, 0x1f, 0x4e, 0x10, 0xe6, 0x0b, 0xb8, 0x02, 0xe6,
	0xfc, 0x34, 0x25, 0x84, 0xc5, 0xcc, 0x70, 0xaa, 0x3c, 0x7d, 0x0d, 0x41, 0x4b, 0x47, 0x70, 0x52,
	0xce, 0xa4, 0x3c, 0xd1, 0x49, 0x6e, 0xf4, 0x96, 0xde, 0x13, 0xe5, 0x53, 0x1b, 0xc1, 0x89, 0x8b,
	0x54, 0x71, 0xf4, 0x81, 0xfb, 0x78, 0x70, 0x55, 0x9a, 0x9a, 0x55, 0x57, 0x60, 0x4b, 0x74, 0x2b,
	0xc3, 0xd4, 0x40, 0x9c, 0xe0, 0xa3, 0x56, 0xe9, 0x77, 0x61, 0x63, 0xb0, 0xc1, 0x32, 0x2c, 0xac,
	0x93, 0xb8, 0xa1, 0x5e, 0xe1, 0x06, 0x1e, 0x79, 0x27, 0xfe, 0xe0, 0x45, 0x25, 0x49, 0x56, 0xa5,
	0x38, 0x4b, 0xa4, 0xb7, 0xd1, 0x58, 0x97, 0xd9, 0x87, 0x7c, 0xa2, 0x78, 0x82, 0x86, 0xc6, 0x43,
	0x46, 0xdb, 0xf1, 0x63, 0x51, 0xa6, 0x06, 0xa5, 0xc7, 0x48, 0xd8, 0xf8, 0x03, 0x90, 0xb4, 0xdd,
	0x53, 0x53, 0x5c, 0x09, 0xfc, 0xc4, 0x2d, 0xba, 0xf0, 0x5c, 0x2a, 0x96, 0x8c, 0x74, 0x30, 0x73,
	0x67, 0x96, 0xc4, 0x9c, 0x2d, 0xb0, 0x55, 0x99, 0x29, 0xab, 0xaf, 0x81, 0x9c, 0x5b, 0x21, 0x23,
	0x13, 0x14, 0xc8, 0xe0, 0xd6, 0xd4, 0x0a, 0x99, 0xf4, 0x04, 0x32, 0x19, 0xb5, 0x56, 0x5d, 0xcf,
	0x9a, 0x9d, 0xb6, 0x56, 0xb5, 0x34, 0xe7, 0x7b, 0x64, 0x3a, 0x6c, 0xb0, 0xb3, 0xac, 0xf5, 0xf1,
	0x7c, 0xda, 0xde, 0xd6, 0xa5, 0x98, 0x83, 0x09, 0xc9, 0x72, 0xb8, 0xf2, 0x58, 0x5c, 0x41, 0x2e,
	0x35, 0xd2, 0x5d, 0x26, 0x4c, 0xe8, 0xa9, 0xfc, 0xf5, 0x8d, 0x98, 0xdc, 0x54, 0xa3, 0x3b, 0xeb,
	0x14, 0x2f, 0xc5, 0x39, 0x95, 0xce, 0xbf, 0x1a, 0xee, 0x8f, 0x29, 0x5c, 0x7a, 0xf9, 0x71, 0xd4,
	0x4d, 0xf0, 0x99, 0xa6, 0xce, 0xaf, 0x52, 0xe4, 0xa0, 0xaa, 0x4b, 0x51, 0xf3, 0x8d, 0x0a, 0xa7,
	0xf3, 0xc8, 0x8d, 0xf0, 0x6c, 0xb2, 0xed, 0x92, 0x56, 0x99, 0xa8, 0xa1, 0x1b, 0x8e, 0x74, 0x2b,
	0x33, 0xda, 0xe7, 0xca, 0x4f, 0xdd, 0x50, 0x07, 0x5b, 0xde, 0x83, 0x93, 0xb1, 0xab, 0xbf, 0x4a,
	0x91, 0x37, 0x7c, 0x39, 0xa4, 0x6f, 0x5b, 0x4c, 0x37, 0x8b, 0x1c, 0x08, 0x24, 0x57, 0x36, 0x9a,
	0x28, 0x02, 0xd3, 0x40, 0x09, 0x57, 0x0f, 0x90, 0x04, 0x0d, 0x30, 0xe8, 0xe9, 0x85, 0xe7, 0x54,
	0x06, 0x83, 0x9a, 0x31, 0x63, 0x91, 0x37, 0xa6, 0x82, 0x45, 0xa0, 0x05, 0x22, 0x50, 0x22, 0x7d,
	0x52, 0x98, 0x91, 0xca, 0xe0, 0x82, 0x94, 0xdf, 0xa6, 0x88, 0xa1, 0xec, 0x6b, 0x69, 0xff, 0x28,
	0xb6, 0x6c, 0x52, 0xe6, 0x2e, 0x28, 0x63, 0xd2, 0x4a, 0x35, 0xd2, 0xda, 0x9d, 0xff, 0x98, 0x22,
	0x66, 0xbf, 0xfc, 0x1a, 0xff, 0x2e, 0x13, 0x86, 0x3f, 0xe7, 0x84, 0xa1, 0x75, 0xbf, 0xef, 0x1f,
	0x38, 0x61, 0xe8, 0xfc, 0x8a, 0x33, 0x7d, 0x97, 0xc6, 0xe8, 0x9f, 0x7a, 0xa6, 0x0f, 0x9c, 0x40,
	0xe6, 0xc4, 0x1e, 0xc1, 0x2d, 0xcf, 0x62, 0xe4, 0x78, 0x46, 0xb0, 0x32, 0x25, 0x23, 0xb8, 0x32,
	0x35, 0x23, 0x58, 0x9d, 0x9e, 0x11, 0xe4, 0x04, 0xe0, 0x0f, 0x45, 0x51, 0x73, 0xd1, 0x17, 0x7f,
	0x72, 0xd1, 0x8a, 0x2a, 0x9a, 0xeb, 0x7a, 0x73, 0x47, 0x1b, 0x31, 0x52, 0x65, 0xc7, 0xa7, 0xe3,
	0xd7, 0x63, 0x32, 0xd2, 0xf8, 0x89, 0x91, 0x2d, 0x3b, 0x83, 0x6c, 0xce, 0x81, 0x28, 0xa0, 0xc6,
	0xa3, 0xdb, 0xad, 0x73, 0x1f, 0x11, 0x65, 0x67, 0xe9, 0xe9, 0x4f, 0xd8, 0x0e, 0x33, 0xb9, 0xa9,
	0xdf, 0x4b, 0xc1, 0xb8, 0xea, 0xd6, 0xec, 0x17, 0x28, 0xf0, 0x81, 0x8e, 0x08, 0x94, 0x90, 0x80,
	0xc0, 0xe8, 0x47, 0x7d, 0x38, 0x16, 0xd2, 0xca, 0xe4, 0x98, 0xbc, 0x0e, 0x01, 0xbe, 0xe0, 0x30,
	0x80, 0x53, 0x47, 0x19, 0x35, 0x72, 0xd6, 0x16, 0x12, 0x16, 0x35, 0x0a, 0x12, 0x5a, 0x93, 0xb3,
	0x45, 0x61, 0x2d, 0x7d, 0xb5, 0x77, 0x6e, 0x46, 0x88, 0xa1, 0xca, 0x96, 0xc1, 0x05, 0x45, 0x78,
	0x2e, 0x39, 0x94, 0x3e, 0xd7, 0xb3, 0xa2, 0x99, 0xb7, 0x27, 0x2c, 0xb4, 0x29, 0x5b, 0xfd, 0x8c,
	0x72, 0x7a, 0xb1, 0x1b, 0xc7, 0x57, 0x5d, 0x09, 0xb2, 0xf4, 0xdb, 0x22, 0x8f, 0xee, 0x75, 0x30,
	0x90, 0x6e, 0x42, 0xcd, 0xfa, 0x18, 0x8e, 0x1c, 0xbf, 0x4e, 0xef, 0x9d, 0x1d, 0xca, 0x09, 0x7e,
	0x51, 0x13, 0x3b, 0xbb, 0xe2, 0x26, 0xae, 0x63, 0xca, 0xfd, 0xe7, 0xcb, 0x1b, 0x6b, 0x38, 0xde,
	0x11, 0x8c, 0x37, 0xfd, 0x3e, 0xf5, 0xbc, 0x37, 0x32, 0xb1, 0x14, 0xf7, 0xe0, 0x85, 0x76, 0xdb,
	0x0e, 0xd9, 0x01, 0xf6, 0xb5, 0xd9, 0xf9, 0xc6, 0x96, 0x9e, 0x77, 0x94, 0x20, 0xc1, 0xff, 0x61,
	0x9d, 0x7b, 0xf9, 0xf1, 0xb4, 0xf4, 0xf0, 0x06, 0x93, 0xd2, 0x03, 0xdb, 0x98, 0x9f, 0xde, 0x02,
	0x21, 0x49, 0xc3, 0xbe, 0x44, 0x7c, 0xe0, 0x3d, 0x09, 0x85, 0xdf, 0x6c, 0x23, 0xc3, 0xf9, 0xb5,
	0x8c, 0xa2, 0xa9, 0xc0, 0xc7, 0x78, 0xec, 0x5b, 0x37, 0x6e, 0xe5, 0xd7, 0x99, 0xd2, 0x4a, 0xbd,
	0xe0, 0x33, 0xc5, 0xe4, 0x32, 0x26, 0x01, 0x11, 0x45, 0xcf, 0x82, 0xb0, 0x27, 0x0b, 0xdd, 0xec,
	0x2f, 0x38, 0xe5, 0x64, 0x0b, 0x2b, 0x49, 0x3a, 0xd5, 0x1f, 0xa7, 0xdf, 0xbb, 0x07, 0x52, 0x8a,
	0xf4, 0xe2, 0x82, 0x6e, 0xb8, 0x19, 0xd3, 0x7b, 0x05, 0xdd, 0x1e, 0xd7, 0x7d, 0xc5, 0x19, 0xba,
	0x4f, 0xa8, 0xcb, 0x2b, 0x5a, 0x77, 0x98, 0x38, 0x91, 0x54, 0x31, 0x52, 0xd7, 0x61, 0x11, 0x09,
	0xeb, 0x21, 0xa9, 0xe4, 0x94, 0x4d, 0xbf, 0x34, 0x8b, 0x86, 0xa8, 0xd3, 0xbd, 0x13, 0x72, 0x36,
	0x97, 0xa5, 0xb2, 0x30, 0x89, 0x93, 0x8a, 0x42, 0xd4, 0xf9, 0xbf, 0x59, 0xb1, 0xa4, 0x88, 0xb8,
	0xe6, 0x8d, 0x5c, 0xbf, 0x4f, 0x43, 0x9b, 0xcf, 0x9c, 0xc4, 0x87, 0x96, 0x69, 0x9f, 0x05, 0xb7,
	0xcb, 0x35, 0x03, 0xc9, 0xd0, 0x70, 0xbd, 0xab, 0x25, 0x1f, 0xf8, 0xfb, 0x39, 0xb2, 0x7a, 0x26,
	0x6c, 0x68, 0x7d, 0xb1, 0x67, 0x1e, 0x01, 0x83, 0x35, 0xef, 0x43, 0xaa, 0x4b, 0x4b, 0xe6, 0xa1,
	0xa8, 0x5a, 0x8d, 0x66, 0x02, 0x90, 0x7e, 0x00, 0xbe, 0xf6, 0x44, 0x0e, 0x6a, 0x1b, 0x5b, 0x09,
	0xe4, 0x1d, 0x21, 0x08, 0x19, 0x4a, 0xd4, 0x4a, 0xa1, 0x9c, 0x28, 0xe3, 0xa5, 0x57, 0x04, 0x5c,
	0x13, 0x95, 0xb1, 0x25, 0x57, 0xd6, 0xf1, 0x7a, 0x64, 0x81, 0xaa, 0x8f, 0xd1, 0x2a, 0x76, 0xf9,
	0x1c, 0x53, 0x6b, 0x51, 0xb5, 0x9e, 0x79, 0x6c, 0xa8, 0x51, 0xab, 0xa0, 0x56, 0x38, 0x65, 0x63,
	0x75, 0xfc, 0xa9, 0xb9, 0x44, 0xcd, 0xea, 0xbe, 0x25, 0x6f, 0xec, 0x7b, 0x58, 0x93, 0xed, 0xf7,
	0x2f, 0xf6, 0x86, 0x23, 0x15, 0x11, 0xb5, 0xf3, 0xe0, 0x6b, 0xf8, 0x0e, 0x49, 0xc1, 0xef, 0xf1,
	0x0e, 0x1a, 0x8e, 0x89, 0x31, 0x6f, 0x2b, 0x14, 0x78, 0x23, 0x46, 0x35, 0xf5, 0x12, 0xc7, 0xa6,
	0x33, 0x28, 0xc7, 0x5e, 0x4e, 0x8c, 0x4d, 0xd9, 0x37, 0x6b, 0xec, 0xb7, 0x38, 0xdd, 0x4c, 0xe3,
	0x56, 0xa6, 0x8c, 0xdb, 0x90, 0x2f, 0x9d, 0x33, 0x51, 0xdc, 0xc1, 0xf4, 0x20, 0xe6, 0x89, 0x29,
	0x36, 0x3f, 0xbe, 0x58, 0xd7, 0x37, 0x48, 0x65, 0x83, 0x29, 0xf3, 0xc5, 0x2c, 0x18, 0x5e, 0x81,
	0x00, 0xa6, 0xf7, 0xfc, 0x73, 0xcf, 0x8a, 0x87, 0x50, 0x0d, 0xf2, 0x99, 0xeb, 0x0f, 0x58, 0xc7,
	0x67, 0x75, 0x05, 0x2a, 0x8c, 0x6b, 0x6a, 0x16, 0x9c, 0xff, 0x96, 0x16, 0x25, 0x9b, 0xaf, 0xe8,
	0x46, 0xcf, 0xb9, 0x0f, 0xae, 0x42, 0x4a, 0xda, 0x5e, 0x26, 0x97, 0x98, 0xd6, 0x27, 0x90, 0x5b,
	0x09, 0x4f, 0x16, 0x3f, 0xd4, 0xba, 0x12, 0xf3, 0xda, 0x14, 0xa0, 0x4e, 0x90, 0xe6, 0x74, 0xeb,
	0x0d, 0x3b, 0x49, 0x9a, 0xb7, 0xfb, 0xb3, 0xfa, 0x37, 0x22, 0xe0, 0xd6, 0x14, 0xd7, 0x8d, 0x5e,
	0xbc, 0x2a, 0x96, 0x8e, 0xfd, 0x30, 0x1a, 0x81, 0x5a, 0xf6, 0xba, 0x23, 0xbc, 0x8a, 0x53, 0xd4,
	0xef, 0xc0, 0x44, 0x38, 0x53, 0x24, 0x94, 0x05, 0xc3, 0x86, 0x6b, 0x0d, 0x71, 0xdf, 0x14, 0x05,
	0x4c, 0xb0, 0x12, 0x54, 0x69, 0x16, 0x94, 0x73, 0x5f, 0x2c, 0x51, 0xa9, 0x29, 0x33, 0x30, 0xa6,
	0xf0, 0x5e, 0x7a, 0x63, 0xce, 0xf9, 0xcf, 0x20, 0xeb, 0x13, 0x5c, 0xff, 0x0e, 0xca, 0xac, 0x20,
	0xbc, 0xe0, 0x23, 0x92, 0x4a, 0x1c, 0x91, 0xc4, 0x0c, 0xef, 0x60, 0x44, 0x1a, 0xf3, 0x5a, 0x04,
	0x9c, 0x4e, 0x7c, 0x94, 0x60, 0x0a, 0x70, 0x1f, 0x0e, 0x12, 0x03, 0x67, 0x5e, 0x38, 0x32, 0xac,
	0xa6, 0xc8, 0x27, 0x5b, 0x2e, 0x04, 0x4f, 0x22, 0x46, 0x92, 0xd5, 0x66, 0x4f, 0x53, 0xde, 0x1f,
	0x8b, 0x22, 0x1e, 0x3e, 0xfe, 0xa2, 0x92, 0x4a, 0x21, 0x20, 0x38, 0x48, 0x06, 0x98, 0xf7, 0x6c,
	0xf2, 0x12, 0x82, 0x9e, 0xc2, 0xd9, 0x54, 0xf3, 0xc9, 0x8c, 0x36, 0x09, 0x1b, 0xab, 0xfe, 0xb7,
	0x1a, 0x0b, 0xea, 0xf0, 0x14, 0xc9, 0x92, 0x59, 0x0e, 0x06, 0xef, 0x88, 0xc5, 0x7d, 0x2f, 0x44,
	0x01, 0xdf, 0x57, 0x61, 0x31, 0x30, 0x54, 0x07, 0x03, 0x19, 0x23, 0x2d, 0xd2, 0xdd, 0x1c, 0xe0,
	0xdc, 0xae, 0x17, 0xff, 0x4c, 0x20, 0x29, 0x2e, 0x56, 0x4b, 0x80, 0x7b, 0x10, 0xc9, 0xaf, 0x4a,
	0x1c, 0x8a, 0x82, 0xce, 0xc9, 0x92, 0xfc, 0x1f, 0x8c, 0xf0, 0x96, 0xdb, 0xb4, 0x38, 0x74, 0xa2,
	0x88, 0x6b, 0xbe, 0xc0, 0x9e, 0xf3, 0xdf, 0xc1, 0x51, 0x30, 0x59, 0x7a, 0x9b, 0x6c, 0x8b, 0x32,
	0x54, 0xab, 0x75, 0xf9, 0x19, 0x06, 0xee, 0x4c, 0x8d, 0x13, 0xc5, 0xa7, 0x4d, 0x15, 0xba, 0x8e,
	0x66, 0x9e, 0x79, 0x51, 0x04, 0x9b, 0x29, 0xf5, 0xe7, 0x5c, 0xd9, 0x66, 0x0a, 0x8a, 0x62, 0xf4,
	0xbc, 0x27, 0xdd, 0x46, 0xf0, 0x3d, 0x47, 0x52, 0xde, 0xe6, 0x9c, 0xdf, 0x00, 0x8a, 0x46, 0x88,
	0x03, 0x22, 0x24, 0xe7, 0xf9, 0xac, 0xeb, 0x14, 0x2b, 0xb5, 0x35, 0x4e, 0x41, 0x90, 0x48, 0x84,
	0x41, 0xf2, 0x52, 0xdb, 0x9a, 0x12, 0x0b, 0x19, 0xdd, 0xec, 0x92, 0xe6, 0x91, 0x61, 0xd9, 0xac,
	0xf2, 0xa2, 0x62, 0x9f, 0x66, 0xe4, 0xc8, 0xcd, 0xd7, 0xb0, 0x9c, 0x9f, 0xeb, 0x1a, 0x32, 0x33,
	0xea, 0x1a, 0x88, 0x2e, 0xcf, 0x1f, 0xc8, 0xcc, 0xa4, 0xce, 0x19, 0x05, 0x83, 0xae, 0xa7, 0x1a,
	0x0b, 0x94, 0xae, 0xfc, 0x11, 0x7e, 0x23, 0xd3, 0x8b, 0xbc, 0xc1, 0x28, 0x41, 0x69, 0xb2, 0x4c,
	0xa2, 0xd8, 0xad, 0x08, 0x4d, 0xfb, 0x8c, 0x2a, 0xa1, 0xa3, 0x7d, 0xbe, 0x27, 0x91, 0x55, 0xcf,
	0xf7, 0x25, 0x9a, 0x16, 0xd1, 0xe9, 0xfe, 0x82, 0xb3, 0x27, 0x4a, 0x1d, 0xf9, 0xc1, 0x4d, 0x59,
	0x7b, 0x61, 0xbe, 0xbf, 0x99, 0x8a, 0x71, 0xdc, 0xf4, 0xaf, 0x71, 0x5a, 0x92, 0x82, 0x23, 0xe2,
	0xb1, 0xe8, 0xe5, 0x25, 0x4a, 0xef, 0x12, 0x36, 0x58, 0x3c, 0x7a, 0x79, 0x89, 0x71, 0x94, 0x39,
	0x92, 0x9e, 0x61, 0x8e, 0x38, 0xef, 0x0a, 0xb1, 0x1b, 0x8c, 0xe0, 0x54, 0x11, 0x3f, 0xc1, 0x49,
	0x18, 0xf9, 0x58, 0x8f, 0x96, 0x52, 0x35, 0x4e, 0x8a, 0x3e, 0x5c, 0x44, 0xd3, 0xd4, 0xd0, 0x9c,
	0x1e, 0x91, 0xf2, 0x21, 0x99, 0xb1, 0xb1, 0x46, 0x84, 0x2d, 0x25, 0x4f, 0x94, 0x9b, 0xe4, 0x30,
	0xab, 0xa2, 0xa8, 0x3d, 0xb9, 0xea, 0x57, 0xc4, 0x0a, 0x41, 0x3c, 0xf6, 0xfb, 0x7d, 0x58, 0xe0,
	0x87, 0x94, 0x0a, 0x4b, 0x69, 0x1b, 0xeb, 0x5f, 0xa5, 0xc8, 0xd3, 0xd3, 0xdf, 0x88, 0x9b, 0x6f,
	0xdd, 0xa0, 0x8e, 0x47, 0x52, 0x9a, 0x4c, 0xdc, 0x78, 0x8f, 0x89, 0x19, 0xfa, 0xb0, 0x09, 0xaa,
	0x98, 0x76, 0xd0, 0x57, 0x6c, 0x83, 0x99, 0xde, 0xe1, 0xf0, 0x91, 0xcc, 0x3a, 0x73, 0xa5, 0xea,
	0xbf, 0xce, 0x93, 0x97, 0x78, 0x49, 0x34, 0x5e, 0x46, 0x7e, 0xdb, 0x1a, 0xcc, 0xcc, 0x63, 0x0d,
	0x66, 0xe7, 0xb1, 0x06, 0x73, 0x2f, 0xb5, 0x06, 0xf3, 0x33, 0xad, 0xc1, 0xf8, 0x87, 0x5e, 0x16,
	0xd4, 0x69, 0x66, 0x0b, 0xb1, 0x30, 0xd3, 0x42, 0xb4, 0xbe, 0x93, 0x58, 0x7c, 0xd1, 0x97, 0x4c,
	0x17, 0x86, 0x7c, 0x94, 0xe5, 0xe5, 0x6c, 0x9b, 0x6a, 0xe6, 0x88, 0xdf, 0x55, 0x09, 0x5b, 0xb2,
	0x63, 0x4a, 0x33, 0x13, 0xd2, 0x71, 0xb3, 0x74, 0xf1, 0xc5, 0x66, 0x29, 0x9c, 0x65, 0x3f, 0xda,
	0xf5, 0x9e, 0xd1, 0xe7, 0x90, 0xca, 0x4a, 0x1d, 0xc6, 0xec, 0xd1, 0xa5, 0xa9, 0xf6, 0xe8, 0xb2,
	0xb2, 0x47, 0x07, 0xde, 0xb3, 0xba, 0x61, 0x8b, 0x8a, 0xbe, 0xc2, 0x3a, 0x1c, 0x1e, 0x84, 0x7c,
	0x79, 0xbb, 0x18, 0x33, 0x5b, 0xa9, 0xfe, 0xb1, 0xaa, 0x72, 0xc4, 0x03, 0x3e, 0x00, 0xd7, 0x12,
	0x29, 0x5d, 0xeb, 0x38, 0x61, 0x99, 0x26, 0x5a, 0x05, 0xb4, 0x87, 0xd7, 0x67, 0x5d, 0xfd, 0xa9,
	0x7e, 0x93, 0xc3, 0xc3, 0x0d, 0x1d, 0x24, 0xb9, 0x91, 0x30, 0x4d, 0xb1, 0x36, 0x97, 0xd3, 0x75,
	0x7c, 0xc0, 0xee, 0x88, 0x12, 0xf8, 0x2e, 0x98, 0x92, 0xa3, 0x91, 0x6f, 0xd2, 0xc8, 0x15, 0x0d,
	0xfe, 0x88, 0xdf, 0xc5, 0x03, 0x2f, 0xb7, 0x66, 0x06, 0x5e, 0x7e, 0x9a, 0xa2, 0xe2, 0x70, 0xda,
	0xfa, 0x96, 0xdb, 0x7d, 0x3a, 0x7f, 0x25, 0xdd, 0x89, 0xc7, 0xda, 0x23, 0xf6, 0xf9, 0x58, 0xeb,
	0x6b, 0x25, 0x89, 0x2f, 0xca, 0x66, 0xa9, 0x09, 0x23, 0x59, 0xf4, 0x11, 0x3f, 0xe2, 0x9a, 0x1c,
	0x7d, 0x66, 0xe5, 0x97, 0x29, 0x2a, 0x1b, 0xbf, 0x2c, 0x0a, 0x9a, 0x8d, 0xd3, 0x5f, 0x1c, 0x1b,
	0x67, 0x67, 0xb3, 0xb1, 0xf3, 0x3d, 0x8a, 0x77, 0x5b, 0x9f, 0x9f, 0x9c, 0x0f, 0xcd, 0x6b, 0x54,
	0x62, 0xb3, 0x1b, 0xfb, 0x1e, 0x32, 0x8d, 0x15, 0xfb, 0x94, 0xe5, 0xe7, 0x18, 0xeb, 0x23, 0xaa,
	0x7f, 0x4f, 0x7c, 0xe3, 0x72, 0xbe, 0xc2, 0xbf, 0xff, 0x9a, 0xa2, 0x02, 0xf7, 0xab, 0xf4, 0x9d,
	0x9a, 0x5b, 0x88, 0x7b, 0xfa, 0x99, 0x19, 0x9e, 0x7e, 0xd6, 0x5c, 0xb6, 0x33, 0xc1, 0xc3, 0xf8,
	0xbd, 0x85, 0xbc, 0xac, 0x75, 0x43, 0x6d, 0x6b, 0x7f, 0x20, 0x74, 0x6e, 0xce, 0x18, 0x5a, 0x9f,
	0x1b, 0x9d, 0x22, 0x17, 0x9d, 0x6f, 0x93, 0x02, 0xbe, 0xf4, 0xd0, 0xf2, 0x63, 0x5d, 0xf1, 0x4f,
	0x83, 0xce, 0xd7, 0xf3, 0x53, 0xfa, 0x58, 0xd7, 0x15, 0x7a, 0xda, 0x01, 0x90, 0x74, 0xbc, 0x42,
	0x35, 0x23, 0x0b, 0xf0, 0xaa, 0x14, 0xf9, 0x8a, 0x7f, 0x77, 0x74, 0x3e, 0xac, 0xfe, 0x39, 0xa5,
	0x80, 0xaf, 0xd4, 0x37, 0x1e, 0xab, 0x99, 0x8a, 0xd9, 0x26, 0x63, 0x96, 0xf8, 0xb0, 0xe9, 0xdc,
	0x59, 0x99, 0x08, 0x25, 0x2e, 0xbb, 0x13, 0x0f, 0x19, 0xcf, 0x2b, 0x8d, 0x04, 0xf4, 0x1b, 0x04,
	0xcf, 0x3a, 0x66, 0x30, 0xbe, 0xb3, 0x63, 0x7f, 0x41, 0xf1, 0x8a, 0xa5, 0x77, 0xbf, 0xe0, 0x20,
	0xe1, 0xe5, 0x47, 0x4a, 0x14, 0xcf, 0xea, 0xe8, 0x73, 0x66, 0x5a, 0x20, 0x5d, 0xd5, 0x21, 0xc7,
	0x4a, 0xf5, 0x66, 0x19, 0x05, 0xf4, 0x55, 0x1a, 0xef, 0x33, 0xf3, 0xbd, 0xc7, 0xf9, 0xf8, 0xe0,
	0x31, 0x89, 0xe0, 0x4b, 0xf6, 0x32, 0x7e, 0x41, 0x7a, 0x96, 0x5f, 0xe0, 0xb8, 0xc4, 0xf6, 0xf1,
	0xaf, 0x32, 0xce, 0x6d, 0xf3, 0xe9, 0x10, 0x4c, 0xfa, 0x45, 0x21, 0x98, 0x1f, 0xe0, 0xbd, 0x8d,
	0xb8, 0x8e, 0x04, 0xa1, 0x63, 0x51, 0x10, 0xcc, 0x50, 0xe9, 0x20, 0xdd, 0x12, 0xcb, 0xa8, 0x6c,
	0x99, 0xdf, 0x1b, 0x3a, 0x6a, 0xa7, 0x5f, 0x58, 0x63, 0x48, 0x16, 0xfe, 0x83, 0x94, 0x58, 0x50,
	0x2a, 0x15, 0x6b, 0x17, 0xfd, 0x21, 0x89, 0xde, 0x94, 0x0a, 0x93, 0xea, 0x30, 0xa2, 0x4e, 0x1c,
	0x0c, 0x6d, 0x47, 0x2b, 0x6d, 0xc9, 0x44, 0x4c, 0x7a, 0x65, 0xed, 0xbc, 0xf7, 0x45, 0x23, 0x88,
	0x46, 0xd8, 0x9a, 0x53, 0x92, 0x92, 0xc2, 0x5f, 0x6d, 0xaf, 0xef, 0x9f, 0x7b, 0x5a, 0x0c, 0xe2,
	0x1d, 0x0d, 0x6a, 0x7f, 0x30, 0xbe, 0x90, 0x22, 0xba, 0xa1, 0x3f, 0x6c, 0x5f, 0x13, 0x15, 0xf5,
	0x4e, 0x97, 0x55, 0x17, 0x62, 0x6f, 0x26, 0x53, 0xe6, 0x63, 0xb1, 0x18, 0x0b, 0x8d, 0xad, 0x62,
	0xd9, 0xa4, 0xa9, 0x94, 0xb5, 0xdc, 0xfd, 0x4a, 0xac, 0x7a, 0x15, 0x4b, 0x6e, 0xe3, 0x6e, 0x5e,
	0x9a, 0x2a, 0x99, 0xc1, 0xd2, 0x38, 0xd2, 0xdf, 0x1e, 0xcd, 0xcc, 0xe4, 0x84, 0xa7, 0x3c, 0xad,
	0xda, 0xb6, 0xea, 0x7b, 0x62, 0x69, 0x10, 0x84, 0x67, 0x6e, 0x5f, 0xb5, 0x48, 0x6e, 0xb0, 0x3f,
	0x7d, 0x12, 0xbf, 0x91, 0xcc, 0x71, 0x93, 0x59, 0x3c, 0x61, 0x43, 0x3b, 0x3f, 0x4b, 0x8b, 0xe5,
	0x64, 0xbc, 0x10, 0xe8, 0x1b, 0x9a, 0xeb, 0x75, 0x0d, 0x1d, 0x3e, 0xc0, 0x72, 0x85, 0x18, 0x69,
	0xd3, 0xea, 0x14, 0x1e, 0x59, 0x54, 0xd5, 0x6e, 0x73, 0x57, 0x5f, 0x6f, 0x69, 0xe8, 0xc3, 0x99,
	0xe0, 0xb7, 0x60, 0x64, 0xea, 0x4e, 0xb9, 0xbd, 0x61, 0x67, 0x87, 0xa9, 0x2e, 0xee, 0x60, 0x68,
	0x76, 0x11, 0x3f, 0xa2, 0x43, 0x16, 0xb2, 0xd9, 0x3e, 0x60, 0x11, 0x40, 0x15, 0xa4, 0x02, 0x34,
	0x1d, 0xae, 0xb7, 0xac, 0xb0, 0xb9, 0x6e, 0x6d, 0x63, 0xf5, 0xa6, 0x30, 0xc5, 0x04, 0x60, 0xa8,
	0x68, 0xb4, 0xf8, 0x36, 0xc0, 0xdf, 0x00, 0x15, 0x92, 0x91, 0xcd, 0x18, 0x4a, 0xa9, 0xa9, 0x73,
	0xe9, 0xc0, 0x81, 0xdd, 0xfa, 0x91, 0xa5, 0xcf, 0xe3, 0x28, 0xe8, 0xfa, 0xfe, 0x78, 0xfb, 0x47,
	0x46, 0xb3, 0x5b, 0x0b, 0xce, 0xab, 0x41, 0x4c, 0xdb, 0x21, 0xea, 0x8f, 0x99, 0x84, 0xd0, 0x75,
	0x12, 0x0a, 0xb2, 0xa8, 0x20, 0x65, 0x21, 0xd6, 0xe1, 0xfb, 0x92, 0x08, 0x56, 0xd3, 0x07, 0x32,
	0x77, 0x60, 0x35, 0x7d, 0x68, 0x32, 0xe5, 0x67, 0x72, 0x4f, 0x0f, 0xf9, 0xb3, 0xcb, 0xe5, 0x29,
	0x5b, 0x88, 0xf3, 0x2f, 0x4d, 0x27, 0xed, 0xb2, 0xfd, 0x71, 0x00, 0xfa, 0x06, 0x5b, 0xc5, 0x5c,
	0x25, 0x71, 0xd1, 0x9c, 0x80, 0xa6, 0x15, 0xf9, 0xd9, 0xbf, 0xca, 0xc4, 0xd7, 0x5f, 0xaf, 0xa2,
	0xfd, 0xfe, 0x85, 0xbc, 0x1b, 0x6a, 0xbe, 0xf0, 0xfa, 0xf7, 0xea, 0xaf, 0xae, 0x7a, 0xa2, 0x68,
	0xdc, 0xb4, 0x82, 0xc8, 0x1e, 0xd4, 0xb7, 0xb7, 0x2b, 0x5f, 0xaa, 0x16, 0x45, 0xee, 0x60, 0x7d,
	0xab, 0xdd, 0xac, 0xa4, 0x60, 0x8f, 0xf3, 0x07, 0x8f, 0xeb, 0xfb, 0xcd, 0x76, 0x25, 0x4d, 0xcd,
	0x8f, 0xb7, 0x76, 0xd7, 0x2a, 0x19, 0x6a, 0xde, 0xde, 0xda, 0xd8, 0xdc, 0xaf, 0x64, 0xa9, 0x79,
	0xad, 0xde, 0x7e, 0x58, 0xc9, 0xd1, 0xcf, 0xdd, 0xbd, 0xdd, 0x66, 0x25, 0x4f, 0x10, 0x80, 0x6d,
	0x38, 0xaa, 0x2c, 0xac, 0xfe, 0xdb, 0x94, 0x9c, 0x87, 0x4a, 0x24, 0x17, 0x44, 0x46, 0x4f, 0xb3,
	0x79, 0xb0, 0x53, 0xdf, 0x95, 0xd3, 0xec, 0xae, 0x35, 0xeb, 0x6b, 0x30, 0x0d, 0xfc, 0xde, 0x79,
	0xb2, 0xbf, 0xb9, 0xd5, 0x80, 0x79, 0x00, 0xe4, 0x41, 0xb3, 0xde, 0xc1, 0x69, 0x4a, 0x62, 0x61,
	0x67, 0x6f, 0xb7, 0x83, 0xa8, 0xe0, 0xfd, 0xbc, 0xfc, 0x76, 0x73, 0xa3, 0x09, 0xb8, 0xd0, 0x4c,
	0x6b, 0xed, 0xfa, 0xc6, 0xde, 0x6e, 0x65, 0x01, 0x76, 0x6f, 0xb1, 0xd3, 0x68, 0x37, 0xeb, 0x3b,
	0x8d, 0xcd, 0x66, 0xb3, 0xd3, 0xac, 0x60, 0xa4, 0xbe, 0xd4, 0x7c, 0xb4, 0xb7, 0xfd, 0xa8, 0xd9,
	0xaa, 0xb7, 0xf7, 0x3b, 0x95, 0xe2, 0xea, 0x43, 0xb1, 0x18, 0xfb, 0x93, 0x23, 0x8b, 0xa2, 0xb0,
	0xd5, 0x59, 0x6f, 0x6f, 0xe1, 0x60, 0x29, 0xd0, 0xd8, 0x45, 0xfe, 0xbd, 0x77, 0xb0, 0x0f, 0xb8,
	0xc0, 0x4b, 0x7e, 0xdc, 0xda, 0x05, 0x6c, 0x60, 0x74, 0x7e, 0xda, 0x6c, 0x6e, 0xb7, 0x00, 0x8f,
	0xec, 0x2a, 0x18, 0x0a, 0xd7, 0xa6, 0x7d, 0x5f, 0xb1, 0x2c, 0xbf, 0x89, 0x82, 0x3c, 0x03, 0x2b,
	0x55, 0x8f, 0xa8, 0x29, 0x79, 0x12, 0xfd, 0xc5, 0x3d, 0x98, 0x44, 0x3e, 0x52, 0xd9, 0x07, 0xcc,
	0xb2, 0xc8, 0x19, 0x3f, 0xfc, 0x6c, 0x1e, 0x2c, 0x1b, 0xf0, 0x57, 0x26, 0x00, 0x68, 0x94, 0x0a,
	0xba, 0xb2, 0xc2, 0x7c, 0xfd, 0x0e, 0x96, 0x2f, 0x01, 0xa4, 0x98, 0x03, 0x6a, 0x9f, 0xa0, 0x29,
	0x1b, 0xbf, 0xbd, 0x87, 0xc4, 0x6b, 0x3f, 0x38, 0xdc, 0xc5, 0x09, 0xbe, 0x84, 0x3d, 0xe0, 0xe1,
	0x41, 0x10, 0x45, 0x6b, 0xc0, 0x4e, 0x80, 0xcf, 0x0a, 0x78, 0x2d, 0xd0, 0x40, 0xe0, 0xeb, 0x20,
	0x5c, 0x01, 0x27, 0x6e, 0xda, 0x0d, 0x78, 0xa4, 0xcd, 0x16, 0xe0, 0xc5, 0xdd, 0xf0, 0x06, 0x26,
	0x75, 0xcb, 0xae, 0x7e, 0x0c, 0xa4, 0x8d, 0x7d, 0xc9, 0x25, 0xff, 0x49, 0xe7, 0x70, 0xb7, 0xf9,
	0x98, 0xa7, 0x80, 0xdf, 0x9f, 0x1c, 0x34, 0x3b, 0xfb, 0x5b, 0xbb, 0x1b, 0x30, 0x05, 0x60, 0x0d,
	0x0d, 0x8d, 0xed, 0x66, 0xbd, 0xdd, 0x84, 0x4d, 0x5e, 0x6d, 0x01, 0x47, 0xe8, 0x8b, 0xa0, 0xc0,
	0x79, 0x3b, 0x30, 0x0b, 0xf4, 0xab, 0x52, 0x94, 0x7f, 0xe4, 0x35, 0x9f, 0xa3, 0xe5, 0x05, 0xfe,
	0x3b, 0x74, 0x85, 0xb1, 0xd8, 0x9e, 0x6f, 0x0e, 0xce, 0xfd, 0x10, 0x70, 0x83, 0xc5, 0xc8, 0x3b,
	0xa0, 0x80, 0x15, 0x72, 0x53, 0xbf, 0x0f, 0xd8, 0x44, 0x62, 0x29, 0xf1, 0x6d, 0x21, 0x44, 0xe8,
	0x90, 0xd8, 0xf1, 0x4b, 0x34, 0xff, 0xe1, 0x3e, 0x70, 0xc6, 0xfe, 0x01, 0xf1, 0x35, 0x8c, 0xf1,
	0xc9, 0x61, 0x73, 0xb7, 0xb9, 0xf3, 0x84, 0x39, 0x0e, 0x5f, 0xd6, 0x5b, 0xcc, 0x71, 0x9f, 0x1c,
	0x3e, 0x6c, 0x3e, 0x01, 0xd2, 0x53, 0x1f, 0x5e, 0x03, 0x30, 0x17, 0x0a, 0x82, 0x32, 0xf4, 0xf9,
	0xb4, 0xb1, 0x5d, 0xdf, 0xa9, 0x53, 0x53, 0x7e, 0xf5, 0x97, 0xc8, 0xd9, 0xfa, 0x13, 0x48, 0xb0,
	0x73, 0x1b, 0x9d, 0xc3, 0xe6, 0x4e, 0x6b, 0xff, 0x09, 0x6f, 0x3a, 0x3c, 0x75, 0xf6, 0xeb, 0xed,
	0xc3, 0x7b, 0xbc, 0xe9, 0xea, 0xf1, 0x3e, 0x6f, 0xba, 0x7a, 0x7c, 0x1f, 0xa6, 0xb5, 0x1e, 0x3f,
	0x80, 0xa9, 0xad, 0xc7, 0x0f, 0x2b, 0x39, 0xfb, 0xf1, 0xdb, 0xcc, 0xf1, 0xf0, 0x88, 0x48, 0x2e,
	0x20, 0x75, 0x36, 0x3a, 0x06, 0x4b, 0xf4, 0xc4, 0x97, 0x10, 0x09, 0x0b, 0xcd, 0xe2, 0xea, 0xdb,
	0x80, 0xa5, 0xba, 0x4b, 0x89, 0x83, 0x35, 0xf6, 0x81, 0x2e, 0xed, 0x9d, 0x3a, 0x9e, 0x42, 0x40,
	0x1a, 0x1e, 0x9b, 0xdb, 0x5b, 0xfb, 0x40, 0x97, 0xd5, 0x67, 0x32, 0x63, 0x62, 0x3e, 0xf7, 0x83,
	0xab, 0x06, 0xe6, 0xd8, 0xdb, 0xeb, 0xec, 0x2b, 0x62, 0xc2, 0x14, 0xba, 0x09, 0xce, 0x24, 0xe0,
	0x91, 0xc2, 0xb3, 0xa1, 0xdb, 0x9a, 0x9f, 0xb6, 0x60, 0x85, 0x37, 0xc4, 0x8a, 0x6e, 0x59, 0x6b,
	0xef, 0xb5, 0xda, 0x20, 0x46, 0x60, 0xa5, 0xc9, 0xe6, 0xd6, 0xf6, 0x41, 0x07, 0xb6, 0xaf, 0x29,
	0x8f, 0x88, 0x9a, 0xb3, 0xc9, 0x6b, 0x82, 0x45, 0xef, 0xb5, 0x91, 0x9a, 0x56, 0x53, 0xf3, 0x51,
	0x73, 0x77, 0x1f, 0xa6, 0x04, 0x34, 0x4c, 0x13, 0x1e, 0x71, 0xe0, 0xab, 0x77, 0x90, 0xaf, 0xcc,
	0x25, 0xab, 0x52, 0xbd, 0xb1, 0xb9, 0x05, 0xf0, 0x3b, 0xdc, 0x03, 0x96, 0xbe, 0x56, 0xdf, 0xda,
	0x7e, 0xb2, 0x5f, 0xef, 0x3c, 0x04, 0xe0, 0xdf, 0xc9, 0x80, 0x2c, 0xb0, 0xae, 0x75, 0xe1, 0x8e,
	0x03, 0x91, 0x37, 0x9a, 0x87, 0xad, 0x7a, 0xa7, 0xc3, 0x5c, 0xcb, 0x07, 0xfe, 0x70, 0x63, 0x6f,
	0x9f, 0x37, 0xad, 0x73, 0xb0, 0x03, 0x4b, 0x06, 0xbd, 0xc9, 0x27, 0x42, 0x3e, 0xb6, 0x81, 0xad,
	0xf9, 0xb0, 0xea, 0xf7, 0x87, 0x1f, 0x31, 0xcb, 0x58, 0x10, 0xd0, 0x94, 0x47, 0xce, 0x6b, 0xed,
	0x3d, 0x6e, 0xb6, 0x0f, 0x5a, 0xbc, 0x7b, 0xf2, 0xe1, 0x70, 0xa7, 0xfe, 0x29, 0xec, 0x1e, 0x6c,
	0xad, 0x5c, 0x4b, 0x11, 0x21, 0x37, 0x40, 0x52, 0x36, 0x61, 0xfd, 0x82, 0x25, 0xe4, 0xd6, 0x3e,
	0x30, 0x4b, 0x49, 0xff, 0xfe, 0xa0, 0xb2, 0xa8, 0x7f, 0x7f, 0x58, 0xc1, 0xb0, 0x76, 0x89, 0xb6,
	0x83, 0x89, 0x52, 0x59, 0x22, 0xf1, 0xd5, 0x92, 0x4f, 0xcb, 0xb8, 0x1a, 0x22, 0xdd, 0x61, 0x6b,
	0xbb, 0xfe, 0xa4, 0x52, 0x21, 0x46, 0xd8, 0xda, 0x7f, 0xc2, 0x8b, 0x5d, 0xe1, 0xd7, 0x38, 0x35,
	0xa1, 0x52, 0x05, 0x3b, 0x69, 0xb9, 0xbe, 0x2b, 0xc7, 0x3a, 0x24, 0xb2, 0x55, 0xae, 0xe1, 0xee,
	0x31, 0x45, 0x5a, 0x7b, 0x5b, 0xbb, 0xaa, 0xf9, 0xba, 0x91, 0x8c, 0xb2, 0xe5, 0x06, 0xae, 0x5c,
	0xad, 0x8c, 0x9b, 0x6e, 0x22, 0x90, 0x9c, 0x80, 0x5b, 0x6e, 0xe1, 0x14, 0x86, 0x5e, 0xdc, 0x58,
	0xc3, 0x29, 0x6c, 0x9a, 0x71, 0xf3, 0x2b, 0xc4, 0x37, 0x66, 0xfb, 0x65, 0xf3, 0xab, 0xab, 0xef,
	0x8a, 0xc5, 0x58, 0x21, 0x37, 0xaa, 0x89, 0xfd, 0x43, 0x24, 0x09, 0x8b, 0x0e, 0x78, 0x58, 0x07,
	0xed, 0x40, 0x0c, 0x90, 0x5e, 0xfd, 0x0f, 0x29, 0xc0, 0xc1, 0xbe, 0x18, 0x81, 0xf4, 0xb6, 0xd8,
	0xba, 0x29, 0xcf, 0x85, 0xa4, 0x59, 0x8a, 0xd9, 0x8e, 0x67, 0xe4, 0xa6, 0x34, 0x83, 0x6d, 0x00,
	0x63, 0xd5, 0xd5, 0x21, 0xca, 0x30, 0x18, 0xb7, 0x31, 0x77, 0x92, 0x5a, 0x6c, 0x1e, 0x3e, 0x38,
	0x78, 0x52, 0xc1, 0x6c, 0xcf, 0x02, 0xfc, 0xdc, 0xdb, 0x05, 0x46, 0xcf, 0xf3, 0x03, 0x71, 0x19,
	0xc8, 0xea, 0x4d, 0xa0, 0xb9, 0x29, 0xa7, 0xa7, 0x91, 0x15, 0xc3, 0xe1, 0x60, 0xbc, 0x04, 0x1a,
	0x46, 0x36, 0xd0, 0xb1, 0xb2, 0x1a, 0xe4, 0x74, 0x99, 0xd5, 0x0f, 0xc5, 0x72, 0xa2, 0x78, 0x08,
	0xe9, 0x5d, 0x5f, 0x5b, 0x3b, 0x5c, 0xaf, 0x3f, 0xda, 0x6b, 0xd3, 0xe9, 0xc6, 0x96, 0xb5, 0xe6,
	0xb6, 0x69, 0x49, 0xaf, 0x3e, 0x01, 0x7a, 0x60, 0x9a, 0xaa, 0xc1, 0x89, 0x37, 0x14, 0xc5, 0x0d,
	0xd8, 0x59, 0x86, 0x95, 0xa8, 0xd0, 0x56, 0xc3, 0xcc, 0x68, 0x20, 0x20, 0x5d, 0x33, 0x04, 0xb5,
	0xb9, 0xd5, 0x62, 0xad, 0x0c, 0x6b, 0xd9, 0xd9, 0xda, 0xad, 0x57, 0x30, 0xa3, 0x56, 0x68, 0xd7,
	0x77, 0x1f, 0xd2, 0xf9, 0xcf, 0xff, 0x6d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0x79, 0xe4, 0x30,
	0x4e, 0x6d, 0x00, 0x00,
}
