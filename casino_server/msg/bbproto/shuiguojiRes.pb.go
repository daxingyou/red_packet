// Code generated by protoc-gen-go.
// source: shuiguojiRes.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EUnitType from base.proto

// Ignoring public import of EUnitRace from base.proto

type ShuiguojiRes struct {
	ProtoHeader *ProtoHeader `protobuf:"bytes,1,opt,name=ProtoHeader" json:"ProtoHeader,omitempty"`
	// 押注
	ScoresBet *int32 `protobuf:"varint,2,opt,name=scoresBet" json:"scoresBet,omitempty"`
	ScoresWin *int32 `protobuf:"varint,3,opt,name=scoresWin" json:"scoresWin,omitempty"`
	// 押注的分数
	ScoresApple         *int32 `protobuf:"varint,4,opt,name=scoresApple" json:"scoresApple,omitempty"`
	ScoresOrange        *int32 `protobuf:"varint,5,opt,name=scoresOrange" json:"scoresOrange,omitempty"`
	ScoresMango         *int32 `protobuf:"varint,6,opt,name=scoresMango" json:"scoresMango,omitempty"`
	ScoresBell          *int32 `protobuf:"varint,7,opt,name=scoresBell" json:"scoresBell,omitempty"`
	ScoresWatermelon    *int32 `protobuf:"varint,8,opt,name=scoresWatermelon" json:"scoresWatermelon,omitempty"`
	ScoresStar          *int32 `protobuf:"varint,9,opt,name=scoresStar" json:"scoresStar,omitempty"`
	Scores77            *int32 `protobuf:"varint,10,opt,name=scores77" json:"scores77,omitempty"`
	ScoresBar           *int32 `protobuf:"varint,11,opt,name=scoresBar" json:"scoresBar,omitempty"`
	WinApple            *int32 `protobuf:"varint,12,opt,name=winApple" json:"winApple,omitempty"`
	WinOrange           *int32 `protobuf:"varint,13,opt,name=winOrange" json:"winOrange,omitempty"`
	WinMango            *int32 `protobuf:"varint,14,opt,name=winMango" json:"winMango,omitempty"`
	WinBell             *int32 `protobuf:"varint,15,opt,name=winBell" json:"winBell,omitempty"`
	WinWatermelon       *int32 `protobuf:"varint,16,opt,name=winWatermelon" json:"winWatermelon,omitempty"`
	WinStar             *int32 `protobuf:"varint,17,opt,name=winStar" json:"winStar,omitempty"`
	Win77               *int32 `protobuf:"varint,18,opt,name=win77" json:"win77,omitempty"`
	WinBar              *int32 `protobuf:"varint,19,opt,name=winBar" json:"winBar,omitempty"`
	WinAppleLittle      *int32 `protobuf:"varint,20,opt,name=winAppleLittle" json:"winAppleLittle,omitempty"`
	WinOrangeLittle     *int32 `protobuf:"varint,21,opt,name=winOrangeLittle" json:"winOrangeLittle,omitempty"`
	WinMangoLittle      *int32 `protobuf:"varint,22,opt,name=winMangoLittle" json:"winMangoLittle,omitempty"`
	WinBellLittle       *int32 `protobuf:"varint,23,opt,name=winBellLittle" json:"winBellLittle,omitempty"`
	WinWatermelonLittle *int32 `protobuf:"varint,24,opt,name=winWatermelonLittle" json:"winWatermelonLittle,omitempty"`
	WinStarLittle       *int32 `protobuf:"varint,25,opt,name=winStarLittle" json:"winStarLittle,omitempty"`
	Win77Little         *int32 `protobuf:"varint,26,opt,name=win77Little" json:"win77Little,omitempty"`
	WinBarLittle        *int32 `protobuf:"varint,27,opt,name=winBarLittle" json:"winBarLittle,omitempty"`
	WinType             *int32 `protobuf:"varint,28,opt,name=winType" json:"winType,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *ShuiguojiRes) Reset()                    { *m = ShuiguojiRes{} }
func (m *ShuiguojiRes) String() string            { return proto.CompactTextString(m) }
func (*ShuiguojiRes) ProtoMessage()               {}
func (*ShuiguojiRes) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *ShuiguojiRes) GetProtoHeader() *ProtoHeader {
	if m != nil {
		return m.ProtoHeader
	}
	return nil
}

func (m *ShuiguojiRes) GetScoresBet() int32 {
	if m != nil && m.ScoresBet != nil {
		return *m.ScoresBet
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresWin() int32 {
	if m != nil && m.ScoresWin != nil {
		return *m.ScoresWin
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresApple() int32 {
	if m != nil && m.ScoresApple != nil {
		return *m.ScoresApple
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresOrange() int32 {
	if m != nil && m.ScoresOrange != nil {
		return *m.ScoresOrange
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresMango() int32 {
	if m != nil && m.ScoresMango != nil {
		return *m.ScoresMango
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresBell() int32 {
	if m != nil && m.ScoresBell != nil {
		return *m.ScoresBell
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresWatermelon() int32 {
	if m != nil && m.ScoresWatermelon != nil {
		return *m.ScoresWatermelon
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresStar() int32 {
	if m != nil && m.ScoresStar != nil {
		return *m.ScoresStar
	}
	return 0
}

func (m *ShuiguojiRes) GetScores77() int32 {
	if m != nil && m.Scores77 != nil {
		return *m.Scores77
	}
	return 0
}

func (m *ShuiguojiRes) GetScoresBar() int32 {
	if m != nil && m.ScoresBar != nil {
		return *m.ScoresBar
	}
	return 0
}

func (m *ShuiguojiRes) GetWinApple() int32 {
	if m != nil && m.WinApple != nil {
		return *m.WinApple
	}
	return 0
}

func (m *ShuiguojiRes) GetWinOrange() int32 {
	if m != nil && m.WinOrange != nil {
		return *m.WinOrange
	}
	return 0
}

func (m *ShuiguojiRes) GetWinMango() int32 {
	if m != nil && m.WinMango != nil {
		return *m.WinMango
	}
	return 0
}

func (m *ShuiguojiRes) GetWinBell() int32 {
	if m != nil && m.WinBell != nil {
		return *m.WinBell
	}
	return 0
}

func (m *ShuiguojiRes) GetWinWatermelon() int32 {
	if m != nil && m.WinWatermelon != nil {
		return *m.WinWatermelon
	}
	return 0
}

func (m *ShuiguojiRes) GetWinStar() int32 {
	if m != nil && m.WinStar != nil {
		return *m.WinStar
	}
	return 0
}

func (m *ShuiguojiRes) GetWin77() int32 {
	if m != nil && m.Win77 != nil {
		return *m.Win77
	}
	return 0
}

func (m *ShuiguojiRes) GetWinBar() int32 {
	if m != nil && m.WinBar != nil {
		return *m.WinBar
	}
	return 0
}

func (m *ShuiguojiRes) GetWinAppleLittle() int32 {
	if m != nil && m.WinAppleLittle != nil {
		return *m.WinAppleLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinOrangeLittle() int32 {
	if m != nil && m.WinOrangeLittle != nil {
		return *m.WinOrangeLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinMangoLittle() int32 {
	if m != nil && m.WinMangoLittle != nil {
		return *m.WinMangoLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinBellLittle() int32 {
	if m != nil && m.WinBellLittle != nil {
		return *m.WinBellLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinWatermelonLittle() int32 {
	if m != nil && m.WinWatermelonLittle != nil {
		return *m.WinWatermelonLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinStarLittle() int32 {
	if m != nil && m.WinStarLittle != nil {
		return *m.WinStarLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWin77Little() int32 {
	if m != nil && m.Win77Little != nil {
		return *m.Win77Little
	}
	return 0
}

func (m *ShuiguojiRes) GetWinBarLittle() int32 {
	if m != nil && m.WinBarLittle != nil {
		return *m.WinBarLittle
	}
	return 0
}

func (m *ShuiguojiRes) GetWinType() int32 {
	if m != nil && m.WinType != nil {
		return *m.WinType
	}
	return 0
}

func init() {
	proto.RegisterType((*ShuiguojiRes)(nil), "bbproto.ShuiguojiRes")
}

var fileDescriptor9 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0xd1, 0x3d, 0x4f, 0xf3, 0x30,
	0x10, 0xc0, 0xf1, 0xa7, 0x0f, 0x7d, 0xbd, 0xf4, 0xd5, 0x49, 0xdb, 0xa3, 0x65, 0x40, 0x4c, 0xb0,
	0x64, 0x60, 0xe9, 0x4c, 0x27, 0x06, 0x10, 0x15, 0x45, 0x62, 0x4e, 0xc0, 0x2a, 0x41, 0x21, 0x8e,
	0x1c, 0x57, 0x88, 0x0f, 0xcc, 0xf7, 0xc0, 0x39, 0xdb, 0xe0, 0x6c, 0xcd, 0xef, 0xce, 0xcd, 0x3f,
	0x32, 0xb0, 0xea, 0xed, 0x98, 0x1d, 0x8e, 0xe2, 0x3d, 0x7b, 0xe4, 0x55, 0x5c, 0x4a, 0xa1, 0x04,
	0xeb, 0xa5, 0x29, 0xfd, 0x58, 0x41, 0x9a, 0x54, 0xdc, 0xe0, 0xc5, 0x77, 0x1b, 0x86, 0x7b, 0x6f,
	0x97, 0x5d, 0x41, 0xb0, 0xab, 0x27, 0xb7, 0x3c, 0x79, 0xe5, 0x12, 0x5b, 0xe7, 0xad, 0xcb, 0xe0,
	0x3a, 0x8a, 0xed, 0xd9, 0xd8, 0x9b, 0xb1, 0x19, 0x0c, 0xaa, 0x17, 0x21, 0x79, 0xb5, 0xe5, 0x0a,
	0xff, 0xeb, 0xc5, 0xce, 0x1f, 0x3d, 0x67, 0x05, 0x9e, 0x10, 0x85, 0x10, 0x18, 0xba, 0x29, 0xcb,
	0x9c, 0x63, 0x9b, 0x30, 0x82, 0xa1, 0xc1, 0x07, 0x99, 0x14, 0x07, 0x8e, 0x9d, 0xe6, 0xea, 0xbd,
	0x46, 0x81, 0x5d, 0x42, 0x06, 0xe0, 0xde, 0x92, 0xe7, 0xd8, 0x23, 0x43, 0x98, 0xda, 0xd7, 0x24,
	0x8a, 0xcb, 0x0f, 0x9e, 0x8b, 0x02, 0xfb, 0xcd, 0xed, 0xbd, 0x4a, 0x24, 0x0e, 0xc8, 0xa6, 0xd0,
	0x37, 0xb6, 0xd9, 0x20, 0x34, 0x33, 0xb7, 0x7a, 0x29, 0x70, 0x4b, 0x9f, 0x59, 0x61, 0x1a, 0x87,
	0x6e, 0x49, 0x8b, 0x0d, 0x1c, 0x79, 0x4b, 0xa6, 0x6e, 0x4c, 0x32, 0x81, 0x9e, 0x16, 0x4a, 0x9b,
	0x10, 0xcc, 0x61, 0xa4, 0xc1, 0xeb, 0x9a, 0x7a, 0x7b, 0x14, 0x35, 0x23, 0x18, 0x41, 0x47, 0x83,
	0x2e, 0x62, 0xf4, 0x38, 0x86, 0x6e, 0xfd, 0x3f, 0x7a, 0x1c, 0xd2, 0xf3, 0x02, 0xc6, 0x2e, 0xe7,
	0x2e, 0x53, 0x4a, 0x47, 0x45, 0xe4, 0x4b, 0x98, 0xfc, 0x46, 0xd9, 0xc1, 0xdc, 0x3b, 0x40, 0x69,
	0xd6, 0x17, 0x5e, 0x4f, 0x1d, 0x68, 0x79, 0x49, 0xbc, 0x86, 0xb0, 0x91, 0x69, 0x87, 0xe8, 0x9d,
	0xa9, 0x63, 0x2d, 0x9f, 0xba, 0xeb, 0xa1, 0x64, 0x8b, 0x2b, 0x77, 0x93, 0x26, 0xdc, 0xea, 0xda,
	0xfb, 0xdc, 0xa7, 0xaf, 0x92, 0xe3, 0x59, 0x0d, 0xbb, 0x7f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x5a, 0x98, 0x74, 0x7c, 0x93, 0x02, 0x00, 0x00,
}
