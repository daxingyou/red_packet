// Code generated by protoc-gen-go.
// source: shuiguoji.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EUnitType from base.proto

// Ignoring public import of EUnitRace from base.proto

type Shuiguoji struct {
	ProtoHeader *ProtoHeader `protobuf:"bytes,1,opt,name=ProtoHeader" json:"ProtoHeader,omitempty"`
	// 押注
	ScoresBet *int32 `protobuf:"varint,2,opt,name=scoresBet" json:"scoresBet,omitempty"`
	ScoresWin *int32 `protobuf:"varint,3,opt,name=scoresWin" json:"scoresWin,omitempty"`
	// 押注的分数
	ScoresApple      *int32 `protobuf:"varint,4,opt,name=scoresApple" json:"scoresApple,omitempty"`
	ScoresOrange     *int32 `protobuf:"varint,5,opt,name=scoresOrange" json:"scoresOrange,omitempty"`
	ScoresMango      *int32 `protobuf:"varint,6,opt,name=scoresMango" json:"scoresMango,omitempty"`
	ScoresBell       *int32 `protobuf:"varint,7,opt,name=scoresBell" json:"scoresBell,omitempty"`
	ScoresWatermelon *int32 `protobuf:"varint,8,opt,name=scoresWatermelon" json:"scoresWatermelon,omitempty"`
	ScoresStar       *int32 `protobuf:"varint,9,opt,name=scoresStar" json:"scoresStar,omitempty"`
	Scores77         *int32 `protobuf:"varint,10,opt,name=scores77" json:"scores77,omitempty"`
	ScoresBar        *int32 `protobuf:"varint,11,opt,name=scoresBar" json:"scoresBar,omitempty"`
	WinApple         *int32 `protobuf:"varint,12,opt,name=winApple" json:"winApple,omitempty"`
	WinOrange        *int32 `protobuf:"varint,13,opt,name=winOrange" json:"winOrange,omitempty"`
	WinMango         *int32 `protobuf:"varint,14,opt,name=winMango" json:"winMango,omitempty"`
	WinBell          *int32 `protobuf:"varint,15,opt,name=winBell" json:"winBell,omitempty"`
	WinWatermelon    *int32 `protobuf:"varint,16,opt,name=winWatermelon" json:"winWatermelon,omitempty"`
	WinStar          *int32 `protobuf:"varint,17,opt,name=winStar" json:"winStar,omitempty"`
	Win77            *int32 `protobuf:"varint,18,opt,name=win77" json:"win77,omitempty"`
	WinBar           *int32 `protobuf:"varint,19,opt,name=winBar" json:"winBar,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Shuiguoji) Reset()                    { *m = Shuiguoji{} }
func (m *Shuiguoji) String() string            { return proto.CompactTextString(m) }
func (*Shuiguoji) ProtoMessage()               {}
func (*Shuiguoji) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Shuiguoji) GetProtoHeader() *ProtoHeader {
	if m != nil {
		return m.ProtoHeader
	}
	return nil
}

func (m *Shuiguoji) GetScoresBet() int32 {
	if m != nil && m.ScoresBet != nil {
		return *m.ScoresBet
	}
	return 0
}

func (m *Shuiguoji) GetScoresWin() int32 {
	if m != nil && m.ScoresWin != nil {
		return *m.ScoresWin
	}
	return 0
}

func (m *Shuiguoji) GetScoresApple() int32 {
	if m != nil && m.ScoresApple != nil {
		return *m.ScoresApple
	}
	return 0
}

func (m *Shuiguoji) GetScoresOrange() int32 {
	if m != nil && m.ScoresOrange != nil {
		return *m.ScoresOrange
	}
	return 0
}

func (m *Shuiguoji) GetScoresMango() int32 {
	if m != nil && m.ScoresMango != nil {
		return *m.ScoresMango
	}
	return 0
}

func (m *Shuiguoji) GetScoresBell() int32 {
	if m != nil && m.ScoresBell != nil {
		return *m.ScoresBell
	}
	return 0
}

func (m *Shuiguoji) GetScoresWatermelon() int32 {
	if m != nil && m.ScoresWatermelon != nil {
		return *m.ScoresWatermelon
	}
	return 0
}

func (m *Shuiguoji) GetScoresStar() int32 {
	if m != nil && m.ScoresStar != nil {
		return *m.ScoresStar
	}
	return 0
}

func (m *Shuiguoji) GetScores77() int32 {
	if m != nil && m.Scores77 != nil {
		return *m.Scores77
	}
	return 0
}

func (m *Shuiguoji) GetScoresBar() int32 {
	if m != nil && m.ScoresBar != nil {
		return *m.ScoresBar
	}
	return 0
}

func (m *Shuiguoji) GetWinApple() int32 {
	if m != nil && m.WinApple != nil {
		return *m.WinApple
	}
	return 0
}

func (m *Shuiguoji) GetWinOrange() int32 {
	if m != nil && m.WinOrange != nil {
		return *m.WinOrange
	}
	return 0
}

func (m *Shuiguoji) GetWinMango() int32 {
	if m != nil && m.WinMango != nil {
		return *m.WinMango
	}
	return 0
}

func (m *Shuiguoji) GetWinBell() int32 {
	if m != nil && m.WinBell != nil {
		return *m.WinBell
	}
	return 0
}

func (m *Shuiguoji) GetWinWatermelon() int32 {
	if m != nil && m.WinWatermelon != nil {
		return *m.WinWatermelon
	}
	return 0
}

func (m *Shuiguoji) GetWinStar() int32 {
	if m != nil && m.WinStar != nil {
		return *m.WinStar
	}
	return 0
}

func (m *Shuiguoji) GetWin77() int32 {
	if m != nil && m.Win77 != nil {
		return *m.Win77
	}
	return 0
}

func (m *Shuiguoji) GetWinBar() int32 {
	if m != nil && m.WinBar != nil {
		return *m.WinBar
	}
	return 0
}

func init() {
	proto.RegisterType((*Shuiguoji)(nil), "bbproto.Shuiguoji")
}

var fileDescriptor7 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0xce, 0xb1, 0x4f, 0x83, 0x40,
	0x14, 0xc7, 0x71, 0x6b, 0xa5, 0x94, 0x47, 0x29, 0xf4, 0x5a, 0x93, 0x17, 0x27, 0xe3, 0xa4, 0x0b,
	0x83, 0x4b, 0x67, 0x3b, 0xb9, 0x18, 0x9b, 0x74, 0x70, 0x3e, 0xf4, 0xa5, 0x62, 0x90, 0x23, 0x07,
	0xc4, 0xff, 0xc3, 0xbf, 0xd8, 0xc7, 0x3b, 0x88, 0xb0, 0xf5, 0x3e, 0xf7, 0x2d, 0xf7, 0x83, 0xb8,
	0xfe, 0x6c, 0xf3, 0x73, 0x6b, 0xbe, 0xf2, 0xb4, 0xb2, 0xa6, 0x31, 0xca, 0xcf, 0x32, 0xf9, 0x71,
	0x03, 0x99, 0xae, 0xc9, 0xe1, 0xdd, 0xef, 0x1c, 0x82, 0xd3, 0x10, 0xaa, 0x07, 0x08, 0x8f, 0x1d,
	0x3f, 0x93, 0xfe, 0x20, 0x8b, 0xb3, 0xdb, 0xd9, 0x7d, 0xf8, 0xb8, 0x4b, 0xfb, 0x3f, 0xa6, 0xa3,
	0x3b, 0xb5, 0x81, 0xa0, 0x7e, 0x37, 0x96, 0xea, 0x03, 0x35, 0x78, 0xc9, 0xa1, 0xf7, 0x4f, 0x6f,
	0x79, 0x89, 0x73, 0xa1, 0x2d, 0x84, 0x8e, 0x9e, 0xaa, 0xaa, 0x20, 0xbc, 0x12, 0xdc, 0xc1, 0xca,
	0xe1, 0xab, 0xd5, 0xe5, 0x99, 0xd0, 0x9b, 0xa6, 0x2f, 0x8c, 0x06, 0x17, 0x82, 0x0a, 0x60, 0x78,
	0xa5, 0x28, 0xd0, 0x17, 0x43, 0x48, 0xfa, 0x67, 0x74, 0x43, 0xf6, 0x9b, 0x0a, 0x53, 0xe2, 0x72,
	0x5a, 0x9f, 0x1a, 0x6d, 0x31, 0x10, 0x4b, 0x60, 0xe9, 0x6c, 0xbf, 0x47, 0x98, 0xce, 0x3c, 0x70,
	0x14, 0x0e, 0xd1, 0x4f, 0x5e, 0xba, 0x8d, 0xab, 0x21, 0x62, 0xe9, 0x07, 0x46, 0xa3, 0xc8, 0xad,
	0x5b, 0x8b, 0xc4, 0xe0, 0xb3, 0xc8, 0xb4, 0x58, 0xe0, 0x1a, 0x22, 0x86, 0xd1, 0xae, 0x64, 0xd4,
	0xc9, 0xa8, 0x8d, 0x40, 0x04, 0x1e, 0x03, 0x2f, 0x52, 0x72, 0x5c, 0xc3, 0xa2, 0xfb, 0x0e, 0x5f,
	0x6f, 0xbb, 0xf3, 0xf1, 0xe2, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x66, 0xe4, 0x52, 0xbd, 0x01,
	0x00, 0x00,
}
