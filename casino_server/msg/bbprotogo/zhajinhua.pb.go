// Code generated by protoc-gen-go.
// source: zhajinhua.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EUnitType from base.proto

// Ignoring public import of EUnitRace from base.proto

// Ignoring public import of EUnitProtoId from base.proto

// Ignoring public import of User from user.proto

// 进入扎金花的房间:押注中(剩余time）、开奖中（剩余time）、jackpot奖池金额、balance、庄家信息、在座玩家
type ZjhRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ReqType          *int32       `protobuf:"varint,2,opt,name=reqType" json:"reqType,omitempty"`
	Jackpot          *int64       `protobuf:"varint,3,opt,name=jackpot" json:"jackpot,omitempty"`
	Banker           *User        `protobuf:"bytes,4,opt,name=banker" json:"banker,omitempty"`
	Me               *User        `protobuf:"bytes,5,opt,name=me" json:"me,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhRoom) Reset()                    { *m = ZjhRoom{} }
func (m *ZjhRoom) String() string            { return proto.CompactTextString(m) }
func (*ZjhRoom) ProtoMessage()               {}
func (*ZjhRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *ZjhRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhRoom) GetReqType() int32 {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return 0
}

func (m *ZjhRoom) GetJackpot() int64 {
	if m != nil && m.Jackpot != nil {
		return *m.Jackpot
	}
	return 0
}

func (m *ZjhRoom) GetBanker() *User {
	if m != nil {
		return m.Banker
	}
	return nil
}

func (m *ZjhRoom) GetMe() *User {
	if m != nil {
		return m.Me
	}
	return nil
}

// 押注：押注区betzone=1,2,3,4   押注金额betAmount （若当前时刻已停止押注，返回失败）
// todo 一个数组 一个header
type ZjhBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Betzone          []int32      `protobuf:"varint,2,rep,name=betzone" json:"betzone,omitempty"`
	BetzoneA         *int32       `protobuf:"varint,3,opt,name=betzoneA" json:"betzoneA,omitempty"`
	BetzoneB         *int32       `protobuf:"varint,4,opt,name=betzoneB" json:"betzoneB,omitempty"`
	BetzoneC         *int32       `protobuf:"varint,5,opt,name=betzoneC" json:"betzoneC,omitempty"`
	BetzoneD         *int32       `protobuf:"varint,6,opt,name=betzoneD" json:"betzoneD,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhBet) Reset()                    { *m = ZjhBet{} }
func (m *ZjhBet) String() string            { return proto.CompactTextString(m) }
func (*ZjhBet) ProtoMessage()               {}
func (*ZjhBet) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *ZjhBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhBet) GetBetzone() []int32 {
	if m != nil {
		return m.Betzone
	}
	return nil
}

func (m *ZjhBet) GetBetzoneA() int32 {
	if m != nil && m.BetzoneA != nil {
		return *m.BetzoneA
	}
	return 0
}

func (m *ZjhBet) GetBetzoneB() int32 {
	if m != nil && m.BetzoneB != nil {
		return *m.BetzoneB
	}
	return 0
}

func (m *ZjhBet) GetBetzoneC() int32 {
	if m != nil && m.BetzoneC != nil {
		return *m.BetzoneC
	}
	return 0
}

func (m *ZjhBet) GetBetzoneD() int32 {
	if m != nil && m.BetzoneD != nil {
		return *m.BetzoneD
	}
	return 0
}

// 开奖,广播
type ZjhLottery struct {
	// 牌面
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pbank  *ZjhPai      `protobuf:"bytes,2,opt,name=pbank" json:"pbank,omitempty"`
	Pa     *ZjhPai      `protobuf:"bytes,3,opt,name=pa" json:"pa,omitempty"`
	Pb     *ZjhPai      `protobuf:"bytes,4,opt,name=pb" json:"pb,omitempty"`
	Pc     *ZjhPai      `protobuf:"bytes,5,opt,name=pc" json:"pc,omitempty"`
	Pd     *ZjhPai      `protobuf:"bytes,6,opt,name=pd" json:"pd,omitempty"`
	// 自己的输赢
	Balance          *int32 `protobuf:"varint,7,opt,name=balance" json:"balance,omitempty"`
	WinAmount        *int32 `protobuf:"varint,8,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhLottery) Reset()                    { *m = ZjhLottery{} }
func (m *ZjhLottery) String() string            { return proto.CompactTextString(m) }
func (*ZjhLottery) ProtoMessage()               {}
func (*ZjhLottery) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *ZjhLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhLottery) GetPbank() *ZjhPai {
	if m != nil {
		return m.Pbank
	}
	return nil
}

func (m *ZjhLottery) GetPa() *ZjhPai {
	if m != nil {
		return m.Pa
	}
	return nil
}

func (m *ZjhLottery) GetPb() *ZjhPai {
	if m != nil {
		return m.Pb
	}
	return nil
}

func (m *ZjhLottery) GetPc() *ZjhPai {
	if m != nil {
		return m.Pc
	}
	return nil
}

func (m *ZjhLottery) GetPd() *ZjhPai {
	if m != nil {
		return m.Pd
	}
	return nil
}

func (m *ZjhLottery) GetBalance() int32 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ZjhLottery) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 扎金花牌的结构
type ZjhPai struct {
	PaiType          *int32 `protobuf:"varint,1,opt,name=PaiType" json:"PaiType,omitempty"`
	LotteryType      *int32 `protobuf:"varint,2,opt,name=lotteryType" json:"lotteryType,omitempty"`
	Result           *bool  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Pai1             *Pai   `protobuf:"bytes,4,opt,name=Pai1" json:"Pai1,omitempty"`
	Pai2             *Pai   `protobuf:"bytes,5,opt,name=Pai2" json:"Pai2,omitempty"`
	Pai3             *Pai   `protobuf:"bytes,6,opt,name=Pai3" json:"Pai3,omitempty"`
	WinAmount        *int32 `protobuf:"varint,7,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhPai) Reset()                    { *m = ZjhPai{} }
func (m *ZjhPai) String() string            { return proto.CompactTextString(m) }
func (*ZjhPai) ProtoMessage()               {}
func (*ZjhPai) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *ZjhPai) GetPaiType() int32 {
	if m != nil && m.PaiType != nil {
		return *m.PaiType
	}
	return 0
}

func (m *ZjhPai) GetLotteryType() int32 {
	if m != nil && m.LotteryType != nil {
		return *m.LotteryType
	}
	return 0
}

func (m *ZjhPai) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ZjhPai) GetPai1() *Pai {
	if m != nil {
		return m.Pai1
	}
	return nil
}

func (m *ZjhPai) GetPai2() *Pai {
	if m != nil {
		return m.Pai2
	}
	return nil
}

func (m *ZjhPai) GetPai3() *Pai {
	if m != nil {
		return m.Pai3
	}
	return nil
}

func (m *ZjhPai) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 单张牌的结构
type Pai struct {
	MapKey           *int32  `protobuf:"varint,1,opt,name=mapKey" json:"mapKey,omitempty"`
	Mapdes           *string `protobuf:"bytes,2,opt,name=mapdes" json:"mapdes,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Flower           *string `protobuf:"bytes,4,opt,name=flower" json:"flower,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Pai) Reset()                    { *m = Pai{} }
func (m *Pai) String() string            { return proto.CompactTextString(m) }
func (*Pai) ProtoMessage()               {}
func (*Pai) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *Pai) GetMapKey() int32 {
	if m != nil && m.MapKey != nil {
		return *m.MapKey
	}
	return 0
}

func (m *Pai) GetMapdes() string {
	if m != nil && m.Mapdes != nil {
		return *m.Mapdes
	}
	return ""
}

func (m *Pai) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Pai) GetFlower() string {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return ""
}

func (m *Pai) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type ZjhQueryNoSeatUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhQueryNoSeatUser) Reset()                    { *m = ZjhQueryNoSeatUser{} }
func (m *ZjhQueryNoSeatUser) String() string            { return proto.CompactTextString(m) }
func (*ZjhQueryNoSeatUser) ProtoMessage()               {}
func (*ZjhQueryNoSeatUser) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *ZjhQueryNoSeatUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 座位
type ZjhReqSeat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhReqSeat) Reset()                    { *m = ZjhReqSeat{} }
func (m *ZjhReqSeat) String() string            { return proto.CompactTextString(m) }
func (*ZjhReqSeat) ProtoMessage()               {}
func (*ZjhReqSeat) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *ZjhReqSeat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ZjhMsg struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhMsg) Reset()                    { *m = ZjhMsg{} }
func (m *ZjhMsg) String() string            { return proto.CompactTextString(m) }
func (*ZjhMsg) ProtoMessage()               {}
func (*ZjhMsg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *ZjhMsg) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ZjhRoom)(nil), "bbproto.ZjhRoom")
	proto.RegisterType((*ZjhBet)(nil), "bbproto.ZjhBet")
	proto.RegisterType((*ZjhLottery)(nil), "bbproto.ZjhLottery")
	proto.RegisterType((*ZjhPai)(nil), "bbproto.ZjhPai")
	proto.RegisterType((*Pai)(nil), "bbproto.Pai")
	proto.RegisterType((*ZjhQueryNoSeatUser)(nil), "bbproto.ZjhQueryNoSeatUser")
	proto.RegisterType((*ZjhReqSeat)(nil), "bbproto.ZjhReqSeat")
	proto.RegisterType((*ZjhMsg)(nil), "bbproto.ZjhMsg")
}

var fileDescriptor10 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x92, 0x93, 0x40,
	0x10, 0xc6, 0x25, 0x04, 0x08, 0x9d, 0x5d, 0xa3, 0xa3, 0x07, 0x5c, 0x4b, 0xcb, 0xa2, 0x3c, 0x78,
	0xa2, 0x4a, 0xbc, 0x79, 0xdb, 0xd5, 0x83, 0x55, 0xfe, 0x29, 0x8c, 0x7a, 0xf1, 0x36, 0x24, 0xad,
	0x24, 0x0b, 0x0c, 0x0b, 0x83, 0xa9, 0xe4, 0x05, 0x3c, 0xf8, 0x1c, 0xbe, 0x9c, 0x4f, 0xe1, 0x4c,
	0x33, 0x15, 0x49, 0x15, 0x56, 0x71, 0x49, 0x86, 0xfe, 0x7a, 0x7a, 0x7e, 0xfd, 0x75, 0xc3, 0xe2,
	0x90, 0xf1, 0xed, 0xa6, 0xcc, 0x5a, 0x1e, 0x55, 0xb5, 0x90, 0x82, 0x79, 0x69, 0x4a, 0x87, 0x0b,
	0x48, 0x79, 0x83, 0x91, 0x39, 0xb7, 0x0d, 0xd6, 0xdd, 0x39, 0xfc, 0x65, 0x81, 0xf7, 0x75, 0x9b,
	0x2d, 0x85, 0x28, 0xd8, 0x53, 0x70, 0x33, 0xe4, 0x6b, 0xac, 0x03, 0xeb, 0x89, 0xf5, 0x6c, 0x1e,
	0xdf, 0x8f, 0xcc, 0xed, 0x28, 0xd1, 0xbf, 0x6f, 0x48, 0x63, 0x0b, 0xf0, 0x6a, 0xbc, 0xf9, 0xbc,
	0xaf, 0x30, 0x98, 0xa8, 0x34, 0x47, 0x07, 0xb6, 0x7c, 0x75, 0x5d, 0x09, 0x19, 0xd8, 0x2a, 0x60,
	0xb3, 0x47, 0xe0, 0xa6, 0xbc, 0xbc, 0x56, 0x75, 0xa6, 0x54, 0xe7, 0xfc, 0x58, 0xe7, 0x8b, 0x7a,
	0x98, 0x3d, 0x80, 0x49, 0x81, 0x81, 0x33, 0x20, 0x85, 0x3f, 0x2d, 0x70, 0x15, 0xcd, 0x15, 0xca,
	0xf1, 0x30, 0x29, 0xca, 0x83, 0x28, 0x35, 0x8c, 0xad, 0x60, 0xee, 0xc0, 0xcc, 0x04, 0x2e, 0x89,
	0xa6, 0x1f, 0xb9, 0x22, 0x9e, 0x7e, 0xe4, 0x15, 0x61, 0xf4, 0x23, 0xaf, 0x03, 0x57, 0x47, 0xc2,
	0x3f, 0x16, 0x80, 0x22, 0x79, 0x27, 0xa4, 0xc4, 0x7a, 0x3f, 0x92, 0xe6, 0x31, 0x38, 0x95, 0xee,
	0x9c, 0x8c, 0x99, 0xc7, 0x8b, 0x63, 0x92, 0xaa, 0x94, 0xf0, 0x0d, 0x7b, 0x08, 0x93, 0x8a, 0x13,
	0xd6, 0x7f, 0xc4, 0xd4, 0x38, 0x36, 0x28, 0xae, 0x8c, 0x67, 0x83, 0xe2, 0x9a, 0xb8, 0x07, 0x44,
	0xed, 0x10, 0xcf, 0x79, 0xb9, 0xc2, 0xc0, 0xa3, 0x5e, 0xef, 0x82, 0xbf, 0xdb, 0x94, 0x97, 0x85,
	0x68, 0x4b, 0x19, 0xcc, 0xa8, 0xd9, 0xdf, 0x9d, 0xed, 0x26, 0x5d, 0xfd, 0xd1, 0x74, 0x2d, 0x4a,
	0xbf, 0x07, 0xf3, 0xbc, 0x33, 0xa1, 0x37, 0xf2, 0xdb, 0xe0, 0xd6, 0xd8, 0xb4, 0x79, 0x37, 0xf1,
	0x19, 0xbb, 0x80, 0xa9, 0xba, 0xf5, 0xdc, 0xd0, 0x9f, 0xfd, 0x33, 0x47, 0x55, 0xec, 0xb4, 0xd8,
	0xc0, 0x0f, 0x69, 0x2f, 0x0c, 0xfb, 0xa9, 0x76, 0xc2, 0x49, 0xe8, 0xe1, 0x12, 0x6c, 0xad, 0xa8,
	0xd7, 0x0b, 0x5e, 0xbd, 0xc5, 0xbd, 0x41, 0xec, 0xbe, 0xd7, 0xd8, 0x10, 0x9d, 0xcf, 0xce, 0xc1,
	0xf9, 0xc1, 0xf3, 0x16, 0xcd, 0x02, 0x28, 0xf9, 0x5b, 0x2e, 0x76, 0x66, 0x1d, 0x7d, 0x76, 0x06,
	0xd3, 0x92, 0x9b, 0x0d, 0xf4, 0xc3, 0x97, 0xc0, 0x54, 0xeb, 0x1f, 0x5b, 0xd5, 0xe0, 0x07, 0xf1,
	0x09, 0xb9, 0xa4, 0x1d, 0x1d, 0x35, 0xef, 0x30, 0xa6, 0x1d, 0x59, 0xe2, 0x8d, 0xbe, 0x37, 0xf2,
	0x4e, 0x44, 0x56, 0xbf, 0x6f, 0xbe, 0x8f, 0xcb, 0x4f, 0x6e, 0x25, 0xd6, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xac, 0xc0, 0x6c, 0x6f, 0xd7, 0x03, 0x00, 0x00,
}
