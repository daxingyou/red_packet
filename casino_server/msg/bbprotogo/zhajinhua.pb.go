// Code generated by protoc-gen-go.
// source: zhajinhua.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EProtoId from base.proto

// Ignoring public import of User from user.proto

// 进入扎金花的房间:押注中(剩余time）、开奖中（剩余time）、jackpot奖池金额、balance、庄家信息、在座玩家
type ZjhRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ReqType          *int32       `protobuf:"varint,2,opt,name=reqType" json:"reqType,omitempty"`
	Jackpot          *int64       `protobuf:"varint,3,opt,name=jackpot" json:"jackpot,omitempty"`
	Banker           *User        `protobuf:"bytes,4,opt,name=banker" json:"banker,omitempty"`
	Me               *User        `protobuf:"bytes,5,opt,name=me" json:"me,omitempty"`
	Zjhpai           []*ZjhPai    `protobuf:"bytes,6,rep,name=zjhpai" json:"zjhpai,omitempty"`
	BetTime          *int32       `protobuf:"varint,7,opt,name=betTime" json:"betTime,omitempty"`
	LotteryTime      *int32       `protobuf:"varint,8,opt,name=lotteryTime" json:"lotteryTime,omitempty"`
	RoomStatus       *int32       `protobuf:"varint,9,opt,name=roomStatus" json:"roomStatus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhRoom) Reset()                    { *m = ZjhRoom{} }
func (m *ZjhRoom) String() string            { return proto.CompactTextString(m) }
func (*ZjhRoom) ProtoMessage()               {}
func (*ZjhRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *ZjhRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhRoom) GetReqType() int32 {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return 0
}

func (m *ZjhRoom) GetJackpot() int64 {
	if m != nil && m.Jackpot != nil {
		return *m.Jackpot
	}
	return 0
}

func (m *ZjhRoom) GetBanker() *User {
	if m != nil {
		return m.Banker
	}
	return nil
}

func (m *ZjhRoom) GetMe() *User {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *ZjhRoom) GetZjhpai() []*ZjhPai {
	if m != nil {
		return m.Zjhpai
	}
	return nil
}

func (m *ZjhRoom) GetBetTime() int32 {
	if m != nil && m.BetTime != nil {
		return *m.BetTime
	}
	return 0
}

func (m *ZjhRoom) GetLotteryTime() int32 {
	if m != nil && m.LotteryTime != nil {
		return *m.LotteryTime
	}
	return 0
}

func (m *ZjhRoom) GetRoomStatus() int32 {
	if m != nil && m.RoomStatus != nil {
		return *m.RoomStatus
	}
	return 0
}

// 押注：押注区betzone=1,2,3,4   押注金额betAmount （若当前时刻已停止押注，返回失败）
type ZjhBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Betzone          []int32      `protobuf:"varint,2,rep,name=betzone" json:"betzone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhBet) Reset()                    { *m = ZjhBet{} }
func (m *ZjhBet) String() string            { return proto.CompactTextString(m) }
func (*ZjhBet) ProtoMessage()               {}
func (*ZjhBet) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *ZjhBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhBet) GetBetzone() []int32 {
	if m != nil {
		return m.Betzone
	}
	return nil
}

// 开奖,广播
type ZjhLottery struct {
	// 牌面
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Zjhpai []*ZjhPai    `protobuf:"bytes,2,rep,name=zjhpai" json:"zjhpai,omitempty"`
	// 自己的输赢
	Balance          *int32 `protobuf:"varint,7,opt,name=balance" json:"balance,omitempty"`
	WinAmount        *int32 `protobuf:"varint,8,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhLottery) Reset()                    { *m = ZjhLottery{} }
func (m *ZjhLottery) String() string            { return proto.CompactTextString(m) }
func (*ZjhLottery) ProtoMessage()               {}
func (*ZjhLottery) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *ZjhLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhLottery) GetZjhpai() []*ZjhPai {
	if m != nil {
		return m.Zjhpai
	}
	return nil
}

func (m *ZjhLottery) GetBalance() int32 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ZjhLottery) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 对押注的信息进行广播
type BroadcastBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Betzone          []int32      `protobuf:"varint,2,rep,name=betzone" json:"betzone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BroadcastBet) Reset()                    { *m = BroadcastBet{} }
func (m *BroadcastBet) String() string            { return proto.CompactTextString(m) }
func (*BroadcastBet) ProtoMessage()               {}
func (*BroadcastBet) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *BroadcastBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BroadcastBet) GetBetzone() []int32 {
	if m != nil {
		return m.Betzone
	}
	return nil
}

// 扎金花牌的结构
type ZjhPai struct {
	PaiType          *int32 `protobuf:"varint,1,opt,name=PaiType" json:"PaiType,omitempty"`
	LotteryType      *int32 `protobuf:"varint,2,opt,name=lotteryType" json:"lotteryType,omitempty"`
	Result           *bool  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Pai              []*Pai `protobuf:"bytes,4,rep,name=pai" json:"pai,omitempty"`
	WinAmount        *int32 `protobuf:"varint,7,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhPai) Reset()                    { *m = ZjhPai{} }
func (m *ZjhPai) String() string            { return proto.CompactTextString(m) }
func (*ZjhPai) ProtoMessage()               {}
func (*ZjhPai) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *ZjhPai) GetPaiType() int32 {
	if m != nil && m.PaiType != nil {
		return *m.PaiType
	}
	return 0
}

func (m *ZjhPai) GetLotteryType() int32 {
	if m != nil && m.LotteryType != nil {
		return *m.LotteryType
	}
	return 0
}

func (m *ZjhPai) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ZjhPai) GetPai() []*Pai {
	if m != nil {
		return m.Pai
	}
	return nil
}

func (m *ZjhPai) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 单张牌的结构
type Pai struct {
	MapKey           *int32  `protobuf:"varint,1,opt,name=mapKey" json:"mapKey,omitempty"`
	Mapdes           *string `protobuf:"bytes,2,opt,name=mapdes" json:"mapdes,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Flower           *string `protobuf:"bytes,4,opt,name=flower" json:"flower,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Pai) Reset()                    { *m = Pai{} }
func (m *Pai) String() string            { return proto.CompactTextString(m) }
func (*Pai) ProtoMessage()               {}
func (*Pai) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *Pai) GetMapKey() int32 {
	if m != nil && m.MapKey != nil {
		return *m.MapKey
	}
	return 0
}

func (m *Pai) GetMapdes() string {
	if m != nil && m.Mapdes != nil {
		return *m.Mapdes
	}
	return ""
}

func (m *Pai) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Pai) GetFlower() string {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return ""
}

func (m *Pai) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 查询无座玩家列表,除了坐在位子上的玩家,以外的玩家
type ZjhQueryNoSeatUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhQueryNoSeatUser) Reset()                    { *m = ZjhQueryNoSeatUser{} }
func (m *ZjhQueryNoSeatUser) String() string            { return proto.CompactTextString(m) }
func (*ZjhQueryNoSeatUser) ProtoMessage()               {}
func (*ZjhQueryNoSeatUser) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *ZjhQueryNoSeatUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 座位
type ZjhReqSeat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhReqSeat) Reset()                    { *m = ZjhReqSeat{} }
func (m *ZjhReqSeat) String() string            { return proto.CompactTextString(m) }
func (*ZjhReqSeat) ProtoMessage()               {}
func (*ZjhReqSeat) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *ZjhReqSeat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 聊天
type ZjhMsg struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhMsg) Reset()                    { *m = ZjhMsg{} }
func (m *ZjhMsg) String() string            { return proto.CompactTextString(m) }
func (*ZjhMsg) ProtoMessage()               {}
func (*ZjhMsg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *ZjhMsg) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ZjhBroadcastBeginBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Jackpot          *int64       `protobuf:"varint,2,opt,name=jackpot" json:"jackpot,omitempty"`
	Banker           *User        `protobuf:"bytes,3,opt,name=banker" json:"banker,omitempty"`
	Zjhpai           []*ZjhPai    `protobuf:"bytes,4,rep,name=zjhpai" json:"zjhpai,omitempty"`
	BetTime          *int32       `protobuf:"varint,5,opt,name=betTime" json:"betTime,omitempty"`
	LotteryTime      *int32       `protobuf:"varint,6,opt,name=lotteryTime" json:"lotteryTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhBroadcastBeginBet) Reset()                    { *m = ZjhBroadcastBeginBet{} }
func (m *ZjhBroadcastBeginBet) String() string            { return proto.CompactTextString(m) }
func (*ZjhBroadcastBeginBet) ProtoMessage()               {}
func (*ZjhBroadcastBeginBet) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

func (m *ZjhBroadcastBeginBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhBroadcastBeginBet) GetJackpot() int64 {
	if m != nil && m.Jackpot != nil {
		return *m.Jackpot
	}
	return 0
}

func (m *ZjhBroadcastBeginBet) GetBanker() *User {
	if m != nil {
		return m.Banker
	}
	return nil
}

func (m *ZjhBroadcastBeginBet) GetZjhpai() []*ZjhPai {
	if m != nil {
		return m.Zjhpai
	}
	return nil
}

func (m *ZjhBroadcastBeginBet) GetBetTime() int32 {
	if m != nil && m.BetTime != nil {
		return *m.BetTime
	}
	return 0
}

func (m *ZjhBroadcastBeginBet) GetLotteryTime() int32 {
	if m != nil && m.LotteryTime != nil {
		return *m.LotteryTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ZjhRoom)(nil), "bbproto.ZjhRoom")
	proto.RegisterType((*ZjhBet)(nil), "bbproto.ZjhBet")
	proto.RegisterType((*ZjhLottery)(nil), "bbproto.ZjhLottery")
	proto.RegisterType((*BroadcastBet)(nil), "bbproto.BroadcastBet")
	proto.RegisterType((*ZjhPai)(nil), "bbproto.ZjhPai")
	proto.RegisterType((*Pai)(nil), "bbproto.Pai")
	proto.RegisterType((*ZjhQueryNoSeatUser)(nil), "bbproto.ZjhQueryNoSeatUser")
	proto.RegisterType((*ZjhReqSeat)(nil), "bbproto.ZjhReqSeat")
	proto.RegisterType((*ZjhMsg)(nil), "bbproto.ZjhMsg")
	proto.RegisterType((*ZjhBroadcastBeginBet)(nil), "bbproto.ZjhBroadcastBeginBet")
}

var fileDescriptor10 = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0xe2, 0xd4, 0xd3, 0x94, 0x88, 0xa5, 0x07, 0x83, 0x84, 0xa8, 0x2c, 0x0e, 0x9c,
	0x7c, 0xe8, 0x91, 0x0b, 0xa2, 0x12, 0x12, 0x12, 0x1f, 0x0a, 0x69, 0xb9, 0x70, 0x1b, 0x27, 0x43,
	0xed, 0xd4, 0xf1, 0xba, 0xf6, 0x9a, 0x28, 0xf9, 0x5b, 0xfc, 0x27, 0x7e, 0x07, 0xb3, 0x63, 0xb7,
	0x16, 0x55, 0x00, 0xa3, 0x5e, 0x92, 0xf5, 0xcc, 0xee, 0x7b, 0xf3, 0xe6, 0xcd, 0xc0, 0x74, 0x97,
	0xe0, 0x2a, 0xcd, 0x93, 0x1a, 0xa3, 0xa2, 0xd4, 0x46, 0xab, 0x71, 0x1c, 0xcb, 0xe1, 0x29, 0xc4,
	0x58, 0x51, 0xd4, 0x9e, 0xeb, 0x8a, 0xca, 0xe6, 0x1c, 0xfe, 0x74, 0x60, 0xfc, 0x75, 0x95, 0xcc,
	0xb5, 0x5e, 0xab, 0x17, 0xe0, 0x25, 0x84, 0x4b, 0x2a, 0x03, 0xe7, 0xc4, 0x79, 0x79, 0x78, 0x7a,
	0x1c, 0xb5, 0xaf, 0xa3, 0x99, 0xfd, 0x7d, 0x27, 0x39, 0x35, 0x85, 0x71, 0x49, 0xd7, 0x17, 0xdb,
	0x82, 0x82, 0x01, 0x5f, 0x1b, 0xd9, 0xc0, 0x0a, 0x17, 0x57, 0x85, 0x36, 0x81, 0xcb, 0x01, 0x57,
	0x3d, 0x03, 0x2f, 0xc6, 0xfc, 0x8a, 0x71, 0x86, 0x82, 0x73, 0x74, 0x8b, 0xf3, 0x85, 0x89, 0xd5,
	0x13, 0x18, 0xac, 0x29, 0x18, 0xed, 0x4b, 0x3d, 0x07, 0x6f, 0xb7, 0x4a, 0x0a, 0x4c, 0x03, 0xef,
	0xc4, 0xe5, 0xf4, 0xf4, 0x36, 0xcd, 0x35, 0xce, 0x30, 0xb5, 0x5c, 0x31, 0x99, 0x8b, 0x94, 0x01,
	0xc6, 0x42, 0xfe, 0x18, 0x0e, 0x33, 0x6d, 0x0c, 0x95, 0x5b, 0x09, 0x1e, 0x48, 0x50, 0x01, 0x94,
	0x2c, 0xe8, 0xdc, 0xa0, 0xa9, 0xab, 0xc0, 0xb7, 0xb1, 0xf0, 0x35, 0x78, 0x8c, 0x71, 0x46, 0xa6,
	0xbf, 0x4c, 0x66, 0xda, 0xe9, 0xdc, 0xca, 0x74, 0x19, 0x60, 0x03, 0xc0, 0x00, 0x1f, 0x1a, 0xb2,
	0x9e, 0x20, 0x9d, 0x9e, 0xc1, 0x9f, 0xf5, 0x60, 0x86, 0xf9, 0xe2, 0x46, 0xcf, 0x23, 0xf0, 0x37,
	0x69, 0xfe, 0x66, 0xad, 0xeb, 0xdc, 0x34, 0x6a, 0xc2, 0xb7, 0x30, 0x39, 0x2b, 0x35, 0x2e, 0x17,
	0x58, 0x99, 0x7b, 0xd4, 0x9f, 0x49, 0x03, 0x5a, 0x52, 0xfe, 0x13, 0x07, 0x9d, 0xbb, 0x4d, 0xec,
	0x6c, 0x7d, 0x08, 0x5e, 0x49, 0x55, 0x9d, 0x35, 0xae, 0x1e, 0xb0, 0x6d, 0xae, 0x15, 0x32, 0x14,
	0x21, 0x93, 0x8e, 0x93, 0x01, 0x7f, 0x2b, 0x5a, 0x74, 0x84, 0x73, 0x70, 0x6d, 0x86, 0x41, 0xd6,
	0x58, 0xbc, 0xa7, 0x6d, 0xcb, 0xd4, 0x7c, 0x2f, 0xa9, 0x12, 0x12, 0x5f, 0x1d, 0xc1, 0xe8, 0x3b,
	0x66, 0x35, 0x09, 0x87, 0xa4, 0xbf, 0x65, 0x7a, 0xd3, 0x4e, 0x8e, 0xaf, 0x26, 0x30, 0xcc, 0xb1,
	0x1d, 0x16, 0x3f, 0x7c, 0x05, 0x8a, 0x15, 0x7c, 0xae, 0xb9, 0xce, 0x4f, 0xfa, 0x9c, 0xd0, 0xc8,
	0xcc, 0xf4, 0x6a, 0x47, 0x78, 0x2a, 0xee, 0xcd, 0xe9, 0xda, 0xbe, 0xeb, 0xf9, 0x26, 0x92, 0x8e,
	0x7d, 0xac, 0x2e, 0x7b, 0xde, 0xff, 0xe1, 0xc0, 0xb1, 0x9d, 0xb1, 0xce, 0xac, 0xcb, 0x34, 0xff,
	0x2f, 0xc7, 0x6e, 0xf6, 0x68, 0x70, 0x67, 0x8f, 0xdc, 0xbf, 0x2f, 0xcb, 0xf0, 0x9f, 0xcb, 0x32,
	0xda, 0xb7, 0x2c, 0x9e, 0x0d, 0xce, 0x1e, 0xcc, 0x9c, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6c,
	0x15, 0x9e, 0x4c, 0x38, 0x04, 0x00, 0x00,
}
