// Code generated by protoc-gen-go.
// source: zhajinhua.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EUnitType from base.proto

// Ignoring public import of EUnitRace from base.proto

// Ignoring public import of EUnitProtoId from base.proto

// Ignoring public import of User from user.proto

// 进入扎金花的房间:押注中(剩余time）、开奖中（剩余time）、jackpot奖池金额、balance、庄家信息、在座玩家
type ZjhRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ReqType          *int32       `protobuf:"varint,2,opt,name=reqType" json:"reqType,omitempty"`
	Jackpot          *int64       `protobuf:"varint,3,opt,name=jackpot" json:"jackpot,omitempty"`
	Banker           *User        `protobuf:"bytes,4,opt,name=banker" json:"banker,omitempty"`
	Me               *User        `protobuf:"bytes,5,opt,name=me" json:"me,omitempty"`
	Zjhpai           []*ZjhPai    `protobuf:"bytes,6,rep,name=zjhpai" json:"zjhpai,omitempty"`
	BetTime          *int32       `protobuf:"varint,7,opt,name=betTime" json:"betTime,omitempty"`
	LotteryTime      *int32       `protobuf:"varint,8,opt,name=lotteryTime" json:"lotteryTime,omitempty"`
	RoomStatus       *int32       `protobuf:"varint,9,opt,name=roomStatus" json:"roomStatus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhRoom) Reset()                    { *m = ZjhRoom{} }
func (m *ZjhRoom) String() string            { return proto.CompactTextString(m) }
func (*ZjhRoom) ProtoMessage()               {}
func (*ZjhRoom) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *ZjhRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhRoom) GetReqType() int32 {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return 0
}

func (m *ZjhRoom) GetJackpot() int64 {
	if m != nil && m.Jackpot != nil {
		return *m.Jackpot
	}
	return 0
}

func (m *ZjhRoom) GetBanker() *User {
	if m != nil {
		return m.Banker
	}
	return nil
}

func (m *ZjhRoom) GetMe() *User {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *ZjhRoom) GetZjhpai() []*ZjhPai {
	if m != nil {
		return m.Zjhpai
	}
	return nil
}

func (m *ZjhRoom) GetBetTime() int32 {
	if m != nil && m.BetTime != nil {
		return *m.BetTime
	}
	return 0
}

func (m *ZjhRoom) GetLotteryTime() int32 {
	if m != nil && m.LotteryTime != nil {
		return *m.LotteryTime
	}
	return 0
}

func (m *ZjhRoom) GetRoomStatus() int32 {
	if m != nil && m.RoomStatus != nil {
		return *m.RoomStatus
	}
	return 0
}

// 押注：押注区betzone=1,2,3,4   押注金额betAmount （若当前时刻已停止押注，返回失败）
type ZjhBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Betzone          []int32      `protobuf:"varint,2,rep,name=betzone" json:"betzone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhBet) Reset()                    { *m = ZjhBet{} }
func (m *ZjhBet) String() string            { return proto.CompactTextString(m) }
func (*ZjhBet) ProtoMessage()               {}
func (*ZjhBet) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *ZjhBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhBet) GetBetzone() []int32 {
	if m != nil {
		return m.Betzone
	}
	return nil
}

// 开奖,广播
type ZjhLottery struct {
	// 牌面
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Zjhpai []*ZjhPai    `protobuf:"bytes,2,rep,name=zjhpai" json:"zjhpai,omitempty"`
	// 自己的输赢
	Balance          *int32 `protobuf:"varint,7,opt,name=balance" json:"balance,omitempty"`
	WinAmount        *int32 `protobuf:"varint,8,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhLottery) Reset()                    { *m = ZjhLottery{} }
func (m *ZjhLottery) String() string            { return proto.CompactTextString(m) }
func (*ZjhLottery) ProtoMessage()               {}
func (*ZjhLottery) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *ZjhLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZjhLottery) GetZjhpai() []*ZjhPai {
	if m != nil {
		return m.Zjhpai
	}
	return nil
}

func (m *ZjhLottery) GetBalance() int32 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ZjhLottery) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 对押注的信息进行广播
type BroadcastBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Betzone          []int32      `protobuf:"varint,2,rep,name=betzone" json:"betzone,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BroadcastBet) Reset()                    { *m = BroadcastBet{} }
func (m *BroadcastBet) String() string            { return proto.CompactTextString(m) }
func (*BroadcastBet) ProtoMessage()               {}
func (*BroadcastBet) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *BroadcastBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BroadcastBet) GetBetzone() []int32 {
	if m != nil {
		return m.Betzone
	}
	return nil
}

// 扎金花牌的结构
type ZjhPai struct {
	PaiType          *int32 `protobuf:"varint,1,opt,name=PaiType" json:"PaiType,omitempty"`
	LotteryType      *int32 `protobuf:"varint,2,opt,name=lotteryType" json:"lotteryType,omitempty"`
	Result           *bool  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Pai              []*Pai `protobuf:"bytes,4,rep,name=pai" json:"pai,omitempty"`
	WinAmount        *int32 `protobuf:"varint,7,opt,name=winAmount" json:"winAmount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZjhPai) Reset()                    { *m = ZjhPai{} }
func (m *ZjhPai) String() string            { return proto.CompactTextString(m) }
func (*ZjhPai) ProtoMessage()               {}
func (*ZjhPai) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *ZjhPai) GetPaiType() int32 {
	if m != nil && m.PaiType != nil {
		return *m.PaiType
	}
	return 0
}

func (m *ZjhPai) GetLotteryType() int32 {
	if m != nil && m.LotteryType != nil {
		return *m.LotteryType
	}
	return 0
}

func (m *ZjhPai) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *ZjhPai) GetPai() []*Pai {
	if m != nil {
		return m.Pai
	}
	return nil
}

func (m *ZjhPai) GetWinAmount() int32 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// 单张牌的结构
type Pai struct {
	MapKey           *int32  `protobuf:"varint,1,opt,name=mapKey" json:"mapKey,omitempty"`
	Mapdes           *string `protobuf:"bytes,2,opt,name=mapdes" json:"mapdes,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Flower           *string `protobuf:"bytes,4,opt,name=flower" json:"flower,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Pai) Reset()                    { *m = Pai{} }
func (m *Pai) String() string            { return proto.CompactTextString(m) }
func (*Pai) ProtoMessage()               {}
func (*Pai) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *Pai) GetMapKey() int32 {
	if m != nil && m.MapKey != nil {
		return *m.MapKey
	}
	return 0
}

func (m *Pai) GetMapdes() string {
	if m != nil && m.Mapdes != nil {
		return *m.Mapdes
	}
	return ""
}

func (m *Pai) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Pai) GetFlower() string {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return ""
}

func (m *Pai) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 查询无座玩家列表,除了坐在位子上的玩家,以外的玩家
type ZjhQueryNoSeatUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhQueryNoSeatUser) Reset()                    { *m = ZjhQueryNoSeatUser{} }
func (m *ZjhQueryNoSeatUser) String() string            { return proto.CompactTextString(m) }
func (*ZjhQueryNoSeatUser) ProtoMessage()               {}
func (*ZjhQueryNoSeatUser) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *ZjhQueryNoSeatUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 座位
type ZjhReqSeat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhReqSeat) Reset()                    { *m = ZjhReqSeat{} }
func (m *ZjhReqSeat) String() string            { return proto.CompactTextString(m) }
func (*ZjhReqSeat) ProtoMessage()               {}
func (*ZjhReqSeat) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *ZjhReqSeat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ZjhMsg struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZjhMsg) Reset()                    { *m = ZjhMsg{} }
func (m *ZjhMsg) String() string            { return proto.CompactTextString(m) }
func (*ZjhMsg) ProtoMessage()               {}
func (*ZjhMsg) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *ZjhMsg) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ZjhRoom)(nil), "bbproto.ZjhRoom")
	proto.RegisterType((*ZjhBet)(nil), "bbproto.ZjhBet")
	proto.RegisterType((*ZjhLottery)(nil), "bbproto.ZjhLottery")
	proto.RegisterType((*BroadcastBet)(nil), "bbproto.BroadcastBet")
	proto.RegisterType((*ZjhPai)(nil), "bbproto.ZjhPai")
	proto.RegisterType((*Pai)(nil), "bbproto.Pai")
	proto.RegisterType((*ZjhQueryNoSeatUser)(nil), "bbproto.ZjhQueryNoSeatUser")
	proto.RegisterType((*ZjhReqSeat)(nil), "bbproto.ZjhReqSeat")
	proto.RegisterType((*ZjhMsg)(nil), "bbproto.ZjhMsg")
}

var fileDescriptor9 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x8f, 0xd3, 0x40,
	0x0c, 0x25, 0x4d, 0x9b, 0x6e, 0xbc, 0x5d, 0x2a, 0x06, 0x0e, 0x01, 0x09, 0xb1, 0x8a, 0x38, 0x70,
	0xca, 0x61, 0x8f, 0x5c, 0x10, 0x2b, 0x21, 0x21, 0xf1, 0xa1, 0xd2, 0x5d, 0x2e, 0xdc, 0x9c, 0xd6,
	0x90, 0x64, 0x93, 0x4c, 0x76, 0x32, 0xa1, 0x6a, 0x7f, 0x30, 0xbf, 0x03, 0x8f, 0x13, 0xb6, 0x02,
	0x81, 0x14, 0x89, 0x4b, 0xeb, 0xf8, 0x8d, 0xdf, 0xf3, 0xb3, 0x0d, 0xcb, 0x43, 0x86, 0x45, 0x5e,
	0x67, 0x1d, 0x26, 0x8d, 0xd1, 0x56, 0xab, 0x79, 0x9a, 0x4a, 0xf0, 0x04, 0x52, 0x6c, 0x29, 0x19,
	0xe2, 0xae, 0x25, 0xd3, 0xc7, 0xf1, 0x0f, 0x0f, 0xe6, 0x5f, 0x8a, 0x6c, 0xad, 0x75, 0xa5, 0x9e,
	0x43, 0x90, 0x11, 0x6e, 0xc9, 0x44, 0xde, 0xb9, 0xf7, 0xe2, 0xf4, 0xe2, 0x51, 0x32, 0x54, 0x27,
	0x2b, 0xf7, 0xfb, 0x56, 0x30, 0xb5, 0x84, 0xb9, 0xa1, 0xdb, 0xeb, 0x7d, 0x43, 0xd1, 0x84, 0x9f,
	0xcd, 0x5c, 0xa2, 0xc0, 0xcd, 0x4d, 0xa3, 0x6d, 0xe4, 0x73, 0xc2, 0x57, 0x4f, 0x21, 0x48, 0xb1,
	0xbe, 0x61, 0x9e, 0xa9, 0xf0, 0x9c, 0xdd, 0xf1, 0x7c, 0x66, 0x61, 0xf5, 0x18, 0x26, 0x15, 0x45,
	0xb3, 0xbf, 0x41, 0xcf, 0x20, 0x38, 0x14, 0x59, 0x83, 0x79, 0x14, 0x9c, 0xfb, 0x0c, 0x2f, 0xef,
	0x60, 0xee, 0x71, 0x85, 0xb9, 0xd3, 0x4a, 0xc9, 0x5e, 0xe7, 0x4c, 0x30, 0x17, 0xf1, 0x87, 0x70,
	0x5a, 0x6a, 0x6b, 0xc9, 0xec, 0x25, 0x79, 0x22, 0x49, 0x05, 0x60, 0xd8, 0xd0, 0x95, 0x45, 0xdb,
	0xb5, 0x51, 0xe8, 0x72, 0xf1, 0x2b, 0x08, 0x98, 0xe3, 0x92, 0xec, 0x78, 0x9b, 0xac, 0x74, 0xd0,
	0xb5, 0xb3, 0xe9, 0x33, 0xc1, 0x0e, 0x80, 0x09, 0xde, 0xf7, 0x62, 0x23, 0x49, 0x8e, 0x7e, 0x26,
	0xff, 0xf6, 0x83, 0x25, 0xd6, 0x9b, 0x5f, 0x7e, 0x1e, 0x40, 0xb8, 0xcb, 0xeb, 0xd7, 0x95, 0xee,
	0x6a, 0xdb, 0xbb, 0x89, 0xdf, 0xc0, 0xe2, 0xd2, 0x68, 0xdc, 0x6e, 0xb0, 0xb5, 0xff, 0xd1, 0x7f,
	0x29, 0x03, 0x18, 0x44, 0xf9, 0x4f, 0x36, 0xe8, 0xfd, 0x39, 0xc4, 0xe3, 0x5a, 0xef, 0x43, 0x60,
	0xa8, 0xed, 0xca, 0x7e, 0xab, 0x27, 0xbc, 0x36, 0xdf, 0x19, 0x99, 0x8a, 0x91, 0xc5, 0x51, 0x93,
	0x09, 0x7f, 0x6b, 0x5a, 0x7c, 0xc4, 0x6b, 0xf0, 0x1d, 0xc2, 0x24, 0x15, 0x36, 0xef, 0x68, 0x3f,
	0x28, 0xf5, 0xdf, 0x5b, 0x6a, 0x45, 0x24, 0x54, 0x67, 0x30, 0xfb, 0x8e, 0x65, 0x47, 0xa2, 0x21,
	0xf0, 0xd7, 0x52, 0xef, 0x86, 0xcb, 0x09, 0xd5, 0x02, 0xa6, 0x35, 0x0e, 0xc7, 0x12, 0xc6, 0x2f,
	0x41, 0xb1, 0x83, 0x4f, 0x1d, 0xf7, 0xf9, 0x51, 0x5f, 0x11, 0x5a, 0xb9, 0x99, 0x51, 0xe3, 0x88,
	0x2f, 0x64, 0x7b, 0x6b, 0xba, 0x75, 0x75, 0x23, 0x6b, 0x12, 0x99, 0xd8, 0x87, 0xf6, 0xdb, 0xb8,
	0xf7, 0xab, 0x7b, 0x2b, 0xef, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0xf0, 0xec, 0x45, 0x82,
	0x03, 0x00, 0x00,
}
