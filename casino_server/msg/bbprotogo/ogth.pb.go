// Code generated by protoc-gen-go.
// source: ogth.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 注册
// THRANID_SVR_REG = 0x00001003;//注册消息
type REQThranReg struct {
	UserName         *string `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	Pwd              *string `protobuf:"bytes,2,opt,name=Pwd" json:"Pwd,omitempty"`
	VerifyId         *int32  `protobuf:"varint,3,opt,name=VerifyId" json:"VerifyId,omitempty"`
	VerifyStr        *string `protobuf:"bytes,4,opt,name=VerifyStr" json:"VerifyStr,omitempty"`
	SecureID         *string `protobuf:"bytes,5,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,6,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,7,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,8,opt,name=GameId" json:"GameId,omitempty"`
	Token            *string `protobuf:"bytes,9,opt,name=token" json:"token,omitempty"`
	UserNameApl      []byte  `protobuf:"bytes,10,opt,name=UserNameApl" json:"UserNameApl,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,11,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	Sex              *int32  `protobuf:"varint,12,opt,name=Sex,def=0" json:"Sex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranReg) Reset()                    { *m = REQThranReg{} }
func (m *REQThranReg) String() string            { return proto.CompactTextString(m) }
func (*REQThranReg) ProtoMessage()               {}
func (*REQThranReg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

const Default_REQThranReg_RoomAdapte int32 = 0
const Default_REQThranReg_Sex int32 = 0

func (m *REQThranReg) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *REQThranReg) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQThranReg) GetVerifyId() int32 {
	if m != nil && m.VerifyId != nil {
		return *m.VerifyId
	}
	return 0
}

func (m *REQThranReg) GetVerifyStr() string {
	if m != nil && m.VerifyStr != nil {
		return *m.VerifyStr
	}
	return ""
}

func (m *REQThranReg) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQThranReg) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranReg) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranReg) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQThranReg) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQThranReg) GetUserNameApl() []byte {
	if m != nil {
		return m.UserNameApl
	}
	return nil
}

func (m *REQThranReg) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQThranReg_RoomAdapte
}

func (m *REQThranReg) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return Default_REQThranReg_Sex
}

type ACKThranReg struct {
	AckResult        *int32        `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	ErrorStr         *string       `protobuf:"bytes,2,opt,name=ErrorStr" json:"ErrorStr,omitempty"`
	Cert             []byte        `protobuf:"bytes,3,opt,name=cert" json:"cert,omitempty"`
	RoleName         *string       `protobuf:"bytes,4,opt,name=RoleName" json:"RoleName,omitempty"`
	RoomList         []*OGRoomInfo `protobuf:"bytes,5,rep,name=RoomList" json:"RoomList,omitempty"`
	LoginId          *int32        `protobuf:"varint,6,opt,name=LoginId" json:"LoginId,omitempty"`
	MatchRoomList    []*OGRoomInfo `protobuf:"bytes,7,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	CertNoRole       []byte        `protobuf:"bytes,8,opt,name=CertNoRole" json:"CertNoRole,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ACKThranReg) Reset()                    { *m = ACKThranReg{} }
func (m *ACKThranReg) String() string            { return proto.CompactTextString(m) }
func (*ACKThranReg) ProtoMessage()               {}
func (*ACKThranReg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *ACKThranReg) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranReg) GetErrorStr() string {
	if m != nil && m.ErrorStr != nil {
		return *m.ErrorStr
	}
	return ""
}

func (m *ACKThranReg) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ACKThranReg) GetRoleName() string {
	if m != nil && m.RoleName != nil {
		return *m.RoleName
	}
	return ""
}

func (m *ACKThranReg) GetRoomList() []*OGRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ACKThranReg) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *ACKThranReg) GetMatchRoomList() []*OGRoomInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

func (m *ACKThranReg) GetCertNoRole() []byte {
	if m != nil {
		return m.CertNoRole
	}
	return nil
}

// 登录THRAN服务器
// THRANID_SVR_LOGINCONN = 0x00001001;//登录消息
type REQThranConn struct {
	UserName         *string `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	Pwd              *string `protobuf:"bytes,3,opt,name=Pwd" json:"Pwd,omitempty"`
	Sex              *int32  `protobuf:"varint,4,opt,name=Sex" json:"Sex,omitempty"`
	SecureID         *string `protobuf:"bytes,5,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,6,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,7,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,8,opt,name=GameId" json:"GameId,omitempty"`
	Token            *string `protobuf:"bytes,9,opt,name=token" json:"token,omitempty"`
	UserNameApl      []byte  `protobuf:"bytes,10,opt,name=UserNameApl" json:"UserNameApl,omitempty"`
	VerifyId         *int32  `protobuf:"varint,11,opt,name=VerifyId" json:"VerifyId,omitempty"`
	Ticket           *string `protobuf:"bytes,12,opt,name=Ticket" json:"Ticket,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,13,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	LoginType        *int32  `protobuf:"varint,14,opt,name=LoginType,def=0" json:"LoginType,omitempty"`
	GroupID          *int32  `protobuf:"varint,15,opt,name=GroupID" json:"GroupID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranConn) Reset()                    { *m = REQThranConn{} }
func (m *REQThranConn) String() string            { return proto.CompactTextString(m) }
func (*REQThranConn) ProtoMessage()               {}
func (*REQThranConn) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

const Default_REQThranConn_RoomAdapte int32 = 0
const Default_REQThranConn_LoginType int32 = 0

func (m *REQThranConn) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *REQThranConn) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *REQThranConn) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQThranConn) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *REQThranConn) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQThranConn) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranConn) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQThranConn) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQThranConn) GetUserNameApl() []byte {
	if m != nil {
		return m.UserNameApl
	}
	return nil
}

func (m *REQThranConn) GetVerifyId() int32 {
	if m != nil && m.VerifyId != nil {
		return *m.VerifyId
	}
	return 0
}

func (m *REQThranConn) GetTicket() string {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return ""
}

func (m *REQThranConn) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQThranConn_RoomAdapte
}

func (m *REQThranConn) GetLoginType() int32 {
	if m != nil && m.LoginType != nil {
		return *m.LoginType
	}
	return Default_REQThranConn_LoginType
}

func (m *REQThranConn) GetGroupID() int32 {
	if m != nil && m.GroupID != nil {
		return *m.GroupID
	}
	return 0
}

type ACKThranConn struct {
	AckResult        *int32           `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	Cert             []byte           `protobuf:"bytes,2,opt,name=cert" json:"cert,omitempty"`
	UserName         *string          `protobuf:"bytes,3,opt,name=UserName" json:"UserName,omitempty"`
	RoleName         *string          `protobuf:"bytes,4,opt,name=RoleName" json:"RoleName,omitempty"`
	PassWord         *string          `protobuf:"bytes,5,opt,name=PassWord" json:"PassWord,omitempty"`
	YuanBaoCnt       *int32           `protobuf:"varint,6,opt,name=YuanBaoCnt" json:"YuanBaoCnt,omitempty"`
	CoinCnt          *int64           `protobuf:"varint,7,opt,name=CoinCnt" json:"CoinCnt,omitempty"`
	RoomList         []*OGRoomInfo    `protobuf:"bytes,8,rep,name=RoomList" json:"RoomList,omitempty"`
	LoginId          *int32           `protobuf:"varint,9,opt,name=LoginId" json:"LoginId,omitempty"`
	MatchRoomList    []*OGRoomInfo    `protobuf:"bytes,10,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	CertNoRole       []byte           `protobuf:"bytes,11,opt,name=CertNoRole" json:"CertNoRole,omitempty"`
	ThranRoomItems   []*ThranRoomInfo `protobuf:"bytes,12,rep,name=ThranRoomItems" json:"ThranRoomItems,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ACKThranConn) Reset()                    { *m = ACKThranConn{} }
func (m *ACKThranConn) String() string            { return proto.CompactTextString(m) }
func (*ACKThranConn) ProtoMessage()               {}
func (*ACKThranConn) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *ACKThranConn) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranConn) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ACKThranConn) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *ACKThranConn) GetRoleName() string {
	if m != nil && m.RoleName != nil {
		return *m.RoleName
	}
	return ""
}

func (m *ACKThranConn) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

func (m *ACKThranConn) GetYuanBaoCnt() int32 {
	if m != nil && m.YuanBaoCnt != nil {
		return *m.YuanBaoCnt
	}
	return 0
}

func (m *ACKThranConn) GetCoinCnt() int64 {
	if m != nil && m.CoinCnt != nil {
		return *m.CoinCnt
	}
	return 0
}

func (m *ACKThranConn) GetRoomList() []*OGRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ACKThranConn) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *ACKThranConn) GetMatchRoomList() []*OGRoomInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

func (m *ACKThranConn) GetCertNoRole() []byte {
	if m != nil {
		return m.CertNoRole
	}
	return nil
}

func (m *ACKThranConn) GetThranRoomItems() []*ThranRoomInfo {
	if m != nil {
		return m.ThranRoomItems
	}
	return nil
}

// 获取短证书  modify at 20120109  获取短证书
// THRANID_SVR_SHORTCERT = 0x00001005;//登录消息
type REQThranShortCert struct {
	UserName         *string `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	Pwd              *string `protobuf:"bytes,3,opt,name=Pwd" json:"Pwd,omitempty"`
	Sex              *int32  `protobuf:"varint,4,opt,name=Sex" json:"Sex,omitempty"`
	SecureID         *string `protobuf:"bytes,5,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,6,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,7,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,8,opt,name=GameId" json:"GameId,omitempty"`
	Token            *string `protobuf:"bytes,9,opt,name=token" json:"token,omitempty"`
	UserNameApl      []byte  `protobuf:"bytes,10,opt,name=UserNameApl" json:"UserNameApl,omitempty"`
	VerifyId         *int32  `protobuf:"varint,11,opt,name=VerifyId" json:"VerifyId,omitempty"`
	Ticket           *string `protobuf:"bytes,12,opt,name=Ticket" json:"Ticket,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,13,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranShortCert) Reset()                    { *m = REQThranShortCert{} }
func (m *REQThranShortCert) String() string            { return proto.CompactTextString(m) }
func (*REQThranShortCert) ProtoMessage()               {}
func (*REQThranShortCert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

const Default_REQThranShortCert_RoomAdapte int32 = 0

func (m *REQThranShortCert) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *REQThranShortCert) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *REQThranShortCert) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQThranShortCert) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *REQThranShortCert) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQThranShortCert) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranShortCert) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranShortCert) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQThranShortCert) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQThranShortCert) GetUserNameApl() []byte {
	if m != nil {
		return m.UserNameApl
	}
	return nil
}

func (m *REQThranShortCert) GetVerifyId() int32 {
	if m != nil && m.VerifyId != nil {
		return *m.VerifyId
	}
	return 0
}

func (m *REQThranShortCert) GetTicket() string {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return ""
}

func (m *REQThranShortCert) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQThranShortCert_RoomAdapte
}

type ACKThranShortCert struct {
	AckResult        *int32        `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	ShortCert        []byte        `protobuf:"bytes,2,opt,name=ShortCert" json:"ShortCert,omitempty"`
	UserName         *string       `protobuf:"bytes,3,opt,name=UserName" json:"UserName,omitempty"`
	RoomList         []*OGRoomInfo `protobuf:"bytes,4,rep,name=RoomList" json:"RoomList,omitempty"`
	MatchRoomList    []*OGRoomInfo `protobuf:"bytes,5,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ACKThranShortCert) Reset()                    { *m = ACKThranShortCert{} }
func (m *ACKThranShortCert) String() string            { return proto.CompactTextString(m) }
func (*ACKThranShortCert) ProtoMessage()               {}
func (*ACKThranShortCert) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *ACKThranShortCert) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranShortCert) GetShortCert() []byte {
	if m != nil {
		return m.ShortCert
	}
	return nil
}

func (m *ACKThranShortCert) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *ACKThranShortCert) GetRoomList() []*OGRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ACKThranShortCert) GetMatchRoomList() []*OGRoomInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

// 登录THRAN服务OpenId
// THRANID_SVR_REG = 0x00001004;//OpenId登录消息
type REQThranOpenId struct {
	UserName         []byte  `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	Pwd              *string `protobuf:"bytes,2,opt,name=Pwd" json:"Pwd,omitempty"`
	Type             *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	SecureID         *string `protobuf:"bytes,4,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,5,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,6,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,7,opt,name=GameId" json:"GameId,omitempty"`
	VerifyId         *int32  `protobuf:"varint,8,opt,name=VerifyId" json:"VerifyId,omitempty"`
	Ticket           *string `protobuf:"bytes,9,opt,name=Ticket" json:"Ticket,omitempty"`
	Token            *string `protobuf:"bytes,10,opt,name=token" json:"token,omitempty"`
	Thirdkey         *string `protobuf:"bytes,11,opt,name=Thirdkey" json:"Thirdkey,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,12,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	ThirdAppId       *string `protobuf:"bytes,13,opt,name=ThirdAppId" json:"ThirdAppId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranOpenId) Reset()                    { *m = REQThranOpenId{} }
func (m *REQThranOpenId) String() string            { return proto.CompactTextString(m) }
func (*REQThranOpenId) ProtoMessage()               {}
func (*REQThranOpenId) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

const Default_REQThranOpenId_RoomAdapte int32 = 0

func (m *REQThranOpenId) GetUserName() []byte {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *REQThranOpenId) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQThranOpenId) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *REQThranOpenId) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQThranOpenId) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranOpenId) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranOpenId) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQThranOpenId) GetVerifyId() int32 {
	if m != nil && m.VerifyId != nil {
		return *m.VerifyId
	}
	return 0
}

func (m *REQThranOpenId) GetTicket() string {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return ""
}

func (m *REQThranOpenId) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQThranOpenId) GetThirdkey() string {
	if m != nil && m.Thirdkey != nil {
		return *m.Thirdkey
	}
	return ""
}

func (m *REQThranOpenId) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQThranOpenId_RoomAdapte
}

func (m *REQThranOpenId) GetThirdAppId() string {
	if m != nil && m.ThirdAppId != nil {
		return *m.ThirdAppId
	}
	return ""
}

type ACKThranOpenId struct {
	AckResult        *int32        `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	Cert             []byte        `protobuf:"bytes,2,opt,name=cert" json:"cert,omitempty"`
	UserName         []byte        `protobuf:"bytes,3,opt,name=UserName" json:"UserName,omitempty"`
	RoleName         []byte        `protobuf:"bytes,4,opt,name=RoleName" json:"RoleName,omitempty"`
	YuanBaoCnt       *int32        `protobuf:"varint,5,opt,name=YuanBaoCnt" json:"YuanBaoCnt,omitempty"`
	CoinCnt          *int64        `protobuf:"varint,6,opt,name=CoinCnt" json:"CoinCnt,omitempty"`
	RoomList         []*OGRoomInfo `protobuf:"bytes,7,rep,name=RoomList" json:"RoomList,omitempty"`
	MatchRoomList    []*OGRoomInfo `protobuf:"bytes,8,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	LoginId          *int32        `protobuf:"varint,9,opt,name=LoginId" json:"LoginId,omitempty"`
	CertNoRole       []byte        `protobuf:"bytes,10,opt,name=CertNoRole" json:"CertNoRole,omitempty"`
	AchvId           []int32       `protobuf:"varint,11,rep,name=AchvId" json:"AchvId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ACKThranOpenId) Reset()                    { *m = ACKThranOpenId{} }
func (m *ACKThranOpenId) String() string            { return proto.CompactTextString(m) }
func (*ACKThranOpenId) ProtoMessage()               {}
func (*ACKThranOpenId) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *ACKThranOpenId) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranOpenId) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ACKThranOpenId) GetUserName() []byte {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *ACKThranOpenId) GetRoleName() []byte {
	if m != nil {
		return m.RoleName
	}
	return nil
}

func (m *ACKThranOpenId) GetYuanBaoCnt() int32 {
	if m != nil && m.YuanBaoCnt != nil {
		return *m.YuanBaoCnt
	}
	return 0
}

func (m *ACKThranOpenId) GetCoinCnt() int64 {
	if m != nil && m.CoinCnt != nil {
		return *m.CoinCnt
	}
	return 0
}

func (m *ACKThranOpenId) GetRoomList() []*OGRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ACKThranOpenId) GetMatchRoomList() []*OGRoomInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

func (m *ACKThranOpenId) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *ACKThranOpenId) GetCertNoRole() []byte {
	if m != nil {
		return m.CertNoRole
	}
	return nil
}

func (m *ACKThranOpenId) GetAchvId() []int32 {
	if m != nil {
		return m.AchvId
	}
	return nil
}

// 新浪微游戏操作
// THRANID_SVR_SINAGAME = 0x00003007;//新浪微游戏相关
type REQSinaGame struct {
	Thirdkey         *string        `protobuf:"bytes,1,opt,name=Thirdkey" json:"Thirdkey,omitempty"`
	InfoList         []*SinaApiInfo `protobuf:"bytes,2,rep,name=InfoList" json:"InfoList,omitempty"`
	SecureID         *string        `protobuf:"bytes,4,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32         `protobuf:"varint,5,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string        `protobuf:"bytes,6,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32         `protobuf:"varint,7,opt,name=GameId" json:"GameId,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *REQSinaGame) Reset()                    { *m = REQSinaGame{} }
func (m *REQSinaGame) String() string            { return proto.CompactTextString(m) }
func (*REQSinaGame) ProtoMessage()               {}
func (*REQSinaGame) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *REQSinaGame) GetThirdkey() string {
	if m != nil && m.Thirdkey != nil {
		return *m.Thirdkey
	}
	return ""
}

func (m *REQSinaGame) GetInfoList() []*SinaApiInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

func (m *REQSinaGame) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQSinaGame) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQSinaGame) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQSinaGame) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

type ACKSinaGame struct {
	AckResult        *int32        `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	RetList          []*SinaApiRet `protobuf:"bytes,2,rep,name=RetList" json:"RetList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ACKSinaGame) Reset()                    { *m = ACKSinaGame{} }
func (m *ACKSinaGame) String() string            { return proto.CompactTextString(m) }
func (*ACKSinaGame) ProtoMessage()               {}
func (*ACKSinaGame) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *ACKSinaGame) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKSinaGame) GetRetList() []*SinaApiRet {
	if m != nil {
		return m.RetList
	}
	return nil
}

// 发送新浪微博
// THRANID_SVR_WEIBO = 0x00003005;//发送微博
type REQWeiBo struct {
	UserName         []byte  `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	Pwd              *string `protobuf:"bytes,2,opt,name=Pwd" json:"Pwd,omitempty"`
	Type             *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	SecureID         *string `protobuf:"bytes,4,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,5,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,6,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,7,opt,name=GameId" json:"GameId,omitempty"`
	Token            *string `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	WbMsg            []byte  `protobuf:"bytes,9,opt,name=wbMsg" json:"wbMsg,omitempty"`
	WbPic            []byte  `protobuf:"bytes,10,opt,name=wbPic" json:"wbPic,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQWeiBo) Reset()                    { *m = REQWeiBo{} }
func (m *REQWeiBo) String() string            { return proto.CompactTextString(m) }
func (*REQWeiBo) ProtoMessage()               {}
func (*REQWeiBo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *REQWeiBo) GetUserName() []byte {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *REQWeiBo) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQWeiBo) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *REQWeiBo) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQWeiBo) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQWeiBo) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQWeiBo) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQWeiBo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQWeiBo) GetWbMsg() []byte {
	if m != nil {
		return m.WbMsg
	}
	return nil
}

func (m *REQWeiBo) GetWbPic() []byte {
	if m != nil {
		return m.WbPic
	}
	return nil
}

type ACKWeiBo struct {
	AckResult        *int32 `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ACKWeiBo) Reset()                    { *m = ACKWeiBo{} }
func (m *ACKWeiBo) String() string            { return proto.CompactTextString(m) }
func (*ACKWeiBo) ProtoMessage()               {}
func (*ACKWeiBo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func (m *ACKWeiBo) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

// 退出
// THRANID_SVR_EXIT = 0x00001002;//退出消息
type REQThranExit struct {
	LoginId          *int32  `protobuf:"varint,1,opt,name=LoginId" json:"LoginId,omitempty"`
	ExitType         *int32  `protobuf:"varint,2,opt,name=ExitType" json:"ExitType,omitempty"`
	ExitMsg          *string `protobuf:"bytes,3,opt,name=ExitMsg" json:"ExitMsg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranExit) Reset()                    { *m = REQThranExit{} }
func (m *REQThranExit) String() string            { return proto.CompactTextString(m) }
func (*REQThranExit) ProtoMessage()               {}
func (*REQThranExit) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{12} }

func (m *REQThranExit) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *REQThranExit) GetExitType() int32 {
	if m != nil && m.ExitType != nil {
		return *m.ExitType
	}
	return 0
}

func (m *REQThranExit) GetExitMsg() string {
	if m != nil && m.ExitMsg != nil {
		return *m.ExitMsg
	}
	return ""
}

// 获取游戏版本信息
// THRANID_SVR_VERSION = 0x00003001;//索蓝游戏版本消息
type REQThranGameVersion struct {
	CurVersion       *int32  `protobuf:"varint,1,opt,name=CurVersion" json:"CurVersion,omitempty"`
	GameId           *int32  `protobuf:"varint,2,opt,name=GameId" json:"GameId,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,3,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ResolutionID     *string `protobuf:"bytes,4,opt,name=ResolutionID" json:"ResolutionID,omitempty"`
	ChannelID        *string `protobuf:"bytes,5,opt,name=ChannelID" json:"ChannelID,omitempty"`
	LanguageID       *string `protobuf:"bytes,6,opt,name=LanguageID" json:"LanguageID,omitempty"`
	SmallVersion     *int32  `protobuf:"varint,7,opt,name=smallVersion" json:"smallVersion,omitempty"`
	ClientType       *string `protobuf:"bytes,8,opt,name=ClientType" json:"ClientType,omitempty"`
	ScreenSize       *string `protobuf:"bytes,9,opt,name=ScreenSize" json:"ScreenSize,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,10,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranGameVersion) Reset()                    { *m = REQThranGameVersion{} }
func (m *REQThranGameVersion) String() string            { return proto.CompactTextString(m) }
func (*REQThranGameVersion) ProtoMessage()               {}
func (*REQThranGameVersion) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{13} }

const Default_REQThranGameVersion_RoomAdapte int32 = 0

func (m *REQThranGameVersion) GetCurVersion() int32 {
	if m != nil && m.CurVersion != nil {
		return *m.CurVersion
	}
	return 0
}

func (m *REQThranGameVersion) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQThranGameVersion) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranGameVersion) GetResolutionID() string {
	if m != nil && m.ResolutionID != nil {
		return *m.ResolutionID
	}
	return ""
}

func (m *REQThranGameVersion) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranGameVersion) GetLanguageID() string {
	if m != nil && m.LanguageID != nil {
		return *m.LanguageID
	}
	return ""
}

func (m *REQThranGameVersion) GetSmallVersion() int32 {
	if m != nil && m.SmallVersion != nil {
		return *m.SmallVersion
	}
	return 0
}

func (m *REQThranGameVersion) GetClientType() string {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return ""
}

func (m *REQThranGameVersion) GetScreenSize() string {
	if m != nil && m.ScreenSize != nil {
		return *m.ScreenSize
	}
	return ""
}

func (m *REQThranGameVersion) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQThranGameVersion_RoomAdapte
}

type ACKThranGameVersion struct {
	AckResult        *int32              `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	PlayEnable       *string             `protobuf:"bytes,2,opt,name=PlayEnable" json:"PlayEnable,omitempty"`
	DownloadUrl      *string             `protobuf:"bytes,3,opt,name=DownloadUrl" json:"DownloadUrl,omitempty"`
	GameServerIp     *string             `protobuf:"bytes,4,opt,name=GameServerIp" json:"GameServerIp,omitempty"`
	GameServerPort   *string             `protobuf:"bytes,5,opt,name=GameServerPort" json:"GameServerPort,omitempty"`
	GameRankEnable   *string             `protobuf:"bytes,6,opt,name=GameRankEnable" json:"GameRankEnable,omitempty"`
	GameRankDef      *string             `protobuf:"bytes,7,opt,name=GameRankDef" json:"GameRankDef,omitempty"`
	IfPreserve       *string             `protobuf:"bytes,8,opt,name=IfPreserve" json:"IfPreserve,omitempty"`
	PreserveMsg      *string             `protobuf:"bytes,9,opt,name=PreserveMsg" json:"PreserveMsg,omitempty"`
	MatchInfoList    []*OGThranMatchInfo `protobuf:"bytes,10,rep,name=MatchInfoList" json:"MatchInfoList,omitempty"`
	DownloadReasion  *int32              `protobuf:"varint,11,opt,name=DownloadReasion" json:"DownloadReasion,omitempty"`
	GameId           *int32              `protobuf:"varint,12,opt,name=GameId" json:"GameId,omitempty"`
	GameSort         *int32              `protobuf:"varint,13,opt,name=gameSort" json:"gameSort,omitempty"`
	MatchRoomList    []*OGRoomInfo       `protobuf:"bytes,14,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	JssList          []*ThranJSSInfo     `protobuf:"bytes,15,rep,name=JssList" json:"JssList,omitempty"`
	IfSearch         *string             `protobuf:"bytes,16,opt,name=IfSearch" json:"IfSearch,omitempty"`
	BulletinList     []*OGBulletinInfo   `protobuf:"bytes,17,rep,name=BulletinList" json:"BulletinList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ACKThranGameVersion) Reset()                    { *m = ACKThranGameVersion{} }
func (m *ACKThranGameVersion) String() string            { return proto.CompactTextString(m) }
func (*ACKThranGameVersion) ProtoMessage()               {}
func (*ACKThranGameVersion) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{14} }

func (m *ACKThranGameVersion) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranGameVersion) GetPlayEnable() string {
	if m != nil && m.PlayEnable != nil {
		return *m.PlayEnable
	}
	return ""
}

func (m *ACKThranGameVersion) GetDownloadUrl() string {
	if m != nil && m.DownloadUrl != nil {
		return *m.DownloadUrl
	}
	return ""
}

func (m *ACKThranGameVersion) GetGameServerIp() string {
	if m != nil && m.GameServerIp != nil {
		return *m.GameServerIp
	}
	return ""
}

func (m *ACKThranGameVersion) GetGameServerPort() string {
	if m != nil && m.GameServerPort != nil {
		return *m.GameServerPort
	}
	return ""
}

func (m *ACKThranGameVersion) GetGameRankEnable() string {
	if m != nil && m.GameRankEnable != nil {
		return *m.GameRankEnable
	}
	return ""
}

func (m *ACKThranGameVersion) GetGameRankDef() string {
	if m != nil && m.GameRankDef != nil {
		return *m.GameRankDef
	}
	return ""
}

func (m *ACKThranGameVersion) GetIfPreserve() string {
	if m != nil && m.IfPreserve != nil {
		return *m.IfPreserve
	}
	return ""
}

func (m *ACKThranGameVersion) GetPreserveMsg() string {
	if m != nil && m.PreserveMsg != nil {
		return *m.PreserveMsg
	}
	return ""
}

func (m *ACKThranGameVersion) GetMatchInfoList() []*OGThranMatchInfo {
	if m != nil {
		return m.MatchInfoList
	}
	return nil
}

func (m *ACKThranGameVersion) GetDownloadReasion() int32 {
	if m != nil && m.DownloadReasion != nil {
		return *m.DownloadReasion
	}
	return 0
}

func (m *ACKThranGameVersion) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *ACKThranGameVersion) GetGameSort() int32 {
	if m != nil && m.GameSort != nil {
		return *m.GameSort
	}
	return 0
}

func (m *ACKThranGameVersion) GetMatchRoomList() []*OGRoomInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

func (m *ACKThranGameVersion) GetJssList() []*ThranJSSInfo {
	if m != nil {
		return m.JssList
	}
	return nil
}

func (m *ACKThranGameVersion) GetIfSearch() string {
	if m != nil && m.IfSearch != nil {
		return *m.IfSearch
	}
	return ""
}

func (m *ACKThranGameVersion) GetBulletinList() []*OGBulletinInfo {
	if m != nil {
		return m.BulletinList
	}
	return nil
}

// 获取验证码
// THRANID_SVR_VERIFY = 0x00003003;//获取验证码信息
type REQThranNewVerify struct {
	SecureID         *string `protobuf:"bytes,1,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,2,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,3,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,4,opt,name=GameId" json:"GameId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranNewVerify) Reset()                    { *m = REQThranNewVerify{} }
func (m *REQThranNewVerify) String() string            { return proto.CompactTextString(m) }
func (*REQThranNewVerify) ProtoMessage()               {}
func (*REQThranNewVerify) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{15} }

func (m *REQThranNewVerify) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQThranNewVerify) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQThranNewVerify) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQThranNewVerify) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

type ACKThranNewVerify struct {
	AckResult        *int32  `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	ErrorStr         *string `protobuf:"bytes,2,opt,name=ErrorStr" json:"ErrorStr,omitempty"`
	Verify           []byte  `protobuf:"bytes,3,opt,name=Verify" json:"Verify,omitempty"`
	VerifyId         *int32  `protobuf:"varint,4,opt,name=VerifyId" json:"VerifyId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ACKThranNewVerify) Reset()                    { *m = ACKThranNewVerify{} }
func (m *ACKThranNewVerify) String() string            { return proto.CompactTextString(m) }
func (*ACKThranNewVerify) ProtoMessage()               {}
func (*ACKThranNewVerify) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{16} }

func (m *ACKThranNewVerify) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKThranNewVerify) GetErrorStr() string {
	if m != nil && m.ErrorStr != nil {
		return *m.ErrorStr
	}
	return ""
}

func (m *ACKThranNewVerify) GetVerify() []byte {
	if m != nil {
		return m.Verify
	}
	return nil
}

func (m *ACKThranNewVerify) GetVerifyId() int32 {
	if m != nil && m.VerifyId != nil {
		return *m.VerifyId
	}
	return 0
}

// 找回密码功能
// THRANID_SVR_FINDPWD = 0x00003002;//找回密码功能
// 新设置的密码未设置，表示只发送密码而不重置
// 新设置的密码不未空时，表示需要用户点击邮箱中的链接才能重置成功，且更新用户状态为已激活
type REQThranFindPwd struct {
	Email            *string `protobuf:"bytes,1,opt,name=Email" json:"Email,omitempty"`
	NewPwd           *string `protobuf:"bytes,2,opt,name=NewPwd" json:"NewPwd,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQThranFindPwd) Reset()                    { *m = REQThranFindPwd{} }
func (m *REQThranFindPwd) String() string            { return proto.CompactTextString(m) }
func (*REQThranFindPwd) ProtoMessage()               {}
func (*REQThranFindPwd) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{17} }

func (m *REQThranFindPwd) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *REQThranFindPwd) GetNewPwd() string {
	if m != nil && m.NewPwd != nil {
		return *m.NewPwd
	}
	return ""
}

type ACKThranFindPwd struct {
	AckResult        *int32 `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ACKThranFindPwd) Reset()                    { *m = ACKThranFindPwd{} }
func (m *ACKThranFindPwd) String() string            { return proto.CompactTextString(m) }
func (*ACKThranFindPwd) ProtoMessage()               {}
func (*ACKThranFindPwd) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{18} }

func (m *ACKThranFindPwd) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

// Thran心跳
// THRANID_SVR_HEART = 0x00003006;//thran的心跳
// REQ只有消息头，没有消息体
type ACKThranHeart struct {
	ServTime         *string `protobuf:"bytes,1,opt,name=ServTime" json:"ServTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ACKThranHeart) Reset()                    { *m = ACKThranHeart{} }
func (m *ACKThranHeart) String() string            { return proto.CompactTextString(m) }
func (*ACKThranHeart) ProtoMessage()               {}
func (*ACKThranHeart) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{19} }

func (m *ACKThranHeart) GetServTime() string {
	if m != nil && m.ServTime != nil {
		return *m.ServTime
	}
	return ""
}

// 相关的结构
// 新浪微游戏结构
type SinaApiInfo struct {
	ApiType          *int32  `protobuf:"varint,1,opt,name=ApiType" json:"ApiType,omitempty"`
	RetValue         *string `protobuf:"bytes,2,opt,name=RetValue" json:"RetValue,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=UserId" json:"UserId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SinaApiInfo) Reset()                    { *m = SinaApiInfo{} }
func (m *SinaApiInfo) String() string            { return proto.CompactTextString(m) }
func (*SinaApiInfo) ProtoMessage()               {}
func (*SinaApiInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{20} }

func (m *SinaApiInfo) GetApiType() int32 {
	if m != nil && m.ApiType != nil {
		return *m.ApiType
	}
	return 0
}

func (m *SinaApiInfo) GetRetValue() string {
	if m != nil && m.RetValue != nil {
		return *m.RetValue
	}
	return ""
}

func (m *SinaApiInfo) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

// 新浪微游戏结果返回结构
type SinaApiRet struct {
	RetResult        *int32  `protobuf:"varint,1,opt,name=RetResult" json:"RetResult,omitempty"`
	ApiType          *int32  `protobuf:"varint,2,opt,name=ApiType" json:"ApiType,omitempty"`
	RetValue         *string `protobuf:"bytes,3,opt,name=RetValue" json:"RetValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SinaApiRet) Reset()                    { *m = SinaApiRet{} }
func (m *SinaApiRet) String() string            { return proto.CompactTextString(m) }
func (*SinaApiRet) ProtoMessage()               {}
func (*SinaApiRet) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{21} }

func (m *SinaApiRet) GetRetResult() int32 {
	if m != nil && m.RetResult != nil {
		return *m.RetResult
	}
	return 0
}

func (m *SinaApiRet) GetApiType() int32 {
	if m != nil && m.ApiType != nil {
		return *m.ApiType
	}
	return 0
}

func (m *SinaApiRet) GetRetValue() string {
	if m != nil && m.RetValue != nil {
		return *m.RetValue
	}
	return ""
}

// 游戏房间结构
type OGRoomInfo struct {
	RoomId           *string `protobuf:"bytes,1,opt,name=RoomId" json:"RoomId,omitempty"`
	RoomRank         *string `protobuf:"bytes,2,opt,name=RoomRank" json:"RoomRank,omitempty"`
	RoomIp           *string `protobuf:"bytes,3,opt,name=RoomIp" json:"RoomIp,omitempty"`
	RoomPort         *string `protobuf:"bytes,4,opt,name=RoomPort" json:"RoomPort,omitempty"`
	RoomStatus       *string `protobuf:"bytes,5,opt,name=RoomStatus" json:"RoomStatus,omitempty"`
	RoomMinGold      *string `protobuf:"bytes,6,opt,name=RoomMinGold" json:"RoomMinGold,omitempty"`
	RoomMaxGold      *string `protobuf:"bytes,7,opt,name=RoomMaxGold" json:"RoomMaxGold,omitempty"`
	RoomMinPlay      *string `protobuf:"bytes,8,opt,name=RoomMinPlay" json:"RoomMinPlay,omitempty"`
	RoomType         *string `protobuf:"bytes,9,opt,name=RoomType" json:"RoomType,omitempty"`
	ServerType       *string `protobuf:"bytes,10,opt,name=ServerType" json:"ServerType,omitempty"`
	Description      *string `protobuf:"bytes,11,opt,name=Description" json:"Description,omitempty"`
	RoomName         *string `protobuf:"bytes,12,opt,name=RoomName" json:"RoomName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OGRoomInfo) Reset()                    { *m = OGRoomInfo{} }
func (m *OGRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*OGRoomInfo) ProtoMessage()               {}
func (*OGRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{22} }

func (m *OGRoomInfo) GetRoomId() string {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return ""
}

func (m *OGRoomInfo) GetRoomRank() string {
	if m != nil && m.RoomRank != nil {
		return *m.RoomRank
	}
	return ""
}

func (m *OGRoomInfo) GetRoomIp() string {
	if m != nil && m.RoomIp != nil {
		return *m.RoomIp
	}
	return ""
}

func (m *OGRoomInfo) GetRoomPort() string {
	if m != nil && m.RoomPort != nil {
		return *m.RoomPort
	}
	return ""
}

func (m *OGRoomInfo) GetRoomStatus() string {
	if m != nil && m.RoomStatus != nil {
		return *m.RoomStatus
	}
	return ""
}

func (m *OGRoomInfo) GetRoomMinGold() string {
	if m != nil && m.RoomMinGold != nil {
		return *m.RoomMinGold
	}
	return ""
}

func (m *OGRoomInfo) GetRoomMaxGold() string {
	if m != nil && m.RoomMaxGold != nil {
		return *m.RoomMaxGold
	}
	return ""
}

func (m *OGRoomInfo) GetRoomMinPlay() string {
	if m != nil && m.RoomMinPlay != nil {
		return *m.RoomMinPlay
	}
	return ""
}

func (m *OGRoomInfo) GetRoomType() string {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ""
}

func (m *OGRoomInfo) GetServerType() string {
	if m != nil && m.ServerType != nil {
		return *m.ServerType
	}
	return ""
}

func (m *OGRoomInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *OGRoomInfo) GetRoomName() string {
	if m != nil && m.RoomName != nil {
		return *m.RoomName
	}
	return ""
}

// 比赛信息结构
type OGThranMatchInfo struct {
	MatchID   *int32  `protobuf:"varint,1,opt,name=MatchID" json:"MatchID,omitempty"`
	MatchName *string `protobuf:"bytes,2,opt,name=MatchName" json:"MatchName,omitempty"`
	// 以下参数在斗地主比赛中应用
	AwardName        *string `protobuf:"bytes,3,opt,name=AwardName" json:"AwardName,omitempty"`
	AwardSum         *int32  `protobuf:"varint,4,opt,name=AwardSum" json:"AwardSum,omitempty"`
	MatchTerm        *string `protobuf:"bytes,5,opt,name=MatchTerm" json:"MatchTerm,omitempty"`
	HumanLimit       *int32  `protobuf:"varint,6,opt,name=HumanLimit" json:"HumanLimit,omitempty"`
	MatchHumanSum    *int32  `protobuf:"varint,7,opt,name=MatchHumanSum" json:"MatchHumanSum,omitempty"`
	MatchType        *int32  `protobuf:"varint,8,opt,name=MatchType" json:"MatchType,omitempty"`
	MatchInterval    *int32  `protobuf:"varint,9,opt,name=MatchInterval" json:"MatchInterval,omitempty"`
	MatchPrize       *string `protobuf:"bytes,10,opt,name=MatchPrize" json:"MatchPrize,omitempty"`
	MatchProcess     *string `protobuf:"bytes,11,opt,name=MatchProcess" json:"MatchProcess,omitempty"`
	MatchDate        *string `protobuf:"bytes,12,opt,name=MatchDate" json:"MatchDate,omitempty"`
	MatchFee         *string `protobuf:"bytes,13,opt,name=MatchFee" json:"MatchFee,omitempty"`
	MatchArea        *int32  `protobuf:"varint,14,opt,name=MatchArea" json:"MatchArea,omitempty"`
	Description      *string `protobuf:"bytes,15,opt,name=Description" json:"Description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OGThranMatchInfo) Reset()                    { *m = OGThranMatchInfo{} }
func (m *OGThranMatchInfo) String() string            { return proto.CompactTextString(m) }
func (*OGThranMatchInfo) ProtoMessage()               {}
func (*OGThranMatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{23} }

func (m *OGThranMatchInfo) GetMatchID() int32 {
	if m != nil && m.MatchID != nil {
		return *m.MatchID
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchName() string {
	if m != nil && m.MatchName != nil {
		return *m.MatchName
	}
	return ""
}

func (m *OGThranMatchInfo) GetAwardName() string {
	if m != nil && m.AwardName != nil {
		return *m.AwardName
	}
	return ""
}

func (m *OGThranMatchInfo) GetAwardSum() int32 {
	if m != nil && m.AwardSum != nil {
		return *m.AwardSum
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchTerm() string {
	if m != nil && m.MatchTerm != nil {
		return *m.MatchTerm
	}
	return ""
}

func (m *OGThranMatchInfo) GetHumanLimit() int32 {
	if m != nil && m.HumanLimit != nil {
		return *m.HumanLimit
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchHumanSum() int32 {
	if m != nil && m.MatchHumanSum != nil {
		return *m.MatchHumanSum
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchType() int32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchInterval() int32 {
	if m != nil && m.MatchInterval != nil {
		return *m.MatchInterval
	}
	return 0
}

func (m *OGThranMatchInfo) GetMatchPrize() string {
	if m != nil && m.MatchPrize != nil {
		return *m.MatchPrize
	}
	return ""
}

func (m *OGThranMatchInfo) GetMatchProcess() string {
	if m != nil && m.MatchProcess != nil {
		return *m.MatchProcess
	}
	return ""
}

func (m *OGThranMatchInfo) GetMatchDate() string {
	if m != nil && m.MatchDate != nil {
		return *m.MatchDate
	}
	return ""
}

func (m *OGThranMatchInfo) GetMatchFee() string {
	if m != nil && m.MatchFee != nil {
		return *m.MatchFee
	}
	return ""
}

func (m *OGThranMatchInfo) GetMatchArea() int32 {
	if m != nil && m.MatchArea != nil {
		return *m.MatchArea
	}
	return 0
}

func (m *OGThranMatchInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

// 索蓝服务器的房间基本信息 modify at 20120217  索蓝酒吧骰子用
type ThranRoomInfo struct {
	GameID           *int32           `protobuf:"varint,1,opt,name=GameID" json:"GameID,omitempty"`
	GroupID          *int32           `protobuf:"varint,2,opt,name=GroupID" json:"GroupID,omitempty"`
	RoomID           []byte           `protobuf:"bytes,3,opt,name=RoomID" json:"RoomID,omitempty"`
	MaxPlayer        *int32           `protobuf:"varint,4,opt,name=MaxPlayer" json:"MaxPlayer,omitempty"`
	RoomIP           *string          `protobuf:"bytes,5,opt,name=RoomIP" json:"RoomIP,omitempty"`
	RoomPort         *int32           `protobuf:"varint,6,opt,name=RoomPort" json:"RoomPort,omitempty"`
	Context          []byte           `protobuf:"bytes,7,opt,name=Context" json:"Context,omitempty"`
	CurPlayer        *int32           `protobuf:"varint,8,opt,name=CurPlayer" json:"CurPlayer,omitempty"`
	RoomState        *int32           `protobuf:"varint,9,opt,name=RoomState" json:"RoomState,omitempty"`
	IsLock           *int32           `protobuf:"varint,10,opt,name=IsLock,def=0" json:"IsLock,omitempty"`
	ThranRoomItems   []*ThranRoomInfo `protobuf:"bytes,11,rep,name=ThranRoomItems" json:"ThranRoomItems,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ThranRoomInfo) Reset()                    { *m = ThranRoomInfo{} }
func (m *ThranRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*ThranRoomInfo) ProtoMessage()               {}
func (*ThranRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{24} }

const Default_ThranRoomInfo_IsLock int32 = 0

func (m *ThranRoomInfo) GetGameID() int32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return 0
}

func (m *ThranRoomInfo) GetGroupID() int32 {
	if m != nil && m.GroupID != nil {
		return *m.GroupID
	}
	return 0
}

func (m *ThranRoomInfo) GetRoomID() []byte {
	if m != nil {
		return m.RoomID
	}
	return nil
}

func (m *ThranRoomInfo) GetMaxPlayer() int32 {
	if m != nil && m.MaxPlayer != nil {
		return *m.MaxPlayer
	}
	return 0
}

func (m *ThranRoomInfo) GetRoomIP() string {
	if m != nil && m.RoomIP != nil {
		return *m.RoomIP
	}
	return ""
}

func (m *ThranRoomInfo) GetRoomPort() int32 {
	if m != nil && m.RoomPort != nil {
		return *m.RoomPort
	}
	return 0
}

func (m *ThranRoomInfo) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ThranRoomInfo) GetCurPlayer() int32 {
	if m != nil && m.CurPlayer != nil {
		return *m.CurPlayer
	}
	return 0
}

func (m *ThranRoomInfo) GetRoomState() int32 {
	if m != nil && m.RoomState != nil {
		return *m.RoomState
	}
	return 0
}

func (m *ThranRoomInfo) GetIsLock() int32 {
	if m != nil && m.IsLock != nil {
		return *m.IsLock
	}
	return Default_ThranRoomInfo_IsLock
}

func (m *ThranRoomInfo) GetThranRoomItems() []*ThranRoomInfo {
	if m != nil {
		return m.ThranRoomItems
	}
	return nil
}

// 索蓝服务器配置的jss服务器  modify at 20120321
type ThranJSSInfo struct {
	RoomIP           *string `protobuf:"bytes,1,opt,name=RoomIP" json:"RoomIP,omitempty"`
	RoomPort         *string `protobuf:"bytes,2,opt,name=RoomPort" json:"RoomPort,omitempty"`
	Remark           *string `protobuf:"bytes,3,opt,name=Remark" json:"Remark,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThranJSSInfo) Reset()                    { *m = ThranJSSInfo{} }
func (m *ThranJSSInfo) String() string            { return proto.CompactTextString(m) }
func (*ThranJSSInfo) ProtoMessage()               {}
func (*ThranJSSInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{25} }

func (m *ThranJSSInfo) GetRoomIP() string {
	if m != nil && m.RoomIP != nil {
		return *m.RoomIP
	}
	return ""
}

func (m *ThranJSSInfo) GetRoomPort() string {
	if m != nil && m.RoomPort != nil {
		return *m.RoomPort
	}
	return ""
}

func (m *ThranJSSInfo) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

// 游戏公告
type OGBulletinInfo struct {
	Title            []byte `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	Content          []byte `protobuf:"bytes,2,opt,name=Content" json:"Content,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OGBulletinInfo) Reset()                    { *m = OGBulletinInfo{} }
func (m *OGBulletinInfo) String() string            { return proto.CompactTextString(m) }
func (*OGBulletinInfo) ProtoMessage()               {}
func (*OGBulletinInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{26} }

func (m *OGBulletinInfo) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *OGBulletinInfo) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// ***************************************************************//
// modify at 20120516
// 快速登录
// THRANID_SVR_QUICKCONN = 0x00001006;//快速登录
type REQQuickConn struct {
	UserName         []byte  `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	Pwd              *string `protobuf:"bytes,2,opt,name=Pwd" json:"Pwd,omitempty"`
	SecureID         *string `protobuf:"bytes,3,opt,name=SecureID" json:"SecureID,omitempty"`
	ComeFromID       *int32  `protobuf:"varint,4,opt,name=ComeFromID" json:"ComeFromID,omitempty"`
	ChannelID        *string `protobuf:"bytes,5,opt,name=ChannelID" json:"ChannelID,omitempty"`
	GameId           *int32  `protobuf:"varint,6,opt,name=GameId" json:"GameId,omitempty"`
	Token            *string `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
	RoomAdapte       *int32  `protobuf:"varint,8,opt,name=RoomAdapte,def=0" json:"RoomAdapte,omitempty"`
	LoginType        *int32  `protobuf:"varint,9,opt,name=LoginType,def=0" json:"LoginType,omitempty"`
	CurVersion       *int32  `protobuf:"varint,10,opt,name=CurVersion" json:"CurVersion,omitempty"`
	SmallVersion     *int32  `protobuf:"varint,11,opt,name=smallVersion" json:"smallVersion,omitempty"`
	ResolutionID     *string `protobuf:"bytes,12,opt,name=ResolutionID" json:"ResolutionID,omitempty"`
	LanguageID       *string `protobuf:"bytes,13,opt,name=LanguageID" json:"LanguageID,omitempty"`
	ScreenSize       *string `protobuf:"bytes,14,opt,name=ScreenSize" json:"ScreenSize,omitempty"`
	ThirdDigitalName *string `protobuf:"bytes,15,opt,name=ThirdDigitalName" json:"ThirdDigitalName,omitempty"`
	Thirdkey         *string `protobuf:"bytes,16,opt,name=Thirdkey" json:"Thirdkey,omitempty"`
	ThirdAppId       *string `protobuf:"bytes,17,opt,name=ThirdAppId" json:"ThirdAppId,omitempty"`
	UserId           *uint32 `protobuf:"varint,18,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *REQQuickConn) Reset()                    { *m = REQQuickConn{} }
func (m *REQQuickConn) String() string            { return proto.CompactTextString(m) }
func (*REQQuickConn) ProtoMessage()               {}
func (*REQQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{27} }

const Default_REQQuickConn_RoomAdapte int32 = 0
const Default_REQQuickConn_LoginType int32 = 0

func (m *REQQuickConn) GetUserName() []byte {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *REQQuickConn) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *REQQuickConn) GetSecureID() string {
	if m != nil && m.SecureID != nil {
		return *m.SecureID
	}
	return ""
}

func (m *REQQuickConn) GetComeFromID() int32 {
	if m != nil && m.ComeFromID != nil {
		return *m.ComeFromID
	}
	return 0
}

func (m *REQQuickConn) GetChannelID() string {
	if m != nil && m.ChannelID != nil {
		return *m.ChannelID
	}
	return ""
}

func (m *REQQuickConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *REQQuickConn) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *REQQuickConn) GetRoomAdapte() int32 {
	if m != nil && m.RoomAdapte != nil {
		return *m.RoomAdapte
	}
	return Default_REQQuickConn_RoomAdapte
}

func (m *REQQuickConn) GetLoginType() int32 {
	if m != nil && m.LoginType != nil {
		return *m.LoginType
	}
	return Default_REQQuickConn_LoginType
}

func (m *REQQuickConn) GetCurVersion() int32 {
	if m != nil && m.CurVersion != nil {
		return *m.CurVersion
	}
	return 0
}

func (m *REQQuickConn) GetSmallVersion() int32 {
	if m != nil && m.SmallVersion != nil {
		return *m.SmallVersion
	}
	return 0
}

func (m *REQQuickConn) GetResolutionID() string {
	if m != nil && m.ResolutionID != nil {
		return *m.ResolutionID
	}
	return ""
}

func (m *REQQuickConn) GetLanguageID() string {
	if m != nil && m.LanguageID != nil {
		return *m.LanguageID
	}
	return ""
}

func (m *REQQuickConn) GetScreenSize() string {
	if m != nil && m.ScreenSize != nil {
		return *m.ScreenSize
	}
	return ""
}

func (m *REQQuickConn) GetThirdDigitalName() string {
	if m != nil && m.ThirdDigitalName != nil {
		return *m.ThirdDigitalName
	}
	return ""
}

func (m *REQQuickConn) GetThirdkey() string {
	if m != nil && m.Thirdkey != nil {
		return *m.Thirdkey
	}
	return ""
}

func (m *REQQuickConn) GetThirdAppId() string {
	if m != nil && m.ThirdAppId != nil {
		return *m.ThirdAppId
	}
	return ""
}

func (m *REQQuickConn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type ACKQuickConn struct {
	AckResult        *int32              `protobuf:"varint,1,opt,name=AckResult" json:"AckResult,omitempty"`
	UserId           *uint32             `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	UserName         *string             `protobuf:"bytes,3,opt,name=UserName" json:"UserName,omitempty"`
	RoleName         *string             `protobuf:"bytes,4,opt,name=RoleName" json:"RoleName,omitempty"`
	YuanBaoCnt       *int32              `protobuf:"varint,5,opt,name=YuanBaoCnt" json:"YuanBaoCnt,omitempty"`
	CoinCnt          *int64              `protobuf:"varint,6,opt,name=CoinCnt" json:"CoinCnt,omitempty"`
	RoomList         []*OGRoomInfo       `protobuf:"bytes,7,rep,name=RoomList" json:"RoomList,omitempty"`
	MatchRoomList    []*OGThranMatchInfo `protobuf:"bytes,8,rep,name=MatchRoomList" json:"MatchRoomList,omitempty"`
	Cert             []byte              `protobuf:"bytes,9,opt,name=Cert" json:"Cert,omitempty"`
	CertNoCert       []byte              `protobuf:"bytes,10,opt,name=CertNoCert" json:"CertNoCert,omitempty"`
	CurVersion       *int32              `protobuf:"varint,11,opt,name=CurVersion" json:"CurVersion,omitempty"`
	PlayEnable       *string             `protobuf:"bytes,12,opt,name=PlayEnable" json:"PlayEnable,omitempty"`
	DownloadUrl      *string             `protobuf:"bytes,13,opt,name=DownloadUrl" json:"DownloadUrl,omitempty"`
	IfPreserve       *string             `protobuf:"bytes,14,opt,name=IfPreserve" json:"IfPreserve,omitempty"`
	PreserveMsg      *string             `protobuf:"bytes,16,opt,name=PreserveMsg" json:"PreserveMsg,omitempty"`
	GameId           *int32              `protobuf:"varint,17,opt,name=GameId" json:"GameId,omitempty"`
	JssList          []*ThranJSSInfo     `protobuf:"bytes,18,rep,name=JssList" json:"JssList,omitempty"`
	IfSearch         *string             `protobuf:"bytes,19,opt,name=IfSearch" json:"IfSearch,omitempty"`
	BulletinList     []*OGBulletinInfo   `protobuf:"bytes,20,rep,name=BulletinList" json:"BulletinList,omitempty"`
	VersionInfo      *string             `protobuf:"bytes,21,opt,name=VersionInfo" json:"VersionInfo,omitempty"`
	MatchSvrList     []*OGRoomInfo       `protobuf:"bytes,22,rep,name=MatchSvrList" json:"MatchSvrList,omitempty"`
	Sex              *int32              `protobuf:"varint,23,opt,name=Sex" json:"Sex,omitempty"`
	RoomSvrList      []*OGRoomInfo       `protobuf:"bytes,24,rep,name=RoomSvrList" json:"RoomSvrList,omitempty"`
	DdzActive        *int32              `protobuf:"varint,25,opt,name=DdzActive,def=0" json:"DdzActive,omitempty"`
	MsgUrl           *string             `protobuf:"bytes,26,opt,name=MsgUrl" json:"MsgUrl,omitempty"`
	ErrorCode        *int32              `protobuf:"varint,27,opt,name=ErrorCode,def=0" json:"ErrorCode,omitempty"`
	NickName         *string             `protobuf:"bytes,28,opt,name=NickName" json:"NickName,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ACKQuickConn) Reset()                    { *m = ACKQuickConn{} }
func (m *ACKQuickConn) String() string            { return proto.CompactTextString(m) }
func (*ACKQuickConn) ProtoMessage()               {}
func (*ACKQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{28} }

const Default_ACKQuickConn_DdzActive int32 = 0
const Default_ACKQuickConn_ErrorCode int32 = 0

func (m *ACKQuickConn) GetAckResult() int32 {
	if m != nil && m.AckResult != nil {
		return *m.AckResult
	}
	return 0
}

func (m *ACKQuickConn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ACKQuickConn) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *ACKQuickConn) GetRoleName() string {
	if m != nil && m.RoleName != nil {
		return *m.RoleName
	}
	return ""
}

func (m *ACKQuickConn) GetYuanBaoCnt() int32 {
	if m != nil && m.YuanBaoCnt != nil {
		return *m.YuanBaoCnt
	}
	return 0
}

func (m *ACKQuickConn) GetCoinCnt() int64 {
	if m != nil && m.CoinCnt != nil {
		return *m.CoinCnt
	}
	return 0
}

func (m *ACKQuickConn) GetRoomList() []*OGRoomInfo {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *ACKQuickConn) GetMatchRoomList() []*OGThranMatchInfo {
	if m != nil {
		return m.MatchRoomList
	}
	return nil
}

func (m *ACKQuickConn) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ACKQuickConn) GetCertNoCert() []byte {
	if m != nil {
		return m.CertNoCert
	}
	return nil
}

func (m *ACKQuickConn) GetCurVersion() int32 {
	if m != nil && m.CurVersion != nil {
		return *m.CurVersion
	}
	return 0
}

func (m *ACKQuickConn) GetPlayEnable() string {
	if m != nil && m.PlayEnable != nil {
		return *m.PlayEnable
	}
	return ""
}

func (m *ACKQuickConn) GetDownloadUrl() string {
	if m != nil && m.DownloadUrl != nil {
		return *m.DownloadUrl
	}
	return ""
}

func (m *ACKQuickConn) GetIfPreserve() string {
	if m != nil && m.IfPreserve != nil {
		return *m.IfPreserve
	}
	return ""
}

func (m *ACKQuickConn) GetPreserveMsg() string {
	if m != nil && m.PreserveMsg != nil {
		return *m.PreserveMsg
	}
	return ""
}

func (m *ACKQuickConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *ACKQuickConn) GetJssList() []*ThranJSSInfo {
	if m != nil {
		return m.JssList
	}
	return nil
}

func (m *ACKQuickConn) GetIfSearch() string {
	if m != nil && m.IfSearch != nil {
		return *m.IfSearch
	}
	return ""
}

func (m *ACKQuickConn) GetBulletinList() []*OGBulletinInfo {
	if m != nil {
		return m.BulletinList
	}
	return nil
}

func (m *ACKQuickConn) GetVersionInfo() string {
	if m != nil && m.VersionInfo != nil {
		return *m.VersionInfo
	}
	return ""
}

func (m *ACKQuickConn) GetMatchSvrList() []*OGRoomInfo {
	if m != nil {
		return m.MatchSvrList
	}
	return nil
}

func (m *ACKQuickConn) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ACKQuickConn) GetRoomSvrList() []*OGRoomInfo {
	if m != nil {
		return m.RoomSvrList
	}
	return nil
}

func (m *ACKQuickConn) GetDdzActive() int32 {
	if m != nil && m.DdzActive != nil {
		return *m.DdzActive
	}
	return Default_ACKQuickConn_DdzActive
}

func (m *ACKQuickConn) GetMsgUrl() string {
	if m != nil && m.MsgUrl != nil {
		return *m.MsgUrl
	}
	return ""
}

func (m *ACKQuickConn) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return Default_ACKQuickConn_ErrorCode
}

func (m *ACKQuickConn) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

type NullMsg struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NullMsg) Reset()                    { *m = NullMsg{} }
func (m *NullMsg) String() string            { return proto.CompactTextString(m) }
func (*NullMsg) ProtoMessage()               {}
func (*NullMsg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{29} }

// 新增用户的时候,发送广播
type Game_SendAddUser struct {
	Matchid          []byte  `protobuf:"bytes,1,opt,name=Matchid" json:"Matchid,omitempty"`
	Tableid          *int32  `protobuf:"varint,2,opt,name=Tableid" json:"Tableid,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=NickName" json:"NickName,omitempty"`
	Coin             *int64  `protobuf:"varint,4,opt,name=Coin" json:"Coin,omitempty"`
	Seat             *int32  `protobuf:"varint,5,opt,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Game_SendAddUser) Reset()                    { *m = Game_SendAddUser{} }
func (m *Game_SendAddUser) String() string            { return proto.CompactTextString(m) }
func (*Game_SendAddUser) ProtoMessage()               {}
func (*Game_SendAddUser) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{30} }

func (m *Game_SendAddUser) GetMatchid() []byte {
	if m != nil {
		return m.Matchid
	}
	return nil
}

func (m *Game_SendAddUser) GetTableid() int32 {
	if m != nil && m.Tableid != nil {
		return *m.Tableid
	}
	return 0
}

func (m *Game_SendAddUser) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *Game_SendAddUser) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *Game_SendAddUser) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

type GameNotice struct {
	NoticeType       *int32 `protobuf:"varint,1,opt,name=noticeType" json:"noticeType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GameNotice) Reset()                    { *m = GameNotice{} }
func (m *GameNotice) String() string            { return proto.CompactTextString(m) }
func (*GameNotice) ProtoMessage()               {}
func (*GameNotice) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{31} }

func (m *GameNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

// 公告的内容
type Game_AckNotice struct {
	NoticeType       *int32  `protobuf:"varint,1,opt,name=noticeType" json:"noticeType,omitempty"`
	NoticeTitle      *string `protobuf:"bytes,2,opt,name=noticeTitle" json:"noticeTitle,omitempty"`
	NoticeContent    *string `protobuf:"bytes,3,opt,name=noticeContent" json:"noticeContent,omitempty"`
	NoticeMemo       *string `protobuf:"bytes,4,opt,name=noticeMemo" json:"noticeMemo,omitempty"`
	Id               *int32  `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Game_AckNotice) Reset()                    { *m = Game_AckNotice{} }
func (m *Game_AckNotice) String() string            { return proto.CompactTextString(m) }
func (*Game_AckNotice) ProtoMessage()               {}
func (*Game_AckNotice) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{32} }

func (m *Game_AckNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *Game_AckNotice) GetNoticeTitle() string {
	if m != nil && m.NoticeTitle != nil {
		return *m.NoticeTitle
	}
	return ""
}

func (m *Game_AckNotice) GetNoticeContent() string {
	if m != nil && m.NoticeContent != nil {
		return *m.NoticeContent
	}
	return ""
}

func (m *Game_AckNotice) GetNoticeMemo() string {
	if m != nil && m.NoticeMemo != nil {
		return *m.NoticeMemo
	}
	return ""
}

func (m *Game_AckNotice) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*REQThranReg)(nil), "bbproto.REQThranReg")
	proto.RegisterType((*ACKThranReg)(nil), "bbproto.ACKThranReg")
	proto.RegisterType((*REQThranConn)(nil), "bbproto.REQThranConn")
	proto.RegisterType((*ACKThranConn)(nil), "bbproto.ACKThranConn")
	proto.RegisterType((*REQThranShortCert)(nil), "bbproto.REQThranShortCert")
	proto.RegisterType((*ACKThranShortCert)(nil), "bbproto.ACKThranShortCert")
	proto.RegisterType((*REQThranOpenId)(nil), "bbproto.REQThranOpenId")
	proto.RegisterType((*ACKThranOpenId)(nil), "bbproto.ACKThranOpenId")
	proto.RegisterType((*REQSinaGame)(nil), "bbproto.REQSinaGame")
	proto.RegisterType((*ACKSinaGame)(nil), "bbproto.ACKSinaGame")
	proto.RegisterType((*REQWeiBo)(nil), "bbproto.REQWeiBo")
	proto.RegisterType((*ACKWeiBo)(nil), "bbproto.ACKWeiBo")
	proto.RegisterType((*REQThranExit)(nil), "bbproto.REQThranExit")
	proto.RegisterType((*REQThranGameVersion)(nil), "bbproto.REQThranGameVersion")
	proto.RegisterType((*ACKThranGameVersion)(nil), "bbproto.ACKThranGameVersion")
	proto.RegisterType((*REQThranNewVerify)(nil), "bbproto.REQThranNewVerify")
	proto.RegisterType((*ACKThranNewVerify)(nil), "bbproto.ACKThranNewVerify")
	proto.RegisterType((*REQThranFindPwd)(nil), "bbproto.REQThranFindPwd")
	proto.RegisterType((*ACKThranFindPwd)(nil), "bbproto.ACKThranFindPwd")
	proto.RegisterType((*ACKThranHeart)(nil), "bbproto.ACKThranHeart")
	proto.RegisterType((*SinaApiInfo)(nil), "bbproto.SinaApiInfo")
	proto.RegisterType((*SinaApiRet)(nil), "bbproto.SinaApiRet")
	proto.RegisterType((*OGRoomInfo)(nil), "bbproto.OGRoomInfo")
	proto.RegisterType((*OGThranMatchInfo)(nil), "bbproto.OGThranMatchInfo")
	proto.RegisterType((*ThranRoomInfo)(nil), "bbproto.ThranRoomInfo")
	proto.RegisterType((*ThranJSSInfo)(nil), "bbproto.ThranJSSInfo")
	proto.RegisterType((*OGBulletinInfo)(nil), "bbproto.OGBulletinInfo")
	proto.RegisterType((*REQQuickConn)(nil), "bbproto.REQQuickConn")
	proto.RegisterType((*ACKQuickConn)(nil), "bbproto.ACKQuickConn")
	proto.RegisterType((*NullMsg)(nil), "bbproto.NullMsg")
	proto.RegisterType((*Game_SendAddUser)(nil), "bbproto.game_SendAddUser")
	proto.RegisterType((*GameNotice)(nil), "bbproto.Game_notice")
	proto.RegisterType((*Game_AckNotice)(nil), "bbproto.Game_AckNotice")
}

var fileDescriptor7 = []byte{
	// 1879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe4, 0x58, 0xbb, 0x6e, 0x1b, 0x47,
	0x17, 0x06, 0x49, 0xf1, 0x36, 0xbc, 0x49, 0x94, 0x64, 0xd3, 0xff, 0x05, 0xf8, 0xff, 0x85, 0x63,
	0x38, 0x01, 0x22, 0x08, 0x29, 0x53, 0x99, 0x12, 0x25, 0x99, 0x8e, 0x24, 0xd3, 0x24, 0x6d, 0x23,
	0x41, 0x00, 0x63, 0xc5, 0x1d, 0x91, 0x0b, 0x2d, 0x77, 0x88, 0xdd, 0xa5, 0x2e, 0x2e, 0xf3, 0x04,
	0x69, 0xdd, 0xe4, 0x0d, 0xd2, 0xa4, 0xcc, 0x23, 0xe4, 0x05, 0x52, 0xa6, 0x4a, 0x93, 0x26, 0x29,
	0x02, 0xa4, 0xcd, 0x99, 0x33, 0xb7, 0x5d, 0x72, 0x69, 0xc8, 0x80, 0x91, 0x14, 0xa9, 0xc8, 0x3d,
	0x3b, 0x73, 0xe6, 0x5c, 0xbf, 0xf9, 0xce, 0x12, 0xc2, 0xc6, 0xd1, 0x64, 0x67, 0x16, 0xb0, 0x88,
	0x35, 0x8b, 0x67, 0x67, 0xf8, 0xc7, 0xfa, 0x39, 0x43, 0x2a, 0xfd, 0x83, 0x67, 0xc3, 0x49, 0x60,
	0xfb, 0x7d, 0x3a, 0x6e, 0xae, 0x93, 0xd2, 0xf3, 0x90, 0x06, 0xa7, 0xf6, 0x94, 0xb6, 0x32, 0xff,
	0xcb, 0x3c, 0x2c, 0x37, 0x2b, 0x24, 0xd7, 0xbb, 0x72, 0x5a, 0x59, 0x7c, 0x80, 0xd7, 0x2f, 0x68,
	0xe0, 0x9e, 0xdf, 0x74, 0x9d, 0x56, 0x0e, 0x24, 0xf9, 0xe6, 0x06, 0x29, 0x0b, 0xc9, 0x20, 0x0a,
	0x5a, 0x6b, 0x6a, 0xd1, 0x80, 0x8e, 0xe6, 0x01, 0xed, 0x76, 0x5a, 0x79, 0x94, 0x34, 0x09, 0xd9,
	0x67, 0x53, 0x7a, 0x18, 0xb0, 0x29, 0xc8, 0x0a, 0x6a, 0xe3, 0xfe, 0xc4, 0xf6, 0x7d, 0xea, 0x81,
	0xa8, 0x88, 0xcb, 0xea, 0xa4, 0x70, 0x04, 0x07, 0x83, 0xee, 0x12, 0x2e, 0xa9, 0x91, 0x7c, 0xc4,
	0x2e, 0xa8, 0xdf, 0x2a, 0xe3, 0xeb, 0x4d, 0x52, 0x51, 0xb6, 0xb5, 0x67, 0x5e, 0x8b, 0x80, 0xb0,
	0xda, 0xdc, 0x26, 0xa4, 0xcf, 0xd8, 0xb4, 0xed, 0xd8, 0xb3, 0x88, 0xb6, 0x2a, 0x7c, 0xdf, 0xa7,
	0x99, 0x5d, 0x50, 0x95, 0x1b, 0xd0, 0xeb, 0x56, 0x55, 0x3e, 0x5b, 0x3f, 0x80, 0x9f, 0xed, 0xfd,
	0xcf, 0xb4, 0x9f, 0x70, 0x7a, 0x7b, 0x74, 0xd1, 0xa7, 0xe1, 0xdc, 0x8b, 0xd0, 0xd1, 0x3c, 0x37,
	0xfb, 0x20, 0x08, 0x58, 0xc0, 0x1d, 0x11, 0xde, 0x56, 0xc9, 0xda, 0x88, 0x06, 0x11, 0x7a, 0x5a,
	0xe5, 0xef, 0xfb, 0xcc, 0xa3, 0x18, 0x1a, 0xe1, 0xe8, 0x07, 0x5c, 0xc2, 0xa6, 0xc7, 0x6e, 0x18,
	0x81, 0xa3, 0xb9, 0x87, 0x95, 0x4f, 0x36, 0x77, 0x64, 0x60, 0x77, 0x9e, 0x1e, 0xf1, 0x57, 0x5d,
	0xff, 0x9c, 0x35, 0x1b, 0xa4, 0x78, 0xcc, 0xc6, 0xae, 0x0f, 0x7e, 0x09, 0xd7, 0x3f, 0x22, 0xb5,
	0x13, 0x3b, 0x1a, 0x4d, 0xf4, 0xe6, 0xe2, 0xea, 0xcd, 0x3c, 0x74, 0x60, 0xc3, 0x29, 0xe3, 0x67,
	0x63, 0x5c, 0xaa, 0xd6, 0x9b, 0x2c, 0xa9, 0xaa, 0xa4, 0xed, 0x33, 0xdf, 0x4f, 0xc9, 0x1a, 0x48,
	0x4e, 0xdd, 0xd1, 0x05, 0x4a, 0xb2, 0xf1, 0x3c, 0xe6, 0xd4, 0x03, 0x0f, 0xcf, 0x9a, 0x72, 0xfc,
	0xaf, 0xcb, 0x57, 0xbc, 0x82, 0x30, 0x5b, 0x5c, 0xcb, 0x10, 0x4c, 0xa5, 0x11, 0x66, 0xab, 0xbc,
	0x90, 0xd1, 0x9a, 0xca, 0xe8, 0x16, 0x29, 0x63, 0x14, 0x87, 0x37, 0x33, 0xda, 0xaa, 0x2b, 0x29,
	0xc4, 0xf6, 0x28, 0x60, 0xf3, 0x19, 0xd8, 0xd4, 0xe0, 0x32, 0xeb, 0x3b, 0x88, 0x8d, 0x4a, 0x34,
	0xc6, 0x26, 0x25, 0xd3, 0x2a, 0xaf, 0x59, 0x65, 0x91, 0x0e, 0x5e, 0x4e, 0x05, 0x6f, 0x21, 0xd3,
	0x20, 0xe9, 0xd9, 0x61, 0xf8, 0x92, 0x05, 0x8e, 0x09, 0xd1, 0xe7, 0x73, 0xdb, 0xdf, 0xb3, 0xd9,
	0xbe, 0x1f, 0xc9, 0x10, 0x81, 0x31, 0xfb, 0xcc, 0xf5, 0xb9, 0x80, 0x07, 0x28, 0x97, 0x28, 0x90,
	0xd2, 0xad, 0x0a, 0xa4, 0x9c, 0x5e, 0x20, 0xe4, 0xb6, 0x05, 0x52, 0x41, 0x97, 0x76, 0x48, 0x5d,
	0x54, 0x3a, 0x5f, 0x14, 0xd1, 0x69, 0x08, 0xa1, 0xe5, 0x0a, 0xee, 0x68, 0x05, 0xe6, 0x35, 0xe8,
	0xb0, 0xfe, 0xc8, 0x90, 0x0d, 0x55, 0x50, 0x83, 0x09, 0x0b, 0x22, 0xae, 0xf1, 0x9f, 0x50, 0x55,
	0xd6, 0x37, 0xe0, 0xb9, 0x2a, 0x17, 0xe3, 0x79, 0x4a, 0xcd, 0x80, 0x48, 0xbf, 0x5f, 0x59, 0x38,
	0xf1, 0x7c, 0xaf, 0xad, 0x4e, 0xd9, 0x52, 0x7a, 0x57, 0x83, 0x87, 0xf5, 0x7b, 0x86, 0xd4, 0x55,
	0x6a, 0x9e, 0xce, 0x28, 0xd4, 0xc8, 0x52, 0x5e, 0xaa, 0x49, 0x8c, 0x86, 0xea, 0x8e, 0x78, 0x8f,
	0xe4, 0x96, 0xc0, 0x78, 0x2d, 0x25, 0x0d, 0xf9, 0xe5, 0x34, 0x14, 0x16, 0xd2, 0x50, 0x54, 0xf9,
	0xd4, 0x21, 0x2e, 0x2d, 0x84, 0x58, 0x64, 0x46, 0x27, 0x8a, 0xa8, 0x93, 0x87, 0x13, 0x37, 0x70,
	0x2e, 0xe8, 0x0d, 0xe6, 0x64, 0x31, 0x07, 0x0a, 0x9b, 0xb9, 0x41, 0xb8, 0xb0, 0x3d, 0x9b, 0x81,
	0x6e, 0x9e, 0x9a, 0xb2, 0xf5, 0x55, 0x96, 0xd4, 0x55, 0x5e, 0xa4, 0xdb, 0xef, 0xdc, 0xc8, 0xcb,
	0x90, 0x5d, 0x5d, 0x68, 0xdb, 0xfc, 0x62, 0xdb, 0x16, 0x96, 0xda, 0xb6, 0xf8, 0x0e, 0x69, 0x7c,
	0x97, 0x16, 0x4f, 0xb6, 0xad, 0xa8, 0x62, 0x08, 0x68, 0x7b, 0x34, 0xb9, 0xc4, 0x1a, 0xce, 0x01,
	0x96, 0x7d, 0x2d, 0x2e, 0xe7, 0x81, 0xeb, 0xdb, 0x3c, 0x15, 0x89, 0x88, 0x8a, 0x86, 0x7c, 0x40,
	0x4a, 0x5c, 0x3d, 0x9e, 0x9e, 0xc5, 0xd3, 0xb7, 0xf4, 0xe9, 0x7c, 0x5b, 0x7b, 0xe6, 0xe2, 0xf1,
	0xef, 0xab, 0x0a, 0xac, 0x43, 0xbc, 0x46, 0xb5, 0x45, 0x29, 0x39, 0xb9, 0x4f, 0x8a, 0x7d, 0x1a,
	0xc5, 0x2c, 0xda, 0x5c, 0xb4, 0x08, 0x5e, 0x5b, 0xdf, 0x66, 0x20, 0xc6, 0x07, 0xcf, 0x5e, 0x52,
	0x77, 0x8f, 0xfd, 0x4d, 0x05, 0xad, 0xcb, 0xb5, 0xa4, 0xaa, 0xf7, 0xea, 0xec, 0x24, 0x1c, 0x63,
	0x7e, 0xaa, 0xe2, 0xb1, 0xe7, 0x8e, 0x44, 0x6a, 0xac, 0xff, 0x92, 0x12, 0xf8, 0x2d, 0xcc, 0x5d,
	0x76, 0xda, 0xda, 0x33, 0x17, 0xf2, 0xc1, 0xb5, 0x1b, 0xc5, 0xd3, 0x6d, 0xc8, 0x05, 0xbc, 0xc0,
	0xcb, 0x2b, 0xab, 0xaa, 0x8e, 0x4b, 0xf8, 0x89, 0xe8, 0x98, 0xf5, 0x53, 0x86, 0x6c, 0x2a, 0x25,
	0xdc, 0x50, 0xe8, 0xb6, 0xd0, 0x65, 0x3e, 0xba, 0x37, 0x0f, 0xe4, 0x93, 0x54, 0x67, 0x7c, 0xc9,
	0xea, 0x6a, 0x32, 0x21, 0x10, 0xcc, 0x6c, 0x0b, 0x6c, 0xa2, 0x21, 0xf3, 0xe6, 0x11, 0xec, 0xd3,
	0xc1, 0x4a, 0x04, 0x46, 0xe3, 0xf2, 0xb1, 0xed, 0x8f, 0xe7, 0xf6, 0x98, 0xea, 0x60, 0xc1, 0xe6,
	0x70, 0x6a, 0x7b, 0x9e, 0x3a, 0xb6, 0xa8, 0x8f, 0xf1, 0x5c, 0xea, 0x0b, 0x3f, 0x4a, 0x6a, 0xf7,
	0x60, 0x14, 0x50, 0xea, 0x0f, 0xdc, 0xd7, 0x54, 0x22, 0x41, 0xb2, 0xd1, 0x89, 0x02, 0xdb, 0x1f,
	0x73, 0x64, 0x53, 0x35, 0x75, 0xdc, 0xc3, 0x94, 0x2a, 0x02, 0xad, 0x3d, 0xcf, 0xbe, 0x39, 0xf0,
	0xed, 0x33, 0x4f, 0xdd, 0x35, 0x80, 0xfc, 0x1d, 0x76, 0xe5, 0x7b, 0xcc, 0x76, 0x9e, 0x07, 0x9e,
	0x2c, 0x07, 0x30, 0x94, 0xab, 0x1a, 0xd0, 0xe0, 0x92, 0x06, 0xdd, 0x99, 0xf4, 0xf2, 0x0e, 0xa9,
	0x1b, 0x69, 0x0f, 0x60, 0x5b, 0xba, 0x2a, 0xe5, 0x7d, 0xdb, 0xbf, 0x90, 0xaa, 0x0b, 0x4a, 0xb5,
	0x92, 0x77, 0xe8, 0xb9, 0xbc, 0x88, 0xc0, 0x86, 0xee, 0x79, 0x2f, 0xa0, 0x21, 0xd7, 0x22, 0xbd,
	0x85, 0x85, 0x4a, 0xa2, 0x6a, 0xa5, 0xdc, 0xdc, 0x95, 0x40, 0xa0, 0x5b, 0x51, 0x5c, 0xd7, 0xf7,
	0x62, 0x40, 0x80, 0x3e, 0xeb, 0x45, 0xcd, 0xbb, 0xa4, 0xa1, 0x5c, 0xe9, 0x53, 0x1b, 0x23, 0x5c,
	0x59, 0x48, 0x6c, 0x55, 0xd5, 0xcd, 0x98, 0x3b, 0xc2, 0x5d, 0xa8, 0xa5, 0x73, 0x83, 0xfa, 0x6a,
	0xd4, 0x79, 0x40, 0x8a, 0x4f, 0xc2, 0x10, 0x57, 0x35, 0x70, 0xd5, 0x76, 0x92, 0x00, 0x3c, 0x19,
	0x0c, 0x14, 0x3c, 0x74, 0xcf, 0x07, 0xd4, 0x0e, 0x46, 0x93, 0xd6, 0x3a, 0xba, 0xf4, 0x31, 0xa9,
	0xee, 0xcd, 0x3d, 0x8f, 0x46, 0xae, 0x8f, 0xdb, 0x37, 0x70, 0xfb, 0xdd, 0xd8, 0x21, 0xea, 0x35,
	0xde, 0x52, 0x5f, 0x1a, 0xfe, 0x70, 0x4a, 0xaf, 0xc4, 0x3d, 0x91, 0xe8, 0xd4, 0x4c, 0x4a, 0xa7,
	0x66, 0x97, 0x3b, 0x35, 0xb7, 0xd0, 0xa9, 0x48, 0x25, 0xac, 0x2f, 0xcc, 0x1d, 0x6d, 0xb4, 0xdf,
	0x8a, 0xc1, 0x83, 0x26, 0xb1, 0xdc, 0x5c, 0x08, 0xfa, 0x12, 0x13, 0xba, 0x77, 0x49, 0x43, 0x59,
	0x7e, 0xe8, 0xfa, 0x0e, 0xa0, 0x0e, 0x6f, 0xfd, 0x83, 0xa9, 0xed, 0x7a, 0xd2, 0x68, 0xd0, 0x01,
	0xa7, 0x6a, 0x38, 0xb2, 0xee, 0x93, 0x86, 0xb2, 0x46, 0xed, 0x48, 0x41, 0x84, 0xff, 0x93, 0x9a,
	0x5a, 0xf5, 0x18, 0x02, 0x1b, 0x89, 0x68, 0x04, 0x97, 0x43, 0x57, 0xb1, 0x29, 0xeb, 0x11, 0xa9,
	0xc4, 0x31, 0x1a, 0x00, 0x01, 0xfe, 0x62, 0x67, 0x69, 0x77, 0x00, 0x2a, 0x5f, 0xd8, 0xde, 0x9c,
	0x1a, 0x77, 0x38, 0x50, 0xca, 0xe1, 0xab, 0x0c, 0xb0, 0x43, 0x0c, 0xa6, 0x72, 0x2b, 0xe0, 0x27,
	0x11, 0x91, 0x98, 0xce, 0xec, 0x92, 0x4e, 0xa1, 0xe3, 0xb7, 0x0c, 0x21, 0xb1, 0x92, 0x81, 0x23,
	0xf0, 0xbf, 0x63, 0x28, 0x1f, 0x7f, 0xe6, 0x9d, 0x61, 0x8c, 0xc0, 0x15, 0xb3, 0x38, 0x5b, 0x66,
	0x53, 0xec, 0x32, 0x0d, 0xc8, 0x5c, 0x32, 0x88, 0xec, 0x68, 0x1e, 0xca, 0xce, 0x83, 0xc6, 0xe1,
	0xb2, 0x13, 0xd7, 0x3f, 0x62, 0x9e, 0x63, 0xda, 0x0e, 0x85, 0xf6, 0x35, 0x0a, 0x8b, 0x0b, 0x2b,
	0x39, 0x02, 0xc8, 0xbe, 0x93, 0x87, 0xa0, 0x27, 0x65, 0x8d, 0x3b, 0xd8, 0xde, 0x28, 0x23, 0x1a,
	0x21, 0x68, 0x38, 0x0a, 0xdc, 0x59, 0xa4, 0x5a, 0x4a, 0x6f, 0xc5, 0xdb, 0x05, 0xb9, 0xa0, 0xf5,
	0x7d, 0x96, 0xac, 0x2f, 0xb5, 0x24, 0x84, 0x4a, 0x3c, 0x74, 0x0c, 0xe3, 0x43, 0x41, 0x8c, 0xed,
	0xf2, 0x3c, 0x5f, 0xd9, 0x81, 0x93, 0x9c, 0x15, 0x50, 0x34, 0x98, 0x4f, 0x25, 0xf1, 0x55, 0xfb,
	0x86, 0x34, 0x98, 0x1a, 0x84, 0x7d, 0x3c, 0x9f, 0xda, 0xd0, 0x4a, 0x53, 0x57, 0x0d, 0x0b, 0xdb,
	0xb2, 0x8f, 0xf1, 0x05, 0xdf, 0x5d, 0x4c, 0xee, 0x56, 0x08, 0x6b, 0x56, 0x76, 0xfd, 0x08, 0x1c,
	0xb6, 0x3d, 0xc3, 0x20, 0x50, 0xdc, 0x0b, 0x38, 0xf0, 0x12, 0x85, 0x86, 0x52, 0xc6, 0x46, 0x34,
	0x0c, 0x65, 0x04, 0x94, 0xce, 0x8e, 0x2d, 0x69, 0x17, 0x9a, 0x8d, 0xa2, 0x43, 0x2a, 0xc8, 0xb0,
	0x59, 0xd4, 0x0e, 0xa8, 0x2d, 0xe6, 0xab, 0xc5, 0x70, 0x36, 0x30, 0x78, 0xbf, 0x66, 0x48, 0x2d,
	0x31, 0x3d, 0xe8, 0x76, 0xed, 0x98, 0xa2, 0x53, 0x33, 0x59, 0x56, 0x81, 0x1a, 0x2e, 0xee, 0xc8,
	0x2e, 0xc4, 0xa3, 0xae, 0x79, 0x76, 0x69, 0x20, 0x83, 0xa6, 0x96, 0xf4, 0x64, 0xc4, 0xe2, 0x45,
	0x15, 0x1b, 0xae, 0x20, 0x02, 0xd7, 0x62, 0xb8, 0x42, 0x2d, 0x70, 0x2f, 0x4a, 0x2d, 0x25, 0x15,
	0x3c, 0x55, 0x78, 0x54, 0x46, 0x69, 0x83, 0x14, 0xba, 0xe1, 0x31, 0x1b, 0x5d, 0xe8, 0x6b, 0x28,
	0x65, 0x3a, 0xaa, 0xbc, 0x75, 0x3a, 0x7a, 0x44, 0xaa, 0x09, 0xb4, 0x34, 0xb6, 0x66, 0x96, 0x6c,
	0x35, 0x2d, 0x42, 0xa7, 0x76, 0x70, 0x21, 0x7b, 0x6c, 0x97, 0xd4, 0x93, 0x80, 0xc9, 0x31, 0x66,
	0xe8, 0x46, 0x9e, 0xe2, 0x3b, 0xca, 0x39, 0x5f, 0x72, 0x59, 0xeb, 0x17, 0x31, 0xe2, 0x3f, 0x9b,
	0x03, 0xc1, 0x4e, 0x1d, 0xf1, 0xab, 0x4b, 0x1f, 0x66, 0x34, 0xd6, 0xe6, 0x52, 0xb0, 0x76, 0x6d,
	0x19, 0x6b, 0xf3, 0x0b, 0x58, 0x5b, 0x48, 0xb2, 0xa2, 0x62, 0xca, 0x4d, 0x5e, 0x4a, 0x1d, 0xc6,
	0xcb, 0x31, 0x22, 0x1f, 0x63, 0x2a, 0x44, 0xb1, 0x90, 0x04, 0x91, 0xa8, 0xa4, 0x72, 0x93, 0x6a,
	0x0a, 0x11, 0xa9, 0xa5, 0xd0, 0x8b, 0x3a, 0xca, 0x5a, 0x64, 0x1d, 0x79, 0x70, 0xc7, 0x1d, 0xbb,
	0x91, 0xed, 0x61, 0x4c, 0x1a, 0x4b, 0x33, 0xc7, 0xba, 0xda, 0x1f, 0x1b, 0x2e, 0x36, 0x94, 0xcf,
	0x73, 0x01, 0xa3, 0x4d, 0x78, 0xae, 0x59, 0x6f, 0xf2, 0xf8, 0xcd, 0xc0, 0x04, 0x3b, 0xe5, 0x6e,
	0x31, 0xd0, 0xcb, 0x03, 0x5e, 0xbb, 0xd5, 0x57, 0x83, 0xf7, 0x39, 0x6c, 0xec, 0xa6, 0x0f, 0x1b,
	0x6f, 0xe1, 0x18, 0x40, 0x9b, 0x71, 0x58, 0x2d, 0xab, 0xc1, 0x47, 0xcc, 0x1b, 0x28, 0x23, 0x5a,
	0x66, 0xf2, 0x55, 0x49, 0x21, 0x5e, 0xd5, 0x34, 0xe2, 0x55, 0x4b, 0x61, 0x47, 0xf5, 0x34, 0x76,
	0xb4, 0xbe, 0x50, 0x61, 0x1b, 0x78, 0x42, 0x8c, 0x94, 0x34, 0x6f, 0x4b, 0x4a, 0x36, 0x53, 0x49,
	0xc9, 0xd6, 0x5b, 0x49, 0x09, 0xb7, 0x46, 0xfa, 0xc6, 0x1f, 0x5b, 0xdb, 0xa8, 0xe3, 0x43, 0x89,
	0x90, 0x83, 0xcb, 0x00, 0x75, 0xdc, 0x59, 0x1d, 0x72, 0xf9, 0x39, 0xe3, 0x2e, 0x5a, 0xfd, 0x50,
	0xdc, 0x4a, 0x6a, 0x5b, 0x6b, 0xf5, 0x36, 0xe8, 0x8d, 0x8e, 0xf3, 0xba, 0x3d, 0x8a, 0x5c, 0x88,
	0xcb, 0x3d, 0xf3, 0x41, 0xb2, 0x00, 0x21, 0xe1, 0xe1, 0xfb, 0x97, 0x44, 0xea, 0x32, 0x72, 0x95,
	0x7d, 0xe6, 0xd0, 0xd6, 0xbf, 0xd5, 0xaa, 0xf8, 0x07, 0x96, 0xff, 0x20, 0x74, 0x94, 0x49, 0xf1,
	0x14, 0x9c, 0x82, 0xbd, 0xd6, 0x19, 0x59, 0xe7, 0x5c, 0xf0, 0xd5, 0x80, 0xfa, 0x4e, 0xdb, 0x71,
	0x78, 0xf9, 0xe9, 0x5b, 0xcb, 0x75, 0x0c, 0x92, 0x0c, 0x79, 0xea, 0x5c, 0xc7, 0xdc, 0xf8, 0x5a,
	0x65, 0x4e, 0xcd, 0x53, 0xbc, 0x04, 0xb1, 0x48, 0x73, 0xfc, 0x29, 0xa4, 0xb6, 0x2c, 0x4f, 0xa0,
	0x2d, 0x48, 0x84, 0x5f, 0xf9, 0x2c, 0x72, 0x47, 0x94, 0x27, 0x59, 0xfc, 0x33, 0xb4, 0xc4, 0x9a,
	0x09, 0x0e, 0xfd, 0x0a, 0x3a, 0xe4, 0x74, 0xe5, 0x2a, 0x1e, 0x7c, 0x29, 0x43, 0x98, 0xcb, 0x4a,
	0x34, 0xa9, 0x09, 0xa1, 0x02, 0x3b, 0x0d, 0x55, 0x42, 0x7c, 0x42, 0xa7, 0x4c, 0xf6, 0x0e, 0x21,
	0x59, 0x57, 0x7c, 0x6b, 0xcb, 0xef, 0x65, 0x1f, 0xe7, 0xfe, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xb4,
	0x7a, 0x86, 0x09, 0xbe, 0x16, 0x00, 0x00,
}
