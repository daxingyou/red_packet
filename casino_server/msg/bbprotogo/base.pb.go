// Code generated by protoc-gen-go.
// source: base.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EProtoId int32

const (
	EProtoId_TESTP1          EProtoId = 0
	EProtoId_REG             EProtoId = 1
	EProtoId_REQAUTHUSER     EProtoId = 2
	EProtoId_HEATBEAT        EProtoId = 3
	EProtoId_GETINTOROOM     EProtoId = 4
	EProtoId_ROOMMSG         EProtoId = 5
	EProtoId_GETREWARDS      EProtoId = 6
	EProtoId_SHUIGUOJI       EProtoId = 7
	EProtoId_SHUIGUOJIHILOMP EProtoId = 8
	EProtoId_SHUIGUOJIRES    EProtoId = 9
	// 扎金花相关的逻辑
	EProtoId_ZJHROOM            EProtoId = 10
	EProtoId_ZJHBET             EProtoId = 11
	EProtoId_ZJHMSG             EProtoId = 12
	EProtoId_ZJHQUERYNOSEATUSER EProtoId = 13
	EProtoId_ZJHREQSEAT         EProtoId = 14
	EProtoId_ZJHLOTTERY         EProtoId = 15
)

var EProtoId_name = map[int32]string{
	0:  "TESTP1",
	1:  "REG",
	2:  "REQAUTHUSER",
	3:  "HEATBEAT",
	4:  "GETINTOROOM",
	5:  "ROOMMSG",
	6:  "GETREWARDS",
	7:  "SHUIGUOJI",
	8:  "SHUIGUOJIHILOMP",
	9:  "SHUIGUOJIRES",
	10: "ZJHROOM",
	11: "ZJHBET",
	12: "ZJHMSG",
	13: "ZJHQUERYNOSEATUSER",
	14: "ZJHREQSEAT",
	15: "ZJHLOTTERY",
}
var EProtoId_value = map[string]int32{
	"TESTP1":             0,
	"REG":                1,
	"REQAUTHUSER":        2,
	"HEATBEAT":           3,
	"GETINTOROOM":        4,
	"ROOMMSG":            5,
	"GETREWARDS":         6,
	"SHUIGUOJI":          7,
	"SHUIGUOJIHILOMP":    8,
	"SHUIGUOJIRES":       9,
	"ZJHROOM":            10,
	"ZJHBET":             11,
	"ZJHMSG":             12,
	"ZJHQUERYNOSEATUSER": 13,
	"ZJHREQSEAT":         14,
	"ZJHLOTTERY":         15,
}

func (x EProtoId) Enum() *EProtoId {
	p := new(EProtoId)
	*p = x
	return p
}
func (x EProtoId) String() string {
	return proto.EnumName(EProtoId_name, int32(x))
}
func (x *EProtoId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EProtoId_value, data, "EProtoId")
	if err != nil {
		return err
	}
	*x = EProtoId(value)
	return nil
}
func (EProtoId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// general response protocol
type ProtoHeader struct {
	ApiVer           *string `protobuf:"bytes,1,opt,name=apiVer" json:"apiVer,omitempty"`
	SessionId        *string `protobuf:"bytes,2,opt,name=sessionId" json:"sessionId,omitempty"`
	UserId           *uint32 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	PacketId         *int32  `protobuf:"varint,4,opt,name=packetId" json:"packetId,omitempty"`
	Code             *int32  `protobuf:"varint,5,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	ExtraTag         *int32  `protobuf:"varint,7,opt,name=extraTag" json:"extraTag,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHeader) Reset()                    { *m = ProtoHeader{} }
func (m *ProtoHeader) String() string            { return proto.CompactTextString(m) }
func (*ProtoHeader) ProtoMessage()               {}
func (*ProtoHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ProtoHeader) GetApiVer() string {
	if m != nil && m.ApiVer != nil {
		return *m.ApiVer
	}
	return ""
}

func (m *ProtoHeader) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *ProtoHeader) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ProtoHeader) GetPacketId() int32 {
	if m != nil && m.PacketId != nil {
		return *m.PacketId
	}
	return 0
}

func (m *ProtoHeader) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ProtoHeader) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *ProtoHeader) GetExtraTag() int32 {
	if m != nil && m.ExtraTag != nil {
		return *m.ExtraTag
	}
	return 0
}

type TerminalInfo struct {
	Channel          *string `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	DeviceName       *string `protobuf:"bytes,2,opt,name=deviceName" json:"deviceName,omitempty"`
	Uuid             *string `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	Os               *string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TerminalInfo) Reset()                    { *m = TerminalInfo{} }
func (m *TerminalInfo) String() string            { return proto.CompactTextString(m) }
func (*TerminalInfo) ProtoMessage()               {}
func (*TerminalInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TerminalInfo) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *TerminalInfo) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *TerminalInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *TerminalInfo) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func init() {
	proto.RegisterType((*ProtoHeader)(nil), "bbproto.ProtoHeader")
	proto.RegisterType((*TerminalInfo)(nil), "bbproto.TerminalInfo")
	proto.RegisterEnum("bbproto.EProtoId", EProtoId_name, EProtoId_value)
}

var fileDescriptor1 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x4f, 0xcd, 0xce, 0xd3, 0x30,
	0x10, 0x24, 0x6d, 0xf3, 0xb7, 0x49, 0xbf, 0x1a, 0x23, 0xa1, 0x1c, 0xd1, 0x77, 0x42, 0x1c, 0x90,
	0x78, 0x84, 0x56, 0x58, 0x49, 0xaa, 0xa6, 0x69, 0x1d, 0x07, 0x04, 0x37, 0x37, 0x31, 0x10, 0xd1,
	0x26, 0x95, 0xd3, 0x22, 0xae, 0x3c, 0x39, 0xac, 0x4d, 0xd4, 0x83, 0xa5, 0x99, 0xd9, 0xf1, 0xee,
	0x0c, 0xc0, 0x49, 0x8e, 0xea, 0xfd, 0x55, 0x0f, 0xb7, 0x81, 0xfa, 0xa7, 0x93, 0x05, 0xcf, 0x7f,
	0x1c, 0x88, 0x0e, 0x06, 0x65, 0x4a, 0xb6, 0x4a, 0xd3, 0x27, 0xf0, 0xe4, 0xb5, 0xfb, 0xa4, 0x74,
	0xe2, 0xbc, 0x71, 0xde, 0x86, 0xf4, 0x25, 0x84, 0xa3, 0x1a, 0xc7, 0x6e, 0xe8, 0xf3, 0x36, 0x99,
	0x59, 0x09, 0x2d, 0xf7, 0x51, 0x69, 0xe4, 0x73, 0xe4, 0x4b, 0x4a, 0x20, 0xb8, 0xca, 0xe6, 0xa7,
	0xba, 0xa1, 0xb2, 0x40, 0xc5, 0xa5, 0x31, 0x2c, 0x9a, 0xa1, 0x55, 0x89, 0x6b, 0xd9, 0x12, 0x5c,
	0xa5, 0xf5, 0xa0, 0x13, 0xcf, 0x7e, 0x47, 0xbb, 0xfa, 0x7d, 0xd3, 0x52, 0xc8, 0xef, 0x89, 0x6f,
	0x0c, 0xcf, 0x05, 0xc4, 0x42, 0xe9, 0x4b, 0xd7, 0xcb, 0x73, 0xde, 0x7f, 0x1b, 0xe8, 0x0a, 0xfc,
	0xe6, 0x87, 0xec, 0x7b, 0x75, 0x9e, 0x42, 0x50, 0x80, 0x56, 0xfd, 0xea, 0x1a, 0xb5, 0x97, 0x17,
	0x35, 0xa5, 0xc0, 0x1b, 0xf7, 0x7b, 0xf7, 0x3f, 0x43, 0x88, 0x86, 0xd9, 0x30, 0xda, 0xeb, 0xe1,
	0xbb, 0xbf, 0x0e, 0x04, 0xcc, 0x76, 0xca, 0x5b, 0x1c, 0x78, 0x82, 0x55, 0xe2, 0xf0, 0x81, 0xbc,
	0xa0, 0x3e, 0xcc, 0x39, 0x4b, 0x89, 0x83, 0x07, 0x22, 0xce, 0x8e, 0xeb, 0x5a, 0x64, 0x75, 0xc5,
	0x38, 0x99, 0xe1, 0xb2, 0x20, 0x63, 0x6b, 0xb1, 0xc1, 0x47, 0xe6, 0x66, 0x9c, 0x32, 0x91, 0xef,
	0x45, 0xc9, 0xcb, 0xb2, 0x20, 0x0b, 0x1a, 0x81, 0x6f, 0x50, 0x51, 0xa5, 0xc4, 0xc5, 0xfa, 0x80,
	0x53, 0xce, 0x3e, 0xaf, 0xf9, 0xc7, 0x8a, 0x78, 0x58, 0x2f, 0xac, 0xb2, 0x3a, 0x4f, 0xeb, 0x72,
	0x9b, 0x13, 0x9f, 0xbe, 0x82, 0xd5, 0x83, 0x66, 0xf9, 0xae, 0x2c, 0x0e, 0x24, 0xc0, 0xce, 0xf1,
	0x43, 0xe4, 0xac, 0x22, 0xa1, 0x59, 0xf9, 0x75, 0x9b, 0xd9, 0xfd, 0x60, 0x42, 0x22, 0xd9, 0x30,
	0x41, 0xa2, 0x09, 0x9b, 0x53, 0x31, 0x7d, 0x0d, 0x14, 0xf1, 0xb1, 0x66, 0xfc, 0xcb, 0xbe, 0xac,
	0x30, 0x9c, 0x8d, 0xbb, 0x34, 0x11, 0xcc, 0x67, 0x76, 0x34, 0x1a, 0x79, 0x9a, 0xf8, 0xae, 0x14,
	0x02, 0x9d, 0x64, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xe6, 0x9e, 0x31, 0xea, 0x01, 0x00,
	0x00,
}
