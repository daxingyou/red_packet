// Code generated by protoc-gen-go.
// source: thPoker.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EProtoId from base.proto

// Ignoring public import of User from user.proto

// Ignoring public import of ZjhRoom from zhajinhua.proto

// Ignoring public import of ZjhBet from zhajinhua.proto

// Ignoring public import of ZjhLottery from zhajinhua.proto

// Ignoring public import of BroadcastBet from zhajinhua.proto

// Ignoring public import of ZjhPai from zhajinhua.proto

// Ignoring public import of Pai from zhajinhua.proto

// Ignoring public import of ZjhQueryNoSeatUser from zhajinhua.proto

// Ignoring public import of ZjhReqSeat from zhajinhua.proto

// Ignoring public import of ZjhMsg from zhajinhua.proto

// Ignoring public import of ZjhBroadcastBeginBet from zhajinhua.proto

// Ignoring public import of EPaiType from zhajinhua.proto

// 德州扑克的
type ETHType int32

const (
	ETHType_TH_TYPE_GAOPAI              ETHType = 1
	ETHType_TH_TYPE_YIDUI               ETHType = 2
	ETHType_TH_TYPE_LIANGDUI            ETHType = 3
	ETHType_TH_TYPE_THREE               ETHType = 4
	ETHType_TH_TYPE_SHUNZI              ETHType = 5
	ETHType_TH_TYPE_TONGHUA             ETHType = 6
	ETHType_TH_TYPE_HULU                ETHType = 7
	ETHType_TH_TYPE_SITIAO              ETHType = 8
	ETHType_TH_TYPE_TONGHUASHUN         ETHType = 9
	ETHType_TH_TYPE_HUANGSHITONGHUASHUN ETHType = 10
)

var ETHType_name = map[int32]string{
	1:  "TH_TYPE_GAOPAI",
	2:  "TH_TYPE_YIDUI",
	3:  "TH_TYPE_LIANGDUI",
	4:  "TH_TYPE_THREE",
	5:  "TH_TYPE_SHUNZI",
	6:  "TH_TYPE_TONGHUA",
	7:  "TH_TYPE_HULU",
	8:  "TH_TYPE_SITIAO",
	9:  "TH_TYPE_TONGHUASHUN",
	10: "TH_TYPE_HUANGSHITONGHUASHUN",
}
var ETHType_value = map[string]int32{
	"TH_TYPE_GAOPAI":              1,
	"TH_TYPE_YIDUI":               2,
	"TH_TYPE_LIANGDUI":            3,
	"TH_TYPE_THREE":               4,
	"TH_TYPE_SHUNZI":              5,
	"TH_TYPE_TONGHUA":             6,
	"TH_TYPE_HULU":                7,
	"TH_TYPE_SITIAO":              8,
	"TH_TYPE_TONGHUASHUN":         9,
	"TH_TYPE_HUANGSHITONGHUASHUN": 10,
}

func (x ETHType) Enum() *ETHType {
	p := new(ETHType)
	*p = x
	return p
}
func (x ETHType) String() string {
	return proto.EnumName(ETHType_name, int32(x))
}
func (x *ETHType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETHType_value, data, "ETHType")
	if err != nil {
		return err
	}
	*x = ETHType(value)
	return nil
}
func (ETHType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type ThRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ReqType          *int32       `protobuf:"varint,2,opt,name=reqType" json:"reqType,omitempty"`
	Jackpot          *int64       `protobuf:"varint,3,opt,name=jackpot" json:"jackpot,omitempty"`
	Users            []*THUser    `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	BetTime          *int32       `protobuf:"varint,5,opt,name=betTime" json:"betTime,omitempty"`
	DeskStatus       *int32       `protobuf:"varint,6,opt,name=deskStatus" json:"deskStatus,omitempty"`
	PublicPais       []*Pai       `protobuf:"bytes,7,rep,name=publicPais" json:"publicPais,omitempty"`
	BetUserId        *uint32      `protobuf:"varint,8,opt,name=betUserId" json:"betUserId,omitempty"`
	BigBlind         *uint32      `protobuf:"varint,9,opt,name=bigBlind" json:"bigBlind,omitempty"`
	SmallBlind       *uint32      `protobuf:"varint,10,opt,name=smallBlind" json:"smallBlind,omitempty"`
	Butten           *uint32      `protobuf:"varint,11,opt,name=butten" json:"butten,omitempty"`
	BetRemainTime    *int32       `protobuf:"varint,12,opt,name=betRemainTime" json:"betRemainTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ThRoom) Reset()                    { *m = ThRoom{} }
func (m *ThRoom) String() string            { return proto.CompactTextString(m) }
func (*ThRoom) ProtoMessage()               {}
func (*ThRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *ThRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ThRoom) GetReqType() int32 {
	if m != nil && m.ReqType != nil {
		return *m.ReqType
	}
	return 0
}

func (m *ThRoom) GetJackpot() int64 {
	if m != nil && m.Jackpot != nil {
		return *m.Jackpot
	}
	return 0
}

func (m *ThRoom) GetUsers() []*THUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ThRoom) GetBetTime() int32 {
	if m != nil && m.BetTime != nil {
		return *m.BetTime
	}
	return 0
}

func (m *ThRoom) GetDeskStatus() int32 {
	if m != nil && m.DeskStatus != nil {
		return *m.DeskStatus
	}
	return 0
}

func (m *ThRoom) GetPublicPais() []*Pai {
	if m != nil {
		return m.PublicPais
	}
	return nil
}

func (m *ThRoom) GetBetUserId() uint32 {
	if m != nil && m.BetUserId != nil {
		return *m.BetUserId
	}
	return 0
}

func (m *ThRoom) GetBigBlind() uint32 {
	if m != nil && m.BigBlind != nil {
		return *m.BigBlind
	}
	return 0
}

func (m *ThRoom) GetSmallBlind() uint32 {
	if m != nil && m.SmallBlind != nil {
		return *m.SmallBlind
	}
	return 0
}

func (m *ThRoom) GetButten() uint32 {
	if m != nil && m.Butten != nil {
		return *m.Butten
	}
	return 0
}

func (m *ThRoom) GetBetRemainTime() int32 {
	if m != nil && m.BetRemainTime != nil {
		return *m.BetRemainTime
	}
	return 0
}

// 刚进来的人
type THRoomAddUserBroadcast struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Users            []*THUser    `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *THRoomAddUserBroadcast) Reset()                    { *m = THRoomAddUserBroadcast{} }
func (m *THRoomAddUserBroadcast) String() string            { return proto.CompactTextString(m) }
func (*THRoomAddUserBroadcast) ProtoMessage()               {}
func (*THRoomAddUserBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *THRoomAddUserBroadcast) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *THRoomAddUserBroadcast) GetUsers() []*THUser {
	if m != nil {
		return m.Users
	}
	return nil
}

type THPork struct {
	ThType           *int32 `protobuf:"varint,1,opt,name=thType" json:"thType,omitempty"`
	Pais             []*Pai `protobuf:"bytes,2,rep,name=pais" json:"pais,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *THPork) Reset()                    { *m = THPork{} }
func (m *THPork) String() string            { return proto.CompactTextString(m) }
func (*THPork) ProtoMessage()               {}
func (*THPork) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *THPork) GetThType() int32 {
	if m != nil && m.ThType != nil {
		return *m.ThType
	}
	return 0
}

func (m *THPork) GetPais() []*Pai {
	if m != nil {
		return m.Pais
	}
	return nil
}

type THBet struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BetType          *int32       `protobuf:"varint,2,opt,name=betType" json:"betType,omitempty"`
	BetAmount        *int32       `protobuf:"varint,3,opt,name=betAmount" json:"betAmount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *THBet) Reset()                    { *m = THBet{} }
func (m *THBet) String() string            { return proto.CompactTextString(m) }
func (*THBet) ProtoMessage()               {}
func (*THBet) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *THBet) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *THBet) GetBetType() int32 {
	if m != nil && m.BetType != nil {
		return *m.BetType
	}
	return 0
}

func (m *THBet) GetBetAmount() int32 {
	if m != nil && m.BetAmount != nil {
		return *m.BetAmount
	}
	return 0
}

type THBetBegin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Dealer           *uint32      `protobuf:"varint,2,opt,name=dealer" json:"dealer,omitempty"`
	BigBlind         *uint32      `protobuf:"varint,3,opt,name=bigBlind" json:"bigBlind,omitempty"`
	SmallBlind       *uint32      `protobuf:"varint,4,opt,name=smallBlind" json:"smallBlind,omitempty"`
	BetUserNow       *uint32      `protobuf:"varint,5,opt,name=betUserNow" json:"betUserNow,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *THBetBegin) Reset()                    { *m = THBetBegin{} }
func (m *THBetBegin) String() string            { return proto.CompactTextString(m) }
func (*THBetBegin) ProtoMessage()               {}
func (*THBetBegin) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *THBetBegin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *THBetBegin) GetDealer() uint32 {
	if m != nil && m.Dealer != nil {
		return *m.Dealer
	}
	return 0
}

func (m *THBetBegin) GetBigBlind() uint32 {
	if m != nil && m.BigBlind != nil {
		return *m.BigBlind
	}
	return 0
}

func (m *THBetBegin) GetSmallBlind() uint32 {
	if m != nil && m.SmallBlind != nil {
		return *m.SmallBlind
	}
	return 0
}

func (m *THBetBegin) GetBetUserNow() uint32 {
	if m != nil && m.BetUserNow != nil {
		return *m.BetUserNow
	}
	return 0
}

type THBetBroadcast struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BetType          *int32       `protobuf:"varint,2,opt,name=betType" json:"betType,omitempty"`
	BetAmount        *int32       `protobuf:"varint,3,opt,name=betAmount" json:"betAmount,omitempty"`
	User             *THUser      `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	NextBetUserId    *uint32      `protobuf:"varint,5,opt,name=nextBetUserId" json:"nextBetUserId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *THBetBroadcast) Reset()                    { *m = THBetBroadcast{} }
func (m *THBetBroadcast) String() string            { return proto.CompactTextString(m) }
func (*THBetBroadcast) ProtoMessage()               {}
func (*THBetBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *THBetBroadcast) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *THBetBroadcast) GetBetType() int32 {
	if m != nil && m.BetType != nil {
		return *m.BetType
	}
	return 0
}

func (m *THBetBroadcast) GetBetAmount() int32 {
	if m != nil && m.BetAmount != nil {
		return *m.BetAmount
	}
	return 0
}

func (m *THBetBroadcast) GetUser() *THUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *THBetBroadcast) GetNextBetUserId() uint32 {
	if m != nil && m.NextBetUserId != nil {
		return *m.NextBetUserId
	}
	return 0
}

// 德州扑克中的User
type THUser struct {
	User             *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	HandPais         []*Pai `protobuf:"bytes,2,rep,name=handPais" json:"handPais,omitempty"`
	Status           *int32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	SeatNumber       *int32 `protobuf:"varint,4,opt,name=seatNumber" json:"seatNumber,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *THUser) Reset()                    { *m = THUser{} }
func (m *THUser) String() string            { return proto.CompactTextString(m) }
func (*THUser) ProtoMessage()               {}
func (*THUser) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *THUser) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *THUser) GetHandPais() []*Pai {
	if m != nil {
		return m.HandPais
	}
	return nil
}

func (m *THUser) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *THUser) GetSeatNumber() int32 {
	if m != nil && m.SeatNumber != nil {
		return *m.SeatNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*ThRoom)(nil), "bbproto.ThRoom")
	proto.RegisterType((*THRoomAddUserBroadcast)(nil), "bbproto.THRoomAddUserBroadcast")
	proto.RegisterType((*THPork)(nil), "bbproto.THPork")
	proto.RegisterType((*THBet)(nil), "bbproto.THBet")
	proto.RegisterType((*THBetBegin)(nil), "bbproto.THBetBegin")
	proto.RegisterType((*THBetBroadcast)(nil), "bbproto.THBetBroadcast")
	proto.RegisterType((*THUser)(nil), "bbproto.THUser")
	proto.RegisterEnum("bbproto.ETHType", ETHType_name, ETHType_value)
}

var fileDescriptor10 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0x5d, 0x8f, 0x93, 0x40,
	0x14, 0x15, 0x28, 0xfd, 0xb8, 0x5b, 0xb6, 0x38, 0xbb, 0x2a, 0xe9, 0xc6, 0xb5, 0x21, 0x3e, 0x18,
	0x1f, 0xfa, 0x60, 0xfc, 0x03, 0x34, 0x36, 0x85, 0x64, 0xd3, 0xe2, 0x16, 0x1e, 0xd6, 0x07, 0x37,
	0x43, 0x99, 0x2c, 0x6c, 0x0b, 0x54, 0x18, 0xe2, 0x47, 0xfc, 0x11, 0xbe, 0xf9, 0xff, 0xfc, 0x25,
	0xce, 0x0c, 0xa5, 0xad, 0x6e, 0x4d, 0xea, 0x4b, 0x43, 0xcf, 0xdc, 0x7b, 0xee, 0xb9, 0xe7, 0x5c,
	0xd0, 0x68, 0xe4, 0x66, 0x4b, 0x92, 0x0f, 0xd7, 0x79, 0x46, 0x33, 0xd4, 0x0a, 0x02, 0xf1, 0xd1,
	0x87, 0x00, 0x17, 0x64, 0xb8, 0xf9, 0x2e, 0x8b, 0xba, 0xa0, 0xdf, 0xfb, 0x16, 0xe1, 0xfb, 0x38,
	0x8d, 0x4a, 0x5c, 0x01, 0xe6, 0x4f, 0x19, 0x9a, 0x5e, 0x74, 0x9d, 0x65, 0x09, 0x7a, 0x09, 0xcd,
	0x88, 0xe0, 0x90, 0xe4, 0x86, 0x34, 0x90, 0x5e, 0x9d, 0xbc, 0x39, 0x1f, 0x6e, 0xd8, 0x86, 0x2e,
	0xff, 0xb5, 0xc5, 0x1b, 0xea, 0x41, 0x2b, 0x27, 0x9f, 0xbc, 0xaf, 0x6b, 0x62, 0xc8, 0xac, 0x4c,
	0xe5, 0xc0, 0x3d, 0x5e, 0x2c, 0xd7, 0x19, 0x35, 0x14, 0x06, 0x28, 0xe8, 0x12, 0x54, 0x3e, 0xb1,
	0x30, 0x1a, 0x03, 0x85, 0xd1, 0xf4, 0xb6, 0x34, 0x9e, 0xed, 0x17, 0x15, 0x43, 0x40, 0xa8, 0x17,
	0x27, 0xc4, 0x50, 0x05, 0x03, 0x02, 0x08, 0x49, 0xb1, 0x9c, 0x53, 0x4c, 0xcb, 0xc2, 0x68, 0x0a,
	0x6c, 0x00, 0xb0, 0x2e, 0x83, 0x55, 0xbc, 0x70, 0x71, 0x5c, 0x18, 0x2d, 0xc1, 0xd4, 0xdd, 0x09,
	0xc2, 0x31, 0x7a, 0x0c, 0x1d, 0x46, 0xc3, 0x19, 0x9d, 0xd0, 0x68, 0xb3, 0x26, 0x0d, 0xe9, 0xd0,
	0x0e, 0xe2, 0xbb, 0xd1, 0x2a, 0x4e, 0x43, 0xa3, 0x23, 0x10, 0x46, 0x5d, 0x24, 0x78, 0xb5, 0xaa,
	0x30, 0x10, 0xd8, 0x29, 0x34, 0x83, 0x92, 0x52, 0x92, 0x1a, 0x27, 0xe2, 0xff, 0x13, 0xd0, 0x18,
	0xd1, 0x35, 0x49, 0x70, 0x9c, 0x0a, 0x55, 0x5d, 0xae, 0xc0, 0xfc, 0x08, 0x4f, 0x3d, 0x9b, 0x1b,
	0x63, 0x85, 0x21, 0x9f, 0x32, 0xca, 0x33, 0x1c, 0x2e, 0x70, 0x41, 0x8f, 0x34, 0x6a, 0x6b, 0x83,
	0x7c, 0xd0, 0x06, 0xf3, 0x2d, 0x33, 0xde, 0x76, 0xb3, 0x7c, 0xc9, 0x05, 0xd1, 0x48, 0x38, 0x2a,
	0x89, 0xdd, 0xfb, 0xd0, 0x58, 0xf3, 0xad, 0xe5, 0x87, 0x5b, 0x9b, 0xef, 0x41, 0xf5, 0xec, 0x11,
	0xa1, 0xc7, 0xa7, 0xc5, 0xbd, 0xde, 0xa5, 0x55, 0xb9, 0x66, 0x25, 0x59, 0x99, 0x56, 0x79, 0xa9,
	0xe6, 0x77, 0x00, 0x41, 0x39, 0x22, 0x77, 0x71, 0x7a, 0x24, 0x2f, 0x93, 0x1c, 0x12, 0xbc, 0x62,
	0x55, 0xf2, 0x03, 0xe7, 0x95, 0x03, 0xce, 0x37, 0x6a, 0x6c, 0x13, 0xd9, 0x34, 0xfb, 0x2c, 0xc2,
	0xd7, 0xcc, 0x1f, 0x12, 0x9c, 0x56, 0xe3, 0xff, 0xd3, 0xdf, 0x23, 0x56, 0x43, 0xcf, 0xa1, 0xc1,
	0x33, 0x10, 0xe3, 0x0f, 0x5c, 0x22, 0x4b, 0x3e, 0x25, 0x5f, 0xd8, 0xe2, 0xf5, 0x19, 0x55, 0x92,
	0x62, 0x9e, 0x8c, 0x28, 0xb8, 0xd8, 0xf4, 0x57, 0x3a, 0xb4, 0x6d, 0xbf, 0x78, 0xbc, 0x84, 0x76,
	0x84, 0xd3, 0xd0, 0xfd, 0x47, 0x54, 0xdc, 0xa3, 0xa2, 0x3a, 0x69, 0xa5, 0x3e, 0xf3, 0x82, 0x60,
	0x3a, 0x2d, 0x93, 0x60, 0x23, 0x49, 0x7d, 0xfd, 0x4b, 0x82, 0xd6, 0xd8, 0xb3, 0xf9, 0x16, 0xec,
	0x9d, 0x19, 0x71, 0xeb, 0xdd, 0xb8, 0xe3, 0xdb, 0x89, 0x35, 0x73, 0x2d, 0x47, 0x97, 0xd8, 0x4e,
	0x5a, 0x8d, 0xdd, 0x38, 0xef, 0x7c, 0x47, 0x97, 0xd1, 0x39, 0xe8, 0x35, 0x74, 0xe5, 0x58, 0xd3,
	0x09, 0x47, 0x95, 0xfd, 0x42, 0x76, 0xb5, 0xe3, 0xb1, 0xde, 0xd8, 0xe7, 0x9b, 0xdb, 0xfe, 0xf4,
	0x83, 0xa3, 0xab, 0xe8, 0x0c, 0x7a, 0xdb, 0xb2, 0xd9, 0x74, 0x62, 0xfb, 0x96, 0xde, 0x64, 0xe1,
	0x75, 0x6b, 0xd0, 0xf6, 0xaf, 0x7c, 0xbd, 0xf5, 0x47, 0xab, 0xe3, 0x39, 0xd6, 0x4c, 0x6f, 0xa3,
	0x67, 0x70, 0xf6, 0x57, 0x2b, 0x67, 0xd5, 0x3b, 0xe8, 0x05, 0x5c, 0xec, 0xda, 0x99, 0xa0, 0xb9,
	0xed, 0xec, 0x17, 0x80, 0xfb, 0xc8, 0x95, 0x5c, 0xf9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0x4a, 0x5e, 0x2d, 0xab, 0x04, 0x00, 0x00,
}
