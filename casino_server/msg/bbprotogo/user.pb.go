// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of TerminalInfo from base.proto

// Ignoring public import of EProtoId from base.proto

type User struct {
	Mid                *string `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
	Name               *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pwd                *string `protobuf:"bytes,3,opt,name=pwd" json:"pwd,omitempty"`
	Coin               *int64  `protobuf:"varint,4,opt,name=coin" json:"coin,omitempty"`
	Id                 *uint32 `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	NickName           *string `protobuf:"bytes,6,opt,name=nickName" json:"nickName,omitempty"`
	LoginTurntable     *bool   `protobuf:"varint,7,opt,name=loginTurntable" json:"loginTurntable,omitempty"`
	LoginTurntableTime *string `protobuf:"bytes,8,opt,name=loginTurntableTime" json:"loginTurntableTime,omitempty"`
	Scores             *int32  `protobuf:"varint,9,opt,name=scores" json:"scores,omitempty"`
	LastSignTime       *string `protobuf:"bytes,10,opt,name=lastSignTime" json:"lastSignTime,omitempty"`
	SignCount          *int32  `protobuf:"varint,11,opt,name=signCount" json:"signCount,omitempty"`
	Diamond            *int64  `protobuf:"varint,12,opt,name=Diamond" json:"Diamond,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *User) GetMid() string {
	if m != nil && m.Mid != nil {
		return *m.Mid
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *User) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *User) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *User) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *User) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *User) GetLoginTurntable() bool {
	if m != nil && m.LoginTurntable != nil {
		return *m.LoginTurntable
	}
	return false
}

func (m *User) GetLoginTurntableTime() string {
	if m != nil && m.LoginTurntableTime != nil {
		return *m.LoginTurntableTime
	}
	return ""
}

func (m *User) GetScores() int32 {
	if m != nil && m.Scores != nil {
		return *m.Scores
	}
	return 0
}

func (m *User) GetLastSignTime() string {
	if m != nil && m.LastSignTime != nil {
		return *m.LastSignTime
	}
	return ""
}

func (m *User) GetSignCount() int32 {
	if m != nil && m.SignCount != nil {
		return *m.SignCount
	}
	return 0
}

func (m *User) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "bbproto.User")
}

var fileDescriptor14 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8e, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x49, 0x93, 0x36, 0xc9, 0x6f, 0x28, 0x30, 0x42, 0x68, 0xd4, 0x15, 0x62, 0xc5, 0x8a,
	0x4b, 0xc0, 0x1a, 0x21, 0x51, 0x0e, 0xe0, 0x24, 0x56, 0x65, 0x91, 0x8c, 0x2b, 0xdb, 0x11, 0x57,
	0xe5, 0x38, 0x4c, 0x8d, 0x58, 0xb0, 0x9b, 0xff, 0xff, 0x7b, 0xd2, 0x00, 0x4b, 0xb4, 0xe1, 0xe9,
	0x14, 0x7c, 0xf2, 0x54, 0xf7, 0x7d, 0x3e, 0xf6, 0xe8, 0x4d, 0xb4, 0xbf, 0xe5, 0xc3, 0x77, 0x81,
	0xea, 0x43, 0x19, 0xda, 0xa2, 0x9c, 0xdd, 0xc8, 0xc5, 0x7d, 0xf1, 0xd8, 0x52, 0x87, 0x4a, 0xcc,
	0x6c, 0x79, 0x95, 0x93, 0x4e, 0xa7, 0xaf, 0x91, 0xcb, 0xbf, 0x69, 0xf0, 0x4e, 0xb8, 0xd2, 0x54,
	0x12, 0xb0, 0x52, 0x69, 0xad, 0xf7, 0x25, 0x5d, 0xa3, 0x11, 0x37, 0x7c, 0xbe, 0x9e, 0xc5, 0x4d,
	0x66, 0xef, 0xb0, 0x9b, 0xfc, 0xd1, 0xc9, 0x61, 0x09, 0x92, 0x4c, 0x3f, 0x59, 0xae, 0xb5, 0x6f,
	0x68, 0x0f, 0xfa, 0xdf, 0x1f, 0x9c, 0x3a, 0x4d, 0x76, 0x76, 0xd8, 0xc4, 0xc1, 0x07, 0x1b, 0xb9,
	0xd5, 0xbc, 0xa6, 0x5b, 0x74, 0x93, 0x89, 0xe9, 0xdd, 0x1d, 0x25, 0x53, 0xc8, 0xd4, 0x0d, 0xda,
	0xa8, 0xcd, 0xb3, 0x5f, 0x24, 0xf1, 0x36, 0x83, 0x57, 0xa8, 0x5f, 0x9c, 0x99, 0xbd, 0x8c, 0xdc,
	0x9d, 0x7f, 0x7b, 0xbb, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x12, 0x80, 0xf7, 0x51, 0xfe, 0x00,
	0x00, 0x00,
}
