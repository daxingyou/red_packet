// Code generated by protoc-gen-go.
// source: mahjong_server.proto
// DO NOT EDIT!

/*
Package majiang is a generated protocol buffer package.

It is generated from these files:
	mahjong_server.proto

It has these top-level messages:
	MJPai
	MJHandPai
	CheckBean
	CheckCase
	MjDesk
	MjUser
	MjSession
	MjRoom
*/
package majiang

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 麻将牌的结构
type MJPai struct {
	Index            *int32  `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Flower           *int32  `protobuf:"varint,2,opt,name=flower" json:"flower,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Des              *string `protobuf:"bytes,4,opt,name=des" json:"des,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MJPai) Reset()                    { *m = MJPai{} }
func (m *MJPai) String() string            { return proto.CompactTextString(m) }
func (*MJPai) ProtoMessage()               {}
func (*MJPai) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MJPai) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *MJPai) GetFlower() int32 {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return 0
}

func (m *MJPai) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *MJPai) GetDes() string {
	if m != nil && m.Des != nil {
		return *m.Des
	}
	return ""
}

// 手里的一副牌
type MJHandPai struct {
	Pais             []*MJPai `protobuf:"bytes,1,rep,name=Pais" json:"Pais,omitempty"`
	PengPais         []*MJPai `protobuf:"bytes,2,rep,name=PengPais" json:"PengPais,omitempty"`
	GangPais         []*MJPai `protobuf:"bytes,3,rep,name=GangPais" json:"GangPais,omitempty"`
	HuPais           []*MJPai `protobuf:"bytes,4,rep,name=HuPais" json:"HuPais,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MJHandPai) Reset()                    { *m = MJHandPai{} }
func (m *MJHandPai) String() string            { return proto.CompactTextString(m) }
func (*MJHandPai) ProtoMessage()               {}
func (*MJHandPai) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MJHandPai) GetPais() []*MJPai {
	if m != nil {
		return m.Pais
	}
	return nil
}

func (m *MJHandPai) GetPengPais() []*MJPai {
	if m != nil {
		return m.PengPais
	}
	return nil
}

func (m *MJHandPai) GetGangPais() []*MJPai {
	if m != nil {
		return m.GangPais
	}
	return nil
}

func (m *MJHandPai) GetHuPais() []*MJPai {
	if m != nil {
		return m.HuPais
	}
	return nil
}

// 需要确认的时间
type CheckBean struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	CanPeng          *bool   `protobuf:"varint,2,opt,name=CanPeng" json:"CanPeng,omitempty"`
	CanGang          *bool   `protobuf:"varint,3,opt,name=CanGang" json:"CanGang,omitempty"`
	CanHu            *bool   `protobuf:"varint,4,opt,name=CanHu" json:"CanHu,omitempty"`
	CheckStatus      *int32  `protobuf:"varint,5,opt,name=CheckStatus" json:"CheckStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CheckBean) Reset()                    { *m = CheckBean{} }
func (m *CheckBean) String() string            { return proto.CompactTextString(m) }
func (*CheckBean) ProtoMessage()               {}
func (*CheckBean) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CheckBean) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CheckBean) GetCanPeng() bool {
	if m != nil && m.CanPeng != nil {
		return *m.CanPeng
	}
	return false
}

func (m *CheckBean) GetCanGang() bool {
	if m != nil && m.CanGang != nil {
		return *m.CanGang
	}
	return false
}

func (m *CheckBean) GetCanHu() bool {
	if m != nil && m.CanHu != nil {
		return *m.CanHu
	}
	return false
}

func (m *CheckBean) GetCheckStatus() int32 {
	if m != nil && m.CheckStatus != nil {
		return *m.CheckStatus
	}
	return 0
}

type CheckCase struct {
	CheckB           []*CheckBean `protobuf:"bytes,1,rep,name=CheckB" json:"CheckB,omitempty"`
	CheckStatus      *int32       `protobuf:"varint,2,opt,name=CheckStatus" json:"CheckStatus,omitempty"`
	CheckMJPai       *MJPai       `protobuf:"bytes,3,opt,name=CheckMJPai" json:"CheckMJPai,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CheckCase) Reset()                    { *m = CheckCase{} }
func (m *CheckCase) String() string            { return proto.CompactTextString(m) }
func (*CheckCase) ProtoMessage()               {}
func (*CheckCase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CheckCase) GetCheckB() []*CheckBean {
	if m != nil {
		return m.CheckB
	}
	return nil
}

func (m *CheckCase) GetCheckStatus() int32 {
	if m != nil && m.CheckStatus != nil {
		return *m.CheckStatus
	}
	return 0
}

func (m *CheckCase) GetCheckMJPai() *MJPai {
	if m != nil {
		return m.CheckMJPai
	}
	return nil
}

// 麻将牌的结构
type MjDesk struct {
	DeskId           *int32     `protobuf:"varint,1,opt,name=DeskId" json:"DeskId,omitempty"`
	RoomId           *int32     `protobuf:"varint,2,opt,name=RoomId" json:"RoomId,omitempty"`
	Status           *int32     `protobuf:"varint,3,opt,name=Status" json:"Status,omitempty"`
	Users            []*MjUser  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Password         *string    `protobuf:"bytes,5,opt,name=Password" json:"Password,omitempty"`
	Owner            *uint32    `protobuf:"varint,6,opt,name=Owner" json:"Owner,omitempty"`
	CreateFee        *int64     `protobuf:"varint,7,opt,name=CreateFee" json:"CreateFee,omitempty"`
	MjRoomType       *int32     `protobuf:"varint,8,opt,name=mjRoomType" json:"mjRoomType,omitempty"`
	BoardsCout       *int32     `protobuf:"varint,9,opt,name=boardsCout" json:"boardsCout,omitempty"`
	CapMax           *int64     `protobuf:"varint,10,opt,name=capMax" json:"capMax,omitempty"`
	CardsNum         *int32     `protobuf:"varint,11,opt,name=cardsNum" json:"cardsNum,omitempty"`
	Settlement       *int32     `protobuf:"varint,12,opt,name=settlement" json:"settlement,omitempty"`
	BaseValue        *int64     `protobuf:"varint,13,opt,name=baseValue" json:"baseValue,omitempty"`
	ZiMoRadio        *int32     `protobuf:"varint,14,opt,name=ziMoRadio" json:"ziMoRadio,omitempty"`
	DianGangHuaRadio *int32     `protobuf:"varint,15,opt,name=dianGangHuaRadio" json:"dianGangHuaRadio,omitempty"`
	OthersCheckBox   []int32    `protobuf:"varint,16,rep,name=othersCheckBox" json:"othersCheckBox,omitempty"`
	HuRadio          *int32     `protobuf:"varint,17,opt,name=huRadio" json:"huRadio,omitempty"`
	AllMJPai         []*MJPai   `protobuf:"bytes,18,rep,name=AllMJPai" json:"AllMJPai,omitempty"`
	DeskMJPai        []*MJPai   `protobuf:"bytes,19,rep,name=DeskMJPai" json:"DeskMJPai,omitempty"`
	MJPaiNexIndex    *int32     `protobuf:"varint,20,opt,name=MJPaiNexIndex" json:"MJPaiNexIndex,omitempty"`
	TotalPlayCount   *int32     `protobuf:"varint,21,opt,name=TotalPlayCount" json:"TotalPlayCount,omitempty"`
	CurrPlayCount    *int32     `protobuf:"varint,22,opt,name=CurrPlayCount" json:"CurrPlayCount,omitempty"`
	Banker           *uint32    `protobuf:"varint,23,opt,name=Banker" json:"Banker,omitempty"`
	CheckCase        *CheckCase `protobuf:"bytes,24,opt,name=CheckCase" json:"CheckCase,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MjDesk) Reset()                    { *m = MjDesk{} }
func (m *MjDesk) String() string            { return proto.CompactTextString(m) }
func (*MjDesk) ProtoMessage()               {}
func (*MjDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MjDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *MjDesk) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MjDesk) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *MjDesk) GetUsers() []*MjUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *MjDesk) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *MjDesk) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *MjDesk) GetCreateFee() int64 {
	if m != nil && m.CreateFee != nil {
		return *m.CreateFee
	}
	return 0
}

func (m *MjDesk) GetMjRoomType() int32 {
	if m != nil && m.MjRoomType != nil {
		return *m.MjRoomType
	}
	return 0
}

func (m *MjDesk) GetBoardsCout() int32 {
	if m != nil && m.BoardsCout != nil {
		return *m.BoardsCout
	}
	return 0
}

func (m *MjDesk) GetCapMax() int64 {
	if m != nil && m.CapMax != nil {
		return *m.CapMax
	}
	return 0
}

func (m *MjDesk) GetCardsNum() int32 {
	if m != nil && m.CardsNum != nil {
		return *m.CardsNum
	}
	return 0
}

func (m *MjDesk) GetSettlement() int32 {
	if m != nil && m.Settlement != nil {
		return *m.Settlement
	}
	return 0
}

func (m *MjDesk) GetBaseValue() int64 {
	if m != nil && m.BaseValue != nil {
		return *m.BaseValue
	}
	return 0
}

func (m *MjDesk) GetZiMoRadio() int32 {
	if m != nil && m.ZiMoRadio != nil {
		return *m.ZiMoRadio
	}
	return 0
}

func (m *MjDesk) GetDianGangHuaRadio() int32 {
	if m != nil && m.DianGangHuaRadio != nil {
		return *m.DianGangHuaRadio
	}
	return 0
}

func (m *MjDesk) GetOthersCheckBox() []int32 {
	if m != nil {
		return m.OthersCheckBox
	}
	return nil
}

func (m *MjDesk) GetHuRadio() int32 {
	if m != nil && m.HuRadio != nil {
		return *m.HuRadio
	}
	return 0
}

func (m *MjDesk) GetAllMJPai() []*MJPai {
	if m != nil {
		return m.AllMJPai
	}
	return nil
}

func (m *MjDesk) GetDeskMJPai() []*MJPai {
	if m != nil {
		return m.DeskMJPai
	}
	return nil
}

func (m *MjDesk) GetMJPaiNexIndex() int32 {
	if m != nil && m.MJPaiNexIndex != nil {
		return *m.MJPaiNexIndex
	}
	return 0
}

func (m *MjDesk) GetTotalPlayCount() int32 {
	if m != nil && m.TotalPlayCount != nil {
		return *m.TotalPlayCount
	}
	return 0
}

func (m *MjDesk) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *MjDesk) GetBanker() uint32 {
	if m != nil && m.Banker != nil {
		return *m.Banker
	}
	return 0
}

func (m *MjDesk) GetCheckCase() *CheckCase {
	if m != nil {
		return m.CheckCase
	}
	return nil
}

// 手里的一副牌
type MjUser struct {
	UserId           *uint32    `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	Coin             *int64     `protobuf:"varint,2,opt,name=Coin" json:"Coin,omitempty"`
	RebuyCount       *int32     `protobuf:"varint,3,opt,name=RebuyCount" json:"RebuyCount,omitempty"`
	MJHandPai        *MJHandPai `protobuf:"bytes,4,opt,name=MJHandPai" json:"MJHandPai,omitempty"`
	Status           *int32     `protobuf:"varint,5,opt,name=Status" json:"Status,omitempty"`
	IsBreak          *bool      `protobuf:"varint,6,opt,name=IsBreak" json:"IsBreak,omitempty"`
	IsLeave          *bool      `protobuf:"varint,7,opt,name=IsLeave" json:"IsLeave,omitempty"`
	DeskId           *int32     `protobuf:"varint,8,opt,name=DeskId" json:"DeskId,omitempty"`
	RoomId           *int32     `protobuf:"varint,9,opt,name=RoomId" json:"RoomId,omitempty"`
	DingQue          *bool      `protobuf:"varint,10,opt,name=DingQue" json:"DingQue,omitempty"`
	Exchanged        *bool      `protobuf:"varint,11,opt,name=Exchanged" json:"Exchanged,omitempty"`
	Ready            *bool      `protobuf:"varint,12,opt,name=Ready" json:"Ready,omitempty"`
	IsBanker         *bool      `protobuf:"varint,13,opt,name=IsBanker" json:"IsBanker,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *MjUser) Reset()                    { *m = MjUser{} }
func (m *MjUser) String() string            { return proto.CompactTextString(m) }
func (*MjUser) ProtoMessage()               {}
func (*MjUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MjUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *MjUser) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *MjUser) GetRebuyCount() int32 {
	if m != nil && m.RebuyCount != nil {
		return *m.RebuyCount
	}
	return 0
}

func (m *MjUser) GetMJHandPai() *MJHandPai {
	if m != nil {
		return m.MJHandPai
	}
	return nil
}

func (m *MjUser) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *MjUser) GetIsBreak() bool {
	if m != nil && m.IsBreak != nil {
		return *m.IsBreak
	}
	return false
}

func (m *MjUser) GetIsLeave() bool {
	if m != nil && m.IsLeave != nil {
		return *m.IsLeave
	}
	return false
}

func (m *MjUser) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *MjUser) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MjUser) GetDingQue() bool {
	if m != nil && m.DingQue != nil {
		return *m.DingQue
	}
	return false
}

func (m *MjUser) GetExchanged() bool {
	if m != nil && m.Exchanged != nil {
		return *m.Exchanged
	}
	return false
}

func (m *MjUser) GetReady() bool {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return false
}

func (m *MjUser) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

// 用户的session
type MjSession struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	RoomId           *int32  `protobuf:"varint,2,opt,name=RoomId" json:"RoomId,omitempty"`
	DeskId           *int32  `protobuf:"varint,3,opt,name=DeskId" json:"DeskId,omitempty"`
	GameStatus       *int32  `protobuf:"varint,4,opt,name=GameStatus" json:"GameStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MjSession) Reset()                    { *m = MjSession{} }
func (m *MjSession) String() string            { return proto.CompactTextString(m) }
func (*MjSession) ProtoMessage()               {}
func (*MjSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MjSession) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *MjSession) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MjSession) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *MjSession) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

// 一个麻将room
type MjRoom struct {
	RoomId           *int32    `protobuf:"varint,1,opt,name=RoomId" json:"RoomId,omitempty"`
	RoomType         *int32    `protobuf:"varint,2,opt,name=RoomType" json:"RoomType,omitempty"`
	ReadyTime        *int64    `protobuf:"varint,3,opt,name=ReadyTime" json:"ReadyTime,omitempty"`
	BeginTime        *int64    `protobuf:"varint,4,opt,name=BeginTime" json:"BeginTime,omitempty"`
	EndTIme          *int64    `protobuf:"varint,5,opt,name=EndTIme" json:"EndTIme,omitempty"`
	Desks            []*MjDesk `protobuf:"bytes,6,rep,name=Desks" json:"Desks,omitempty"`
	PaiIndexNow      *int32    `protobuf:"varint,7,opt,name=PaiIndexNow" json:"PaiIndexNow,omitempty"`
	MjPais           []*MJPai  `protobuf:"bytes,8,rep,name=MjPais" json:"MjPais,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MjRoom) Reset()                    { *m = MjRoom{} }
func (m *MjRoom) String() string            { return proto.CompactTextString(m) }
func (*MjRoom) ProtoMessage()               {}
func (*MjRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MjRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MjRoom) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *MjRoom) GetReadyTime() int64 {
	if m != nil && m.ReadyTime != nil {
		return *m.ReadyTime
	}
	return 0
}

func (m *MjRoom) GetBeginTime() int64 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *MjRoom) GetEndTIme() int64 {
	if m != nil && m.EndTIme != nil {
		return *m.EndTIme
	}
	return 0
}

func (m *MjRoom) GetDesks() []*MjDesk {
	if m != nil {
		return m.Desks
	}
	return nil
}

func (m *MjRoom) GetPaiIndexNow() int32 {
	if m != nil && m.PaiIndexNow != nil {
		return *m.PaiIndexNow
	}
	return 0
}

func (m *MjRoom) GetMjPais() []*MJPai {
	if m != nil {
		return m.MjPais
	}
	return nil
}

func init() {
	proto.RegisterType((*MJPai)(nil), "majiang.MJPai")
	proto.RegisterType((*MJHandPai)(nil), "majiang.MJHandPai")
	proto.RegisterType((*CheckBean)(nil), "majiang.CheckBean")
	proto.RegisterType((*CheckCase)(nil), "majiang.CheckCase")
	proto.RegisterType((*MjDesk)(nil), "majiang.MjDesk")
	proto.RegisterType((*MjUser)(nil), "majiang.MjUser")
	proto.RegisterType((*MjSession)(nil), "majiang.MjSession")
	proto.RegisterType((*MjRoom)(nil), "majiang.MjRoom")
}

var fileDescriptor0 = []byte{
	// 743 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x54, 0xcd, 0x52, 0xdb, 0x30,
	0x10, 0x9e, 0xfc, 0x62, 0x2b, 0x24, 0x80, 0xf9, 0xa9, 0x0e, 0x1d, 0x86, 0x7a, 0x86, 0x19, 0x4e,
	0x1c, 0xfa, 0x06, 0x4d, 0xa0, 0x24, 0x4c, 0x03, 0x34, 0x84, 0x5e, 0x3b, 0x22, 0xde, 0x26, 0x4e,
	0x6c, 0x89, 0xb1, 0x6c, 0x12, 0xfa, 0x0e, 0x3d, 0xf6, 0x55, 0xfa, 0x6c, 0x3d, 0x76, 0xb5, 0xb2,
	0x49, 0x26, 0xa4, 0xa7, 0x44, 0xab, 0xd5, 0x7e, 0xfb, 0x7d, 0xfb, 0xad, 0xd9, 0x41, 0x2c, 0x26,
	0x53, 0x25, 0xc7, 0xdf, 0x35, 0x24, 0xcf, 0x90, 0x9c, 0x3f, 0x25, 0x2a, 0x55, 0xde, 0x56, 0x2c,
	0xa6, 0xa1, 0x90, 0x63, 0xbf, 0xcd, 0x6a, 0xfd, 0xeb, 0x3b, 0x11, 0x7a, 0x4d, 0x56, 0x0b, 0x65,
	0x00, 0x0b, 0x5e, 0x3a, 0x29, 0x9d, 0xd5, 0xbc, 0x16, 0xab, 0xff, 0x88, 0xd4, 0x1c, 0x12, 0x5e,
	0xa6, 0x33, 0x5e, 0x3f, 0x8b, 0x28, 0x03, 0x5e, 0xa1, 0x63, 0x83, 0x55, 0x02, 0xd0, 0xbc, 0x8a,
	0x07, 0xd7, 0xff, 0x55, 0x62, 0x6e, 0xff, 0xba, 0x2b, 0x64, 0x60, 0x0a, 0xbd, 0x67, 0x55, 0xfc,
	0xd1, 0x58, 0xa7, 0x72, 0xd6, 0xf8, 0xd8, 0x3a, 0xcf, 0x91, 0xce, 0x2d, 0xcc, 0x09, 0x73, 0xee,
	0x40, 0x8e, 0x29, 0xa3, 0xfc, 0xbf, 0x8c, 0x2b, 0x91, 0x67, 0x54, 0x36, 0x66, 0x1c, 0xb3, 0x7a,
	0x37, 0xa3, 0xfb, 0xea, 0xa6, 0x7b, 0x5f, 0x30, 0xb7, 0x33, 0x81, 0xd1, 0xac, 0x0d, 0x42, 0x1a,
	0x22, 0x19, 0x52, 0xef, 0x05, 0x44, 0xac, 0xe9, 0xed, 0xb0, 0xad, 0x8e, 0x90, 0xa6, 0x07, 0x62,
	0xe6, 0xe4, 0x01, 0x03, 0x49, 0xdc, 0x1c, 0x43, 0x15, 0x03, 0xdd, 0x8c, 0xd8, 0x39, 0xde, 0x3e,
	0x6b, 0x50, 0xb5, 0xfb, 0x54, 0xa4, 0x99, 0xe6, 0x35, 0xc3, 0xdf, 0x9f, 0xe4, 0x10, 0x1d, 0xa1,
	0xc1, 0xf3, 0x59, 0xdd, 0xe2, 0xe5, 0x9c, 0xbd, 0xd7, 0x7e, 0x96, 0x6d, 0xac, 0x55, 0xb1, 0xa2,
	0xfa, 0x8c, 0x51, 0x90, 0xda, 0x26, 0xf4, 0xb7, 0x64, 0x7e, 0x57, 0x59, 0xbd, 0x3f, 0xbd, 0x00,
	0x3d, 0x33, 0x54, 0xcc, 0x6f, 0x4e, 0x85, 0x66, 0x34, 0x50, 0x2a, 0xc6, 0x73, 0xb9, 0x38, 0xe7,
	0xe5, 0xed, 0x90, 0x8e, 0x59, 0xcd, 0x50, 0x2f, 0x64, 0xda, 0x59, 0x56, 0x9e, 0x3e, 0x60, 0xdc,
	0xdb, 0xc5, 0x59, 0x08, 0xad, 0xe7, 0x2a, 0x09, 0x88, 0x96, 0x6b, 0xa8, 0xdf, 0xce, 0x25, 0x0e,
	0xbd, 0x4e, 0x5a, 0xed, 0x21, 0xcb, 0x04, 0x44, 0x0a, 0x9f, 0x01, 0xf8, 0x16, 0x86, 0x2a, 0x9e,
	0xc7, 0x58, 0x3c, 0x35, 0xa8, 0xc3, 0x97, 0x27, 0xe0, 0x0e, 0xe1, 0x60, 0xec, 0x51, 0x89, 0x24,
	0xd0, 0x1d, 0x95, 0xa5, 0xdc, 0x2d, 0x7a, 0x19, 0x89, 0xa7, 0xbe, 0x58, 0x70, 0x46, 0xef, 0x10,
	0x6b, 0x64, 0x52, 0x6e, 0xb2, 0x98, 0x37, 0x8a, 0x57, 0x1a, 0xd2, 0x34, 0x82, 0x18, 0x64, 0xca,
	0xb7, 0x29, 0x86, 0x80, 0x8f, 0xa8, 0xe8, 0x37, 0x72, 0x5a, 0x93, 0x1e, 0x62, 0xe8, 0x67, 0xd8,
	0x57, 0x03, 0x11, 0x84, 0x8a, 0xb7, 0x28, 0x8b, 0xb3, 0xdd, 0x20, 0xb4, 0x23, 0xeb, 0x66, 0xc2,
	0xde, 0xec, 0xd0, 0xcd, 0x11, 0x6b, 0xa9, 0x74, 0x82, 0x94, 0xad, 0xf0, 0x6a, 0xc1, 0x77, 0x91,
	0x7a, 0xcd, 0xcc, 0x78, 0x92, 0xd9, 0xc4, 0x3d, 0x4a, 0x44, 0x93, 0x7d, 0x8a, 0x22, 0xab, 0xbb,
	0xb7, 0xd1, 0x64, 0x1f, 0x98, 0x6b, 0xc4, 0xb6, 0x29, 0xfb, 0x1b, 0x53, 0x0e, 0x59, 0x93, 0xfe,
	0xdc, 0xc0, 0xa2, 0x47, 0xab, 0x73, 0x50, 0x34, 0x31, 0x54, 0xa9, 0x88, 0xee, 0x22, 0xf1, 0x82,
	0x8a, 0x20, 0xb9, 0x43, 0x8a, 0x63, 0x7a, 0x27, 0x4b, 0x92, 0x65, 0xf8, 0xa8, 0x50, 0xaa, 0x2d,
	0xe4, 0x0c, 0x45, 0x7f, 0x47, 0xa2, 0x9f, 0xae, 0x58, 0x8b, 0x73, 0xf2, 0xc4, 0x9a, 0xa1, 0xcc,
	0x8d, 0xff, 0xb7, 0x64, 0x7c, 0x41, 0x73, 0xc4, 0x0a, 0x0f, 0xab, 0x16, 0xdf, 0x66, 0xd5, 0x8e,
	0x0a, 0x25, 0xb9, 0x82, 0x26, 0x36, 0x80, 0xc7, 0x2c, 0xc7, 0xb4, 0xce, 0x38, 0x5d, 0x59, 0x58,
	0xb2, 0xf9, 0x2a, 0xc6, 0x72, 0x95, 0x97, 0x86, 0x22, 0xd7, 0x1b, 0x19, 0x7b, 0xba, 0x8d, 0x8e,
	0x98, 0x91, 0x41, 0x1c, 0x1b, 0xf8, 0x02, 0xe2, 0xd9, 0xda, 0xc3, 0x59, 0xb1, 0xa8, 0xb3, 0x66,
	0x51, 0xb7, 0xa8, 0x70, 0x11, 0xca, 0xf1, 0x57, 0x1c, 0x2f, 0xa3, 0x07, 0x38, 0xde, 0xcb, 0xc5,
	0x68, 0x82, 0xb8, 0x10, 0x90, 0x31, 0x68, 0xff, 0x06, 0x20, 0x82, 0x17, 0xf2, 0x84, 0x63, 0x9c,
	0x83, 0xa0, 0x56, 0x21, 0x63, 0x09, 0xc7, 0xbf, 0xc5, 0xee, 0xa7, 0xf7, 0xa0, 0x75, 0xa8, 0xe4,
	0x1b, 0xf2, 0x1b, 0x96, 0x22, 0xef, 0xa8, 0x52, 0xd8, 0xee, 0x4a, 0xc4, 0x90, 0xf3, 0xaa, 0xd2,
	0x36, 0xff, 0x21, 0x2d, 0xcd, 0xb3, 0x95, 0xe7, 0x76, 0xc7, 0x10, 0xfd, 0xd5, 0xed, 0xe5, 0xc2,
	0xa3, 0xd4, 0xde, 0x30, 0x8c, 0xed, 0xd7, 0x90, 0x3c, 0xda, 0x86, 0x71, 0x28, 0x29, 0x54, 0xa5,
	0x10, 0x12, 0xbd, 0x94, 0xc1, 0xb0, 0x87, 0x81, 0x1a, 0x05, 0x70, 0x19, 0x4d, 0x1f, 0x1a, 0x95,
	0x5b, 0x5f, 0x46, 0x5a, 0x6e, 0xfc, 0x40, 0xa0, 0xe4, 0xe4, 0xa3, 0x1b, 0x35, 0x27, 0x39, 0xcd,
	0x06, 0x63, 0x5f, 0xf4, 0xa5, 0x73, 0x36, 0x39, 0xf0, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde,
	0x4c, 0xe4, 0x83, 0xdd, 0x05, 0x00, 0x00,
}
