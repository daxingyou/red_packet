package majiang;

//麻将牌的结构
message MJPai {
    optional int32 index = 1;
    optional int32 flower = 2; //
    optional int32 value = 3; //取值为:1~9
    optional string des = 4;
}

//手里的一副牌
message MJHandPai {
    repeated MJPai Pais = 1; //手牌
    repeated MJPai PengPais = 2;
    repeated MJPai GangPais = 3;
    repeated MJPai HuPais = 4;
    optional MJPai inPai = 5; //+1摸起来(或别人打出)的那张牌，用计算判胡的番数时用
    optional int32 queFlower = 6; //缺哪门牌
    repeated MJPai OutPais = 7;
}

message HuPaiInfo {
    optional uint32 sendUserId = 1; //点胡的人
    optional uint32 getUserId = 2; //得胡的人
    optional int32 byWho = 3; //0=自己胡  1=下家 2=对家 3=上家 4=三家
    optional int32 huType = 4; //杠上炮 杠上花 抢杠 海底捞 海底炮 天胡 地胡
    optional int32 cardType = 5; //胡的牌型:清一色...
    optional string huDesc = 6; //如:"自摸(清一色) 中张 3番"
    optional MJPai pai = 7; //胡的哪张牌
    optional int32 fan = 8; //胡的番数
    optional int64 score = 9; //胡的得分
}

message GangPaiInfo {
    optional uint32 sendUserId = 1; //被杠的人
    optional uint32 getUserId = 2; //杠的人
    optional int32 byWho = 3; //1=自己杠  1=下家 2=对家 3=上家 4=三家
    optional int32 gangType = 4; //1=明杠、2=巴杠、3=暗杠、4=呼叫转移
    optional MJPai pai = 5; //杠的哪张牌
    optional int32 transfer = 6; //呼叫转移

}

message GuoHuInfo {
    optional uint32 sendUserId = 1; //打牌的人
    optional uint32 getUserId = 2; //可以胡的人
    optional MJPai pai = 3; //可以胡的牌是哪张
    optional int32 fanShu = 4; //可以湖这张牌的翻数
}

//一个玩家的游戏信息
message PlayerGameData {
    optional MJHandPai handPai = 1; //手牌
    repeated HuPaiInfo huInfo = 2; //胡牌信息
    repeated HuPaiInfo dianHuInfo = 3; //被胡信息
    repeated GangPaiInfo gangInfo = 4; //杠牌信息
    repeated GangPaiInfo dianGangInfo = 5; //被杠信息
    repeated GangPaiInfo gangTransfer = 6; //呼叫转移
    optional int32 totalScore = 7; //牌局结果得分
    repeated GuoHuInfo guoHuInfo = 8; //关于过湖的信息
}

//需要确认的时间
message CheckBean {
    optional uint32 userId = 1; //需要来判断的玩家
    optional bool CanPeng = 2;
    optional bool CanGang = 3;
    optional bool CanHu = 4;
    optional int32 CheckStatus = 5; //玩家确认的状态
}

message CheckCase {
    repeated CheckBean CheckB = 1;
    optional int32 CheckStatus = 2; //这张牌的状态，
    optional MJPai CheckMJPai = 3;
    optional uint32 UserIdOut = 4;
    optional GangPaiInfo PreOutGangInfo = 5; //打牌前用户杠牌的信息...        用于判断杠上炮等逻辑...
}

//麻将牌的结构
message MjDesk {
    optional int32 DeskId = 1;
    optional int32 RoomId = 2;
    optional int32 Status = 3;
    repeated MjUser users = 4;
    optional string Password = 5; //房间号码
    optional uint32 Owner = 6; //房主
    optional int64 CreateFee = 7;
    optional int32 mjRoomType = 8; // 房间类型，如：血战到底、三人两房、四人两房、德阳麻将、倒倒胡、血流成河
    optional int32 boardsCout = 9; // 局数，如：4局（房卡 × 2）、8局（房卡 × 3）
    optional int64 capMax = 10; // 封顶，如：2番、3番、4番
    optional int32 cardsNum = 11; // 牌张，如：7张、10张、13张
    optional int32 settlement = 12; // 结算，如：1拖1、1拖2、3拖5
    optional int64 baseValue = 13; // 底
    optional int32 ziMoRadio = 14; // 单选，自摸类型，如：自摸加底、自摸加番等
    optional int32 dianGangHuaRadio = 15; // 单选，点炮类型，如：点杠花（点炮）、点杠花（自摸）等
    repeated int32 othersCheckBox = 16; // 其他可复选的玩法，如：换三张、幺九将对、门清中张、天地胡、卡二条、可胡七对等
    optional int32 huRadio = 17; // 胡法，如：自摸胡、点炮胡（可抢杠）
    repeated MJPai AllMJPai = 18;
    repeated MJPai DeskMJPai = 19; //桌面上的牌  //暂时没有使用
    optional int32 MJPaiCursor = 20; //下一张可以摸的牌
    optional int32 TotalPlayCount = 21; //总共几局
    optional int32 CurrPlayCount = 22; //当前玩到第几局
    optional uint32 Banker = 23; //庄
    optional CheckCase CheckCase = 24; //
    optional uint32 ActiveUser = 25; //
    optional int32 GameNumber = 26; //游戏编号，每一句游戏都有编号
    optional uint32 ActUser = 27;
    optional int32 ActType = 28; //当前操作的人的类型
    optional string BeginTime = 29; //游戏开始时间
    optional string EndTime = 30; //游戏结束时间
    optional uint32 nextBanker = 31; //下一句开始，谁是庄
}


message BillBean {
    optional uint32 UserId = 1; //账单是属于谁的
    optional uint32 OutUserId = 2; //账单和谁关联
    optional int32 type = 3; //账单类型
    optional string des = 4; //账单描述
    optional int64 amount = 5; //账单
    optional MJPai pai = 6; //是那张牌影响的...
}

message Bill {
    optional int64 WinAmount = 1; //输赢多少钱
    repeated BillBean bills = 2;
}


message StatiscRound {
    optional int32 Round = 1;
    optional int32 GameNumber = 2;
    optional string Result = 3; //胡牌的结果
    optional int64 WinAmount = 4; //分数
    optional int32 CountHu = 5;
    optional int32 CountZiMo = 6;
    optional int32 CountDianPao = 7;
    optional int32 CountAnGang = 8;
    optional int32 CountMingGang = 9;
    optional int32 CountDianGang = 10;
    optional int32 CountChaJiao = 11;
    optional int32 CountBaGnag = 12;

}

message MjUserStatisc {
    optional int64 WinCoin = 1; //输赢的金额
    optional int32 CountHu = 2; //胡牌的次数
    optional int32 CountZiMo = 3; //自摸的次数
    optional int32 CountDianPao = 4; //点炮的次数
    optional int32 CountAnGang = 5; //暗杠的次数
    optional int32 CountMingGang = 6; //明杠的次数
    optional int32 CountDianGang = 7; //点杠的次数
    optional int32 CountChaJiao = 8; //
    repeated StatiscRound roundBean = 9; //
} //手里的一副牌

message MjUser {
    optional uint32 UserId = 1;
    optional int64 Coin = 2; //游戏中的带入金额
    optional PlayerGameData GameData = 3; //用户的麻将牌
    optional int32 Status = 4; //玩家当前的状态
    optional bool IsBreak = 5; //是否断线
    optional bool IsLeave = 6; //是否离开
    optional int32 DeskId = 7; //
    optional int32 RoomId = 8;
    optional bool DingQue = 9;
    optional bool Exchanged = 10;
    optional bool Ready = 11;
    optional bool IsBanker = 12; //是否是庄家
    optional GangPaiInfo PreMoGangInfo = 13; //摸牌前 用户的杠牌信息
    optional Bill bill = 14; //用户的账单
    optional MjUserStatisc statisc = 15; //证据游戏的统计...
    optional int64 WaitTime = 16; //用户等待的时间
    repeated MJPai ExchangeCards = 17; //需要换的牌
}

//用户的session
message MjSession {
    optional uint32 UserId = 1;
    optional int32 RoomId = 2;
    optional int32 DeskId = 3;
    optional int32 GameStatus = 4; //游戏的状态，
}

//一个麻将room
message MjRoom {
    optional int32 RoomId = 1;
    optional int32 RoomType = 2;
    optional int64 ReadyTime = 3;
    optional int64 BeginTime = 4;
    optional int64 EndTIme = 5;
    repeated MjDesk Desks = 6;
    optional int32 PaiIndexNow = 7;
    repeated MJPai MjPais = 8;

}

//
message RunningDeskKeys {
    repeated int32 keys = 1; //运行中的桌子的key
}

