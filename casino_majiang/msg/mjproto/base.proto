syntax = "proto2";

package mjproto;
enum EProtoId {
    PID_QUICK_CONN          = 1; //连接服务器
    PID_QUICK_CONN_ACK      = 2; //
    PID_GAME_LOGIN          = 3; //登录游戏
    PID_GAME_LOGIN_ACK      = 4; //
    PID_CREATEROOM          = 5; //创建房间
    PID_CREATEROOM_ACK      = 6; //创建房间-回复
    PID_ENTER_ROOM          = 7; //进入房间
    PID_ENTER_ROOM_ACK      = 8; //进入房间-回复
    PID_SEND_GAMEINFO       = 9; //游戏信息
    PID_READY               = 10;//准备
    PID_READY_ACK           = 11;//准备-ack
    PID_EXCHANGECARDS       = 12; //换3张
    PID_EXCHANGECARDS_ACK   = 13; //换3张-回复
    PID_DINGQUE             = 14; //定缺
    PID_OPENING             = 15; //开局
    PID_DEAL_CARDS          = 16; //发牌
    PID_GET_IN_CARD         = 17; //摸牌
    PID_SEND_OUT_CARD       = 18; //出牌
    PID_PENG_CARD           = 19; //碰
    PID_PENG_CARD_ACK       = 20;
    PID_GANG_CARD           = 21; //杠
    PID_GANG_CARD_ACK       = 22;
    PID_GUO_CARD            = 23; //过
    PID_GUO_CARD_ACK        = 24;
    PID_HU_CARD             = 25; //胡
    PID_HU_CARD_ACK         = 26;
    PID_BROADCAST_BEGIN_DINGQUE  = 27; //开始定缺(广播)
    PID_BROADCAST_BEGIN_EXCHANGE = 28; //开始换牌(广播)

    PID_OVERTURN            = 29; //轮到下一人操作(广播)
    PID_CURRENTRESULT       = 30; //本局结果
    PID_SENDENDLOTTERY      = 31; //牌局结束

    PID_DISSOLVE_DESK       = 32; //离开房间
    PID_DISSOLVE_DESK_ACK   = 33; //
    PID_LEAVE_DESK          = 34; //解散房间
    PID_LEAVE_DESK_ACK      = 35; //

    PID_MESSAGE             = 36; //聊天信息
    PID_SEND_MESSAGE        = 37; //广播聊天
}

enum ErrorCode {
    EC_SUCCESS = 0; //表示成功

    //-1   -100 登陆异常

    //-101   -200	游戏异常
    EC_CREATE_DESK_DIAMOND_NOTENOUGH = -101; // 创建房间的时候余额不足
    EC_CREATE_DESK_USER_NOTFOUND = -102; // 创建房间的时候未知用户

    EC_INTO_DESK_NOTFOUND = -103; // 进入房间的时候没有找到房间

    EC_GAME_READY_REPEAT = -110; // 重复准备

    EC_GAME_READY_CHIP_NOT_ENOUGH = -111; // 筹码不足
}

// ProtoHeader 需要在每个 Message 中作为第一个字段
message ProtoHeader {
    optional string version = 1; // 版本号
    optional uint32 userId = 2; // 用户 id
    optional int32 code = 3; // result code
    optional string error = 4; // result error description
}

// 微信信息
message WeixinInfo {
    optional string openId = 1; // 微信授权用户唯一id
    optional string nickName = 2; // 微信昵称
    optional string headUrl = 3; // 微信头像
    optional int32  sex = 4; // 性别
    optional string  city = 5; // 城市
    optional string  unionId = 6; // unionId
}

// 麻将牌
message CardInfo {
    optional int32 type = 1;
    optional int32 value = 2; //0:牌背；1~9：万；10~18：条；19~27：筒。
    optional int32 id = 3;   //牌的id
}


// 玩法：包括自摸、点炮、以及可多选的玩法
message PlayOptions {
    optional int32 ziMoRadio = 1; // 单选，自摸类型，如：自摸加底、自摸加番等
    optional int32 dianGangHuaRadio = 2; // 单选，点炮类型，如：点杠花（点炮）、点杠花（自摸）等
    repeated int32 othersCheckBox = 3; // 其他可复选的玩法，如：换三张、幺九将对、门清中张、天地胡、卡二条、可胡七对等
    optional int32 huRadio = 4; // 胡法，如：自摸胡、点炮胡（可抢杠）
}

// 房间类型信息：包含房间类型和对应的局数、封顶、玩法等信息
// 房间类型枚举
enum MJRoomType {
    roomType_xueZhanDaoDi = 0; // 血战到底
    roomType_sanRenLiangFang = 1; // 三人两房
    roomType_siRenLiangFang = 2; // 四人两房
    roomType_deYangMaJiang = 3; // 德阳麻将
    roomType_daoDaoHu = 4; // 倒倒胡
    roomType_xueLiuChengHe = 5; // 血流成河
}

message RoomTypeInfo {
    optional MJRoomType mjRoomType = 1; // 房间类型，如：血战到底、三人两房、四人两房、德阳麻将、倒倒胡、血流成河
    optional int32 boardsCout = 2; // 局数，如：4局（房卡 × 2）、8局（房卡 × 3）
    optional int64 capMax = 3; // 封顶，如：2番、3番、4番
    optional PlayOptions playOptions = 4; // 玩法：包括自摸、点炮、以及可多选的玩法
    optional int32 cardsNum = 5; // 牌张，如：7张、10张、13张
    optional int32 settlement = 6; // 结算，如：1拖1、1拖2、3拖5
    optional int64 baseValue = 7; // 底
}


message ComposePoker {
    optional int32 num = 1;   // 麻将牌值
    optional int32 type = 2;  // 类型（碰，明杠，暗杠）
}

message PlayerPoker {
    repeated int32 handPoker = 1;   // 手牌数组（自己是明的，其他玩家服务器返回暗值，避免外挂获取别的玩家手牌）
    repeated ComposePoker composePoker = 2;    // 摆牌数组（碰、明杠、暗杠）
    repeated int32 outPoker = 3;    // 已出牌数组
    optional int32 huPoker = 4; // 胡的牌
}

message PlayerInfo {
    optional bool isBanker = 1; // 是否庄家
    optional PlayerPoker playerPoker = 2; // 玩家的手牌、摆牌（碰杠）、已打出的牌、胡牌信息。客户端需根据服务端的返回进行排序动画。
    optional int64 coin = 3; // 玩家当前显示的自己的筹码数
    optional string nickName = 4; // 昵称
    optional int32 seatId = 5; // 座位号
    // ① 新增字段： repeated WeixinInfo  = 6;  //微信用户信息
    // ② EnterMatch时、广播新进用户时，才需返回 WeixinInfo；其它广播不需要。
    optional WeixinInfo weixinInfos = 6;
    optional bool isOwner = 7;   // 当前用户是否房主
    optional int32 bReady = 8; // 是否已准备
    optional int32 bDingQue = 9; // 是否已定缺
    optional int32 bExchanged = 10; // 是否已换牌(换3张)
    optional int32 nHuPai = 11;     // 0:未胡牌; >=1: 已胡牌(血流成河时,表示次数)
}

message DeskGameInfo {
    optional int32 GameStatus = 1; // 当前的游戏状态：等待、游戏中、结算中等
    optional RoomTypeInfo roomTypeInfo = 2; // 房间类型信息，包括：房间类型、局数、封顶、玩法、牌张、结算、底
    optional int32 playerNum = 3; // 玩家数量
    optional int32 activeSeat = 4;  // 当前谁操作，决定：中间的指针应该指向谁，哪个玩家当前是可操作状态
    optional int32 actionTime = 5; // 玩家当前操作时间
    optional int32 delayTime = 6; //当前延时时间
    optional int32 nRebuyCount = 7; // REBUY 次数
    optional int32 nInitActionTime = 8; // 初始操作时间
    optional int32 nInitDelayTime = 9; // 初始延时时间
    optional int64 initRoomCoin = 10; // 房间的初始带入金额
    optional int32 currPlayCount = 11; // 朋友桌: 当前第几局
    optional int32 totalPlayCount = 12; // 朋友桌: 总共几局

}

