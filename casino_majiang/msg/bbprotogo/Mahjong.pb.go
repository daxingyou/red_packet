// Code generated by protoc-gen-go.
// source: Mahjong.proto
// DO NOT EDIT!

/*
Package bbproto is a generated protocol buffer package.

It is generated from these files:
	Mahjong.proto
	base.proto

It has these top-level messages:
	Game_Opening
	Game_ExchangeCards
	Game_AckExchangeCards
	Game_DingQue
	Game_ActPeng
	Game_AckActPeng
	Game_ActGang
	Game_AckActGang
	Game_ActHu
	Game_AckActHu
	Game_ActGuo
	Game_AckActGuo
	Game_OverTurn
	Game_CardType
	Game_WinCoin
	Game_OverCurrentBoard
	Game_EndLottery
	Game_SendDeskEndLottery
	Game_EnterRoom
	Game_AckEnterRoom
	Game_SendGameInfo
	Game_How2Play
	Game_RoomTypeInfo
	Game_CreateRoom
	Game_AckCreateRoom
	Game_DissolveDesk
	Game_AckDissolveDesk
	Game_LeaveDesk
	Game_ACKLeaveDesk
	Game_Ready
	Game_AckReady
	Game_Begin
	Game_CardInfo
	Game_InitCard
	Game_LeaveRoom
	Game_ChangeTable
	Game_LeaveTable
	Game_NowelterInfo
	Game_Login
	Game_AckLogin
	Game_Notice
	Game_AckNotice
	Game_GameRecord
	Game_BeanUserRecord
	Game_BeanGameRecord
	Game_AckGameRecord
	WeixinInfo
	Game_Message
	Game_SendMessage
	Game_Rebuy
	Game_AckRebuy
	Game_NotRebuy
	Game_AckNotRebuy
	Game_Feedback
	ProtoHeader
*/
package bbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of EProtoId from base.proto

// Ignoring public import of DDErrorCode from base.proto

// 房间类型信息：包含房间类型和对应的局数、封顶、玩法等信息
// 无 ProtoHeader ，因为不独立使用
type MJRoomType int32

const (
	MJRoomType_roomType_xueZhanDaoDi    MJRoomType = 0
	MJRoomType_roomType_sanRenLiangFang MJRoomType = 1
	MJRoomType_roomType_siRenLiangFang  MJRoomType = 2
	MJRoomType_roomType_deYangMaJiang   MJRoomType = 3
	MJRoomType_roomType_daoDaoHu        MJRoomType = 4
	MJRoomType_roomType_xueLiuChengHe   MJRoomType = 5
)

var MJRoomType_name = map[int32]string{
	0: "roomType_xueZhanDaoDi",
	1: "roomType_sanRenLiangFang",
	2: "roomType_siRenLiangFang",
	3: "roomType_deYangMaJiang",
	4: "roomType_daoDaoHu",
	5: "roomType_xueLiuChengHe",
}
var MJRoomType_value = map[string]int32{
	"roomType_xueZhanDaoDi":    0,
	"roomType_sanRenLiangFang": 1,
	"roomType_siRenLiangFang":  2,
	"roomType_deYangMaJiang":   3,
	"roomType_daoDaoHu":        4,
	"roomType_xueLiuChengHe":   5,
}

func (x MJRoomType) Enum() *MJRoomType {
	p := new(MJRoomType)
	*p = x
	return p
}
func (x MJRoomType) String() string {
	return proto.EnumName(MJRoomType_name, int32(x))
}
func (x *MJRoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJRoomType_value, data, "MJRoomType")
	if err != nil {
		return err
	}
	*x = MJRoomType(value)
	return nil
}
func (MJRoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Game_LeaveTable_Reason int32

const (
	Game_LeaveTable_quit_mormal            Game_LeaveTable_Reason = 0
	Game_LeaveTable_quit_friendKick        Game_LeaveTable_Reason = 1
	Game_LeaveTable_quit_adjustTable       Game_LeaveTable_Reason = 2
	Game_LeaveTable_quit_friendTableDelete Game_LeaveTable_Reason = 3
)

var Game_LeaveTable_Reason_name = map[int32]string{
	0: "quit_mormal",
	1: "quit_friendKick",
	2: "quit_adjustTable",
	3: "quit_friendTableDelete",
}
var Game_LeaveTable_Reason_value = map[string]int32{
	"quit_mormal":            0,
	"quit_friendKick":        1,
	"quit_adjustTable":       2,
	"quit_friendTableDelete": 3,
}

func (x Game_LeaveTable_Reason) Enum() *Game_LeaveTable_Reason {
	p := new(Game_LeaveTable_Reason)
	*p = x
	return p
}
func (x Game_LeaveTable_Reason) String() string {
	return proto.EnumName(Game_LeaveTable_Reason_name, int32(x))
}
func (x *Game_LeaveTable_Reason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Game_LeaveTable_Reason_value, data, "Game_LeaveTable_Reason")
	if err != nil {
		return err
	}
	*x = Game_LeaveTable_Reason(value)
	return nil
}
func (Game_LeaveTable_Reason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{36, 0} }

// 开局（接收服务端消息）
type Game_Opening struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Opening) Reset()                    { *m = Game_Opening{} }
func (m *Game_Opening) String() string            { return proto.CompactTextString(m) }
func (*Game_Opening) ProtoMessage()               {}
func (*Game_Opening) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Game_Opening) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Opening) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_Opening) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

// 换牌（3张）
type Game_ExchangeCards struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32           `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	UserId           *uint32          `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	ExchangeOutCards []*Game_CardInfo `protobuf:"bytes,6,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_ExchangeCards) Reset()                    { *m = Game_ExchangeCards{} }
func (m *Game_ExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_ExchangeCards) ProtoMessage()               {}
func (*Game_ExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Game_ExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ExchangeCards) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ExchangeCards) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ExchangeCards) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_ExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ExchangeCards) GetExchangeOutCards() []*Game_CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

type Game_AckExchangeCards struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32           `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	UserId           *uint32          `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	ExchangeOutCards []*Game_CardInfo `protobuf:"bytes,6,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	ExchangeOutseat  *int32           `protobuf:"varint,7,opt,name=exchangeOutseat" json:"exchangeOutseat,omitempty"`
	ExchangeInCards  []*Game_CardInfo `protobuf:"bytes,8,rep,name=exchangeInCards" json:"exchangeInCards,omitempty"`
	ExchangeInseat   *int32           `protobuf:"varint,9,opt,name=exchangeInseat" json:"exchangeInseat,omitempty"`
	Dice             *int32           `protobuf:"varint,10,opt,name=dice" json:"dice,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckExchangeCards) Reset()                    { *m = Game_AckExchangeCards{} }
func (m *Game_AckExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_AckExchangeCards) ProtoMessage()               {}
func (*Game_AckExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Game_AckExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckExchangeCards) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckExchangeCards) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckExchangeCards) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_AckExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckExchangeCards) GetExchangeOutCards() []*Game_CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

func (m *Game_AckExchangeCards) GetExchangeOutseat() int32 {
	if m != nil && m.ExchangeOutseat != nil {
		return *m.ExchangeOutseat
	}
	return 0
}

func (m *Game_AckExchangeCards) GetExchangeInCards() []*Game_CardInfo {
	if m != nil {
		return m.ExchangeInCards
	}
	return nil
}

func (m *Game_AckExchangeCards) GetExchangeInseat() int32 {
	if m != nil && m.ExchangeInseat != nil {
		return *m.ExchangeInseat
	}
	return 0
}

func (m *Game_AckExchangeCards) GetDice() int32 {
	if m != nil && m.Dice != nil {
		return *m.Dice
	}
	return 0
}

// 定缺（和ACK）
type Game_DingQue struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Color            *int32       `protobuf:"varint,4,opt,name=color" json:"color,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DingQue) Reset()                    { *m = Game_DingQue{} }
func (m *Game_DingQue) String() string            { return proto.CompactTextString(m) }
func (*Game_DingQue) ProtoMessage()               {}
func (*Game_DingQue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Game_DingQue) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DingQue) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_DingQue) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_DingQue) GetColor() int32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *Game_DingQue) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 碰牌
type Game_ActPeng struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string        `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32         `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32         `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	PengCard         *Game_CardInfo `protobuf:"bytes,5,opt,name=pengCard" json:"pengCard,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_ActPeng) Reset()                    { *m = Game_ActPeng{} }
func (m *Game_ActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_ActPeng) ProtoMessage()               {}
func (*Game_ActPeng) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Game_ActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActPeng) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ActPeng) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ActPeng) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_ActPeng) GetPengCard() *Game_CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

type Game_AckActPeng struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	PengCard         []*Game_CardInfo `protobuf:"bytes,4,rep,name=pengCard" json:"pengCard,omitempty"`
	HandCard         []*Game_CardInfo `protobuf:"bytes,5,rep,name=HandCard" json:"HandCard,omitempty"`
	GangCard         []*Game_CardInfo `protobuf:"bytes,6,rep,name=GangCard" json:"GangCard,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckActPeng) Reset()                    { *m = Game_AckActPeng{} }
func (m *Game_AckActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActPeng) ProtoMessage()               {}
func (*Game_AckActPeng) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Game_AckActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActPeng) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckActPeng) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckActPeng) GetPengCard() []*Game_CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_AckActPeng) GetHandCard() []*Game_CardInfo {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Game_AckActPeng) GetGangCard() []*Game_CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

// 杠牌
type Game_ActGang struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string        `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32         `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32         `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	GangCard         *Game_CardInfo `protobuf:"bytes,5,opt,name=gangCard" json:"gangCard,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_ActGang) Reset()                    { *m = Game_ActGang{} }
func (m *Game_ActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGang) ProtoMessage()               {}
func (*Game_ActGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Game_ActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGang) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ActGang) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ActGang) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_ActGang) GetGangCard() *Game_CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

type Game_AckActGang struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32           `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	PengCard         []*Game_CardInfo `protobuf:"bytes,5,rep,name=pengCard" json:"pengCard,omitempty"`
	HandCard         []*Game_CardInfo `protobuf:"bytes,6,rep,name=HandCard" json:"HandCard,omitempty"`
	GangCard         []*Game_CardInfo `protobuf:"bytes,7,rep,name=GangCard" json:"GangCard,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckActGang) Reset()                    { *m = Game_AckActGang{} }
func (m *Game_AckActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGang) ProtoMessage()               {}
func (*Game_AckActGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Game_AckActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGang) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckActGang) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckActGang) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_AckActGang) GetPengCard() []*Game_CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_AckActGang) GetHandCard() []*Game_CardInfo {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Game_AckActGang) GetGangCard() []*Game_CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

// 胡牌
type Game_ActHu struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string        `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32         `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32         `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	HuCard           *Game_CardInfo `protobuf:"bytes,5,opt,name=huCard" json:"huCard,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_ActHu) Reset()                    { *m = Game_ActHu{} }
func (m *Game_ActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_ActHu) ProtoMessage()               {}
func (*Game_ActHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Game_ActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActHu) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ActHu) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ActHu) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_ActHu) GetHuCard() *Game_CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

type Game_AckActHu struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32           `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	PengCard         []*Game_CardInfo `protobuf:"bytes,5,rep,name=pengCard" json:"pengCard,omitempty"`
	HandCard         []*Game_CardInfo `protobuf:"bytes,6,rep,name=HandCard" json:"HandCard,omitempty"`
	GangCard         []*Game_CardInfo `protobuf:"bytes,7,rep,name=GangCard" json:"GangCard,omitempty"`
	HuCard           *Game_CardInfo   `protobuf:"bytes,8,opt,name=huCard" json:"huCard,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckActHu) Reset()                    { *m = Game_AckActHu{} }
func (m *Game_AckActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActHu) ProtoMessage()               {}
func (*Game_AckActHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Game_AckActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActHu) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckActHu) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckActHu) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_AckActHu) GetPengCard() []*Game_CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_AckActHu) GetHandCard() []*Game_CardInfo {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Game_AckActHu) GetGangCard() []*Game_CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_AckActHu) GetHuCard() *Game_CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

// 过牌
type Game_ActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32       `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGuo) Reset()                    { *m = Game_ActGuo{} }
func (m *Game_ActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGuo) ProtoMessage()               {}
func (*Game_ActGuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Game_ActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGuo) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ActGuo) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ActGuo) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

// 过牌收到服务器确认后，还是要协议 【PID_game_SENDOVERTURN ：game_SendOverTurn】 后结束此轮
type Game_AckActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32       `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActGuo) Reset()                    { *m = Game_AckActGuo{} }
func (m *Game_AckActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGuo) ProtoMessage()               {}
func (*Game_AckActGuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Game_AckActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGuo) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckActGuo) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckActGuo) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

// 出牌（和ACK）后，轮到下一轮的玩家，【当前玩家出牌结束】或【过牌、胡牌后】，结束自己的回合
type Game_OverTurn struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string        `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32         `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32         `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	Nextseat         *int32         `protobuf:"varint,5,opt,name=nextseat" json:"nextseat,omitempty"`
	ChuCard          *Game_CardInfo `protobuf:"bytes,6,opt,name=chuCard" json:"chuCard,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_OverTurn) Reset()                    { *m = Game_OverTurn{} }
func (m *Game_OverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_OverTurn) ProtoMessage()               {}
func (*Game_OverTurn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Game_OverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OverTurn) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_OverTurn) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_OverTurn) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_OverTurn) GetNextseat() int32 {
	if m != nil && m.Nextseat != nil {
		return *m.Nextseat
	}
	return 0
}

func (m *Game_OverTurn) GetChuCard() *Game_CardInfo {
	if m != nil {
		return m.ChuCard
	}
	return nil
}

// Start: 本局结束
// 赢牌牌型和类型
type Game_CardType struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Cards            []*Game_CardInfo `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	CardType         *int32           `protobuf:"varint,3,opt,name=cardType" json:"cardType,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_CardType) Reset()                    { *m = Game_CardType{} }
func (m *Game_CardType) String() string            { return proto.CompactTextString(m) }
func (*Game_CardType) ProtoMessage()               {}
func (*Game_CardType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Game_CardType) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_CardType) GetCards() []*Game_CardInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *Game_CardType) GetCardType() int32 {
	if m != nil && m.CardType != nil {
		return *m.CardType
	}
	return 0
}

// 赢牌信息：谁赢了多少
type Game_WinCoin struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Seat             *int32         `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
	WinCoin          *int64         `protobuf:"varint,3,opt,name=winCoin" json:"winCoin,omitempty"`
	Coin             *int64         `protobuf:"varint,4,opt,name=coin" json:"coin,omitempty"`
	CardType         *Game_CardType `protobuf:"bytes,5,opt,name=cardType" json:"cardType,omitempty"`
	RoleName         *string        `protobuf:"bytes,6,opt,name=roleName" json:"roleName,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_WinCoin) Reset()                    { *m = Game_WinCoin{} }
func (m *Game_WinCoin) String() string            { return proto.CompactTextString(m) }
func (*Game_WinCoin) ProtoMessage()               {}
func (*Game_WinCoin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Game_WinCoin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_WinCoin) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_WinCoin) GetWinCoin() int64 {
	if m != nil && m.WinCoin != nil {
		return *m.WinCoin
	}
	return 0
}

func (m *Game_WinCoin) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *Game_WinCoin) GetCardType() *Game_CardType {
	if m != nil {
		return m.CardType
	}
	return nil
}

func (m *Game_WinCoin) GetRoleName() string {
	if m != nil && m.RoleName != nil {
		return *m.RoleName
	}
	return ""
}

// 牌局的结果（收到后客户端可以先 play 赢牌、亮牌动画，再显示结果弹窗）
type Game_OverCurrentBoard struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string         `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32          `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	WinCoinInfo      []*Game_WinCoin `protobuf:"bytes,4,rep,name=winCoinInfo" json:"winCoinInfo,omitempty"`
	Rank             *int32          `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
	RankUserCount    *int32          `protobuf:"varint,6,opt,name=rankUserCount" json:"rankUserCount,omitempty"`
	CanRebuy         *bool           `protobuf:"varint,7,opt,name=canRebuy" json:"canRebuy,omitempty"`
	RebuyCount       *int32          `protobuf:"varint,8,opt,name=rebuyCount" json:"rebuyCount,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_OverCurrentBoard) Reset()                    { *m = Game_OverCurrentBoard{} }
func (m *Game_OverCurrentBoard) String() string            { return proto.CompactTextString(m) }
func (*Game_OverCurrentBoard) ProtoMessage()               {}
func (*Game_OverCurrentBoard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Game_OverCurrentBoard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OverCurrentBoard) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_OverCurrentBoard) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_OverCurrentBoard) GetWinCoinInfo() []*Game_WinCoin {
	if m != nil {
		return m.WinCoinInfo
	}
	return nil
}

func (m *Game_OverCurrentBoard) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *Game_OverCurrentBoard) GetRankUserCount() int32 {
	if m != nil && m.RankUserCount != nil {
		return *m.RankUserCount
	}
	return 0
}

func (m *Game_OverCurrentBoard) GetCanRebuy() bool {
	if m != nil && m.CanRebuy != nil {
		return *m.CanRebuy
	}
	return false
}

func (m *Game_OverCurrentBoard) GetRebuyCount() int32 {
	if m != nil && m.RebuyCount != nil {
		return *m.RebuyCount
	}
	return 0
}

// End  : 本局结束
// Start: 全场结束Ï
// 几局游戏完了之后的广播信息
type Game_EndLottery struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Coin             *int64       `protobuf:"varint,2,opt,name=coin" json:"coin,omitempty"`
	BigWin           *bool        `protobuf:"varint,3,opt,name=bigWin" json:"bigWin,omitempty"`
	Owner            *bool        `protobuf:"varint,4,opt,name=owner" json:"owner,omitempty"`
	Rolename         *string      `protobuf:"bytes,5,opt,name=rolename" json:"rolename,omitempty"`
	UserId           *uint32      `protobuf:"varint,6,opt,name=userId" json:"userId,omitempty"`
	Seat             *int32       `protobuf:"varint,7,opt,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_EndLottery) Reset()                    { *m = Game_EndLottery{} }
func (m *Game_EndLottery) String() string            { return proto.CompactTextString(m) }
func (*Game_EndLottery) ProtoMessage()               {}
func (*Game_EndLottery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Game_EndLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_EndLottery) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *Game_EndLottery) GetBigWin() bool {
	if m != nil && m.BigWin != nil {
		return *m.BigWin
	}
	return false
}

func (m *Game_EndLottery) GetOwner() bool {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return false
}

func (m *Game_EndLottery) GetRolename() string {
	if m != nil && m.Rolename != nil {
		return *m.Rolename
	}
	return ""
}

func (m *Game_EndLottery) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_EndLottery) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

// 几局完成之后的情况
type Game_SendDeskEndLottery struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CoinInfo         []*Game_EndLottery `protobuf:"bytes,2,rep,name=coinInfo" json:"coinInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Game_SendDeskEndLottery) Reset()                    { *m = Game_SendDeskEndLottery{} }
func (m *Game_SendDeskEndLottery) String() string            { return proto.CompactTextString(m) }
func (*Game_SendDeskEndLottery) ProtoMessage()               {}
func (*Game_SendDeskEndLottery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Game_SendDeskEndLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendDeskEndLottery) GetCoinInfo() []*Game_EndLottery {
	if m != nil {
		return m.CoinInfo
	}
	return nil
}

// 客户端请求进入 room
type Game_EnterRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	PassWord         *string      `protobuf:"bytes,4,opt,name=PassWord" json:"PassWord,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	MatchIdInt       *int32       `protobuf:"varint,6,opt,name=matchIdInt" json:"matchIdInt,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_EnterRoom) Reset()                    { *m = Game_EnterRoom{} }
func (m *Game_EnterRoom) String() string            { return proto.CompactTextString(m) }
func (*Game_EnterRoom) ProtoMessage()               {}
func (*Game_EnterRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Game_EnterRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_EnterRoom) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_EnterRoom) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_EnterRoom) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

func (m *Game_EnterRoom) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_EnterRoom) GetMatchIdInt() int32 {
	if m != nil && m.MatchIdInt != nil {
		return *m.MatchIdInt
	}
	return 0
}

type Game_AckEnterRoom struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *string      `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	NReason          *int32       `protobuf:"varint,4,opt,name=nReason" json:"nReason,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckEnterRoom) Reset()                    { *m = Game_AckEnterRoom{} }
func (m *Game_AckEnterRoom) String() string            { return proto.CompactTextString(m) }
func (*Game_AckEnterRoom) ProtoMessage()               {}
func (*Game_AckEnterRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Game_AckEnterRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckEnterRoom) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_AckEnterRoom) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckEnterRoom) GetNReason() int32 {
	if m != nil && m.NReason != nil {
		return *m.NReason
	}
	return 0
}

// 发送游戏信息
type Game_SendGameInfo struct {
	Header          *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId         *string          `protobuf:"bytes,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId         *int32           `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	GameStatus      *int32           `protobuf:"varint,4,opt,name=GameStatus" json:"GameStatus,omitempty"`
	Bankerseat      *int32           `protobuf:"varint,5,opt,name=bankerseat" json:"bankerseat,omitempty"`
	Base            *int64           `protobuf:"varint,6,opt,name=base" json:"base,omitempty"`
	CapMax          *int64           `protobuf:"varint,7,opt,name=capMax" json:"capMax,omitempty"`
	RoomType        *int32           `protobuf:"varint,8,opt,name=roomType" json:"roomType,omitempty"`
	PlayerNum       *int32           `protobuf:"varint,9,opt,name=playerNum" json:"playerNum,omitempty"`
	HandCard        []*Game_CardInfo `protobuf:"bytes,10,rep,name=handCard" json:"handCard,omitempty"`
	HandCoin        []int64          `protobuf:"varint,11,rep,name=HandCoin" json:"HandCoin,omitempty"`
	ActionTime      *int32           `protobuf:"varint,12,opt,name=ActionTime" json:"ActionTime,omitempty"`
	BEnable         []int32          `protobuf:"varint,13,rep,name=bEnable" json:"bEnable,omitempty"`
	DelayTime       *int32           `protobuf:"varint,14,opt,name=DelayTime" json:"DelayTime,omitempty"`
	NRebuyCount     *int32           `protobuf:"varint,15,opt,name=nRebuyCount" json:"nRebuyCount,omitempty"`
	NInitActionTime *int32           `protobuf:"varint,16,opt,name=nInitActionTime" json:"nInitActionTime,omitempty"`
	NInitDelayTime  *int32           `protobuf:"varint,17,opt,name=nInitDelayTime" json:"nInitDelayTime,omitempty"`
	NickName        []string         `protobuf:"bytes,18,rep,name=nickName" json:"nickName,omitempty"`
	SeatId          []int32          `protobuf:"varint,19,rep,name=seatId" json:"seatId,omitempty"`
	Seat            *int32           `protobuf:"varint,20,opt,name=seat" json:"seat,omitempty"`
	Result          *int32           `protobuf:"varint,21,opt,name=result" json:"result,omitempty"`
	// ① 新增字段： repeated WeixinInfo  = 22;  //微信用户信息
	// ② EnterMatch时、广播新进用户时，才需返回 WeixinInfo；其它广播不需要。
	WeixinInfos      []*WeixinInfo `protobuf:"bytes,22,rep,name=weixinInfos" json:"weixinInfos,omitempty"`
	Ownerseat        *int32        `protobuf:"varint,23,opt,name=ownerseat" json:"ownerseat,omitempty"`
	InitRoomCoin     *int64        `protobuf:"varint,24,opt,name=initRoomCoin" json:"initRoomCoin,omitempty"`
	CurrPlayCount    *int32        `protobuf:"varint,25,opt,name=currPlayCount" json:"currPlayCount,omitempty"`
	TotalPlayCount   *int32        `protobuf:"varint,26,opt,name=totalPlayCount" json:"totalPlayCount,omitempty"`
	BReady           []int32       `protobuf:"varint,27,rep,name=bReady" json:"bReady,omitempty"`
	SenderUserId     *uint32       `protobuf:"varint,28,opt,name=senderUserId" json:"senderUserId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Game_SendGameInfo) Reset()                    { *m = Game_SendGameInfo{} }
func (m *Game_SendGameInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_SendGameInfo) ProtoMessage()               {}
func (*Game_SendGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Game_SendGameInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendGameInfo) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_SendGameInfo) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_SendGameInfo) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *Game_SendGameInfo) GetBankerseat() int32 {
	if m != nil && m.Bankerseat != nil {
		return *m.Bankerseat
	}
	return 0
}

func (m *Game_SendGameInfo) GetBase() int64 {
	if m != nil && m.Base != nil {
		return *m.Base
	}
	return 0
}

func (m *Game_SendGameInfo) GetCapMax() int64 {
	if m != nil && m.CapMax != nil {
		return *m.CapMax
	}
	return 0
}

func (m *Game_SendGameInfo) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *Game_SendGameInfo) GetPlayerNum() int32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

func (m *Game_SendGameInfo) GetHandCard() []*Game_CardInfo {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Game_SendGameInfo) GetHandCoin() []int64 {
	if m != nil {
		return m.HandCoin
	}
	return nil
}

func (m *Game_SendGameInfo) GetActionTime() int32 {
	if m != nil && m.ActionTime != nil {
		return *m.ActionTime
	}
	return 0
}

func (m *Game_SendGameInfo) GetBEnable() []int32 {
	if m != nil {
		return m.BEnable
	}
	return nil
}

func (m *Game_SendGameInfo) GetDelayTime() int32 {
	if m != nil && m.DelayTime != nil {
		return *m.DelayTime
	}
	return 0
}

func (m *Game_SendGameInfo) GetNRebuyCount() int32 {
	if m != nil && m.NRebuyCount != nil {
		return *m.NRebuyCount
	}
	return 0
}

func (m *Game_SendGameInfo) GetNInitActionTime() int32 {
	if m != nil && m.NInitActionTime != nil {
		return *m.NInitActionTime
	}
	return 0
}

func (m *Game_SendGameInfo) GetNInitDelayTime() int32 {
	if m != nil && m.NInitDelayTime != nil {
		return *m.NInitDelayTime
	}
	return 0
}

func (m *Game_SendGameInfo) GetNickName() []string {
	if m != nil {
		return m.NickName
	}
	return nil
}

func (m *Game_SendGameInfo) GetSeatId() []int32 {
	if m != nil {
		return m.SeatId
	}
	return nil
}

func (m *Game_SendGameInfo) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_SendGameInfo) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Game_SendGameInfo) GetWeixinInfos() []*WeixinInfo {
	if m != nil {
		return m.WeixinInfos
	}
	return nil
}

func (m *Game_SendGameInfo) GetOwnerseat() int32 {
	if m != nil && m.Ownerseat != nil {
		return *m.Ownerseat
	}
	return 0
}

func (m *Game_SendGameInfo) GetInitRoomCoin() int64 {
	if m != nil && m.InitRoomCoin != nil {
		return *m.InitRoomCoin
	}
	return 0
}

func (m *Game_SendGameInfo) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *Game_SendGameInfo) GetTotalPlayCount() int32 {
	if m != nil && m.TotalPlayCount != nil {
		return *m.TotalPlayCount
	}
	return 0
}

func (m *Game_SendGameInfo) GetBReady() []int32 {
	if m != nil {
		return m.BReady
	}
	return nil
}

func (m *Game_SendGameInfo) GetSenderUserId() uint32 {
	if m != nil && m.SenderUserId != nil {
		return *m.SenderUserId
	}
	return 0
}

// 玩法：包括自摸、点炮、以及可多选的玩法
// 无 ProtoHeader ，因为不独立使用
type Game_How2Play struct {
	ZiMoRadio        *int32  `protobuf:"varint,1,opt,name=ziMoRadio" json:"ziMoRadio,omitempty"`
	DianGangHuaRadio *int32  `protobuf:"varint,2,opt,name=dianGangHuaRadio" json:"dianGangHuaRadio,omitempty"`
	OthersCheckBox   []int32 `protobuf:"varint,3,rep,name=othersCheckBox" json:"othersCheckBox,omitempty"`
	HuRadio          *int32  `protobuf:"varint,4,opt,name=huRadio" json:"huRadio,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Game_How2Play) Reset()                    { *m = Game_How2Play{} }
func (m *Game_How2Play) String() string            { return proto.CompactTextString(m) }
func (*Game_How2Play) ProtoMessage()               {}
func (*Game_How2Play) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Game_How2Play) GetZiMoRadio() int32 {
	if m != nil && m.ZiMoRadio != nil {
		return *m.ZiMoRadio
	}
	return 0
}

func (m *Game_How2Play) GetDianGangHuaRadio() int32 {
	if m != nil && m.DianGangHuaRadio != nil {
		return *m.DianGangHuaRadio
	}
	return 0
}

func (m *Game_How2Play) GetOthersCheckBox() []int32 {
	if m != nil {
		return m.OthersCheckBox
	}
	return nil
}

func (m *Game_How2Play) GetHuRadio() int32 {
	if m != nil && m.HuRadio != nil {
		return *m.HuRadio
	}
	return 0
}

type Game_RoomTypeInfo struct {
	BoardsCout       *int32         `protobuf:"varint,1,opt,name=boardsCout" json:"boardsCout,omitempty"`
	CapMax           *int64         `protobuf:"varint,2,opt,name=capMax" json:"capMax,omitempty"`
	How2Play         *Game_How2Play `protobuf:"bytes,3,opt,name=how2Play" json:"how2Play,omitempty"`
	CardsNum         *int32         `protobuf:"varint,4,opt,name=cardsNum" json:"cardsNum,omitempty"`
	Settlement       *int32         `protobuf:"varint,5,opt,name=settlement" json:"settlement,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_RoomTypeInfo) Reset()                    { *m = Game_RoomTypeInfo{} }
func (m *Game_RoomTypeInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_RoomTypeInfo) ProtoMessage()               {}
func (*Game_RoomTypeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Game_RoomTypeInfo) GetBoardsCout() int32 {
	if m != nil && m.BoardsCout != nil {
		return *m.BoardsCout
	}
	return 0
}

func (m *Game_RoomTypeInfo) GetCapMax() int64 {
	if m != nil && m.CapMax != nil {
		return *m.CapMax
	}
	return 0
}

func (m *Game_RoomTypeInfo) GetHow2Play() *Game_How2Play {
	if m != nil {
		return m.How2Play
	}
	return nil
}

func (m *Game_RoomTypeInfo) GetCardsNum() int32 {
	if m != nil && m.CardsNum != nil {
		return *m.CardsNum
	}
	return 0
}

func (m *Game_RoomTypeInfo) GetSettlement() int32 {
	if m != nil && m.Settlement != nil {
		return *m.Settlement
	}
	return 0
}

// 创建房间
type Game_CreateRoom struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32            `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Password         *string            `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	RoomTypeInfo     *Game_RoomTypeInfo `protobuf:"bytes,4,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Game_CreateRoom) Reset()                    { *m = Game_CreateRoom{} }
func (m *Game_CreateRoom) String() string            { return proto.CompactTextString(m) }
func (*Game_CreateRoom) ProtoMessage()               {}
func (*Game_CreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Game_CreateRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_CreateRoom) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_CreateRoom) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Game_CreateRoom) GetRoomTypeInfo() *Game_RoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 创建房间回复的信息
type Game_AckCreateRoom struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskId           *int32             `protobuf:"varint,2,opt,name=deskId" json:"deskId,omitempty"`
	Password         *string            `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	UserBalance      *int64             `protobuf:"varint,4,opt,name=userBalance" json:"userBalance,omitempty"`
	CreateFee        *int64             `protobuf:"varint,5,opt,name=createFee" json:"createFee,omitempty"`
	RoomTypeInfo     *Game_RoomTypeInfo `protobuf:"bytes,6,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Game_AckCreateRoom) Reset()                    { *m = Game_AckCreateRoom{} }
func (m *Game_AckCreateRoom) String() string            { return proto.CompactTextString(m) }
func (*Game_AckCreateRoom) ProtoMessage()               {}
func (*Game_AckCreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Game_AckCreateRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckCreateRoom) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *Game_AckCreateRoom) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Game_AckCreateRoom) GetUserBalance() int64 {
	if m != nil && m.UserBalance != nil {
		return *m.UserBalance
	}
	return 0
}

func (m *Game_AckCreateRoom) GetCreateFee() int64 {
	if m != nil && m.CreateFee != nil {
		return *m.CreateFee
	}
	return 0
}

func (m *Game_AckCreateRoom) GetRoomTypeInfo() *Game_RoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 解散房间
type Game_DissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DissolveDesk) Reset()                    { *m = Game_DissolveDesk{} }
func (m *Game_DissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_DissolveDesk) ProtoMessage()               {}
func (*Game_DissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Game_DissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DissolveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 解散房间回复
type Game_AckDissolveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,3,opt,name=deskId" json:"deskId,omitempty"`
	PassWord         *string      `protobuf:"bytes,4,opt,name=passWord" json:"passWord,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckDissolveDesk) Reset()                    { *m = Game_AckDissolveDesk{} }
func (m *Game_AckDissolveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_AckDissolveDesk) ProtoMessage()               {}
func (*Game_AckDissolveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Game_AckDissolveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckDissolveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckDissolveDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *Game_AckDissolveDesk) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

// 离开房间
type Game_LeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_LeaveDesk) Reset()                    { *m = Game_LeaveDesk{} }
func (m *Game_LeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_LeaveDesk) ProtoMessage()               {}
func (*Game_LeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Game_LeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 离开房间的回复
type Game_ACKLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ACKLeaveDesk) Reset()                    { *m = Game_ACKLeaveDesk{} }
func (m *Game_ACKLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*Game_ACKLeaveDesk) ProtoMessage()               {}
func (*Game_ACKLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *Game_ACKLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 准备游戏
type Game_Ready struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Ready) Reset()                    { *m = Game_Ready{} }
func (m *Game_Ready) String() string            { return proto.CompactTextString(m) }
func (*Game_Ready) ProtoMessage()               {}
func (*Game_Ready) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Game_Ready) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 准备游戏的结果
type Game_AckReady struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Msg              *string      `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckReady) Reset()                    { *m = Game_AckReady{} }
func (m *Game_AckReady) String() string            { return proto.CompactTextString(m) }
func (*Game_AckReady) ProtoMessage()               {}
func (*Game_AckReady) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *Game_AckReady) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckReady) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

// 开始游戏
type Game_Begin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Begin) Reset()                    { *m = Game_Begin{} }
func (m *Game_Begin) String() string            { return proto.CompactTextString(m) }
func (*Game_Begin) ProtoMessage()               {}
func (*Game_Begin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *Game_Begin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 麻将牌
type Game_CardInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Color            *int32       `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	Value            *int32       `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_CardInfo) Reset()                    { *m = Game_CardInfo{} }
func (m *Game_CardInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_CardInfo) ProtoMessage()               {}
func (*Game_CardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Game_CardInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_CardInfo) GetColor() int32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *Game_CardInfo) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 初始化手牌（刚进房间时，掉线回到房间时）
type Game_InitCard struct {
	MatchId          *string          `protobuf:"bytes,1,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32           `protobuf:"varint,2,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32           `protobuf:"varint,3,opt,name=seat" json:"seat,omitempty"`
	NextUser         *int32           `protobuf:"varint,4,opt,name=NextUser" json:"NextUser,omitempty"`
	HandCard         []*Game_CardInfo `protobuf:"bytes,5,rep,name=HandCard" json:"HandCard,omitempty"`
	PengCard         []*Game_CardInfo `protobuf:"bytes,6,rep,name=PengCard" json:"PengCard,omitempty"`
	GangCard         []*Game_CardInfo `protobuf:"bytes,7,rep,name=GangCard" json:"GangCard,omitempty"`
	MoCard           *Game_CardInfo   `protobuf:"bytes,8,opt,name=MoCard" json:"MoCard,omitempty"`
	ActionTime       *int32           `protobuf:"varint,9,opt,name=ActionTime" json:"ActionTime,omitempty"`
	DelayTime        *int32           `protobuf:"varint,10,opt,name=DelayTime" json:"DelayTime,omitempty"`
	CurrPlayCount    *int32           `protobuf:"varint,11,opt,name=currPlayCount" json:"currPlayCount,omitempty"`
	TotalPlayCount   *int32           `protobuf:"varint,12,opt,name=totalPlayCount" json:"totalPlayCount,omitempty"`
	Header           *ProtoHeader     `protobuf:"bytes,13,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_InitCard) Reset()                    { *m = Game_InitCard{} }
func (m *Game_InitCard) String() string            { return proto.CompactTextString(m) }
func (*Game_InitCard) ProtoMessage()               {}
func (*Game_InitCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *Game_InitCard) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_InitCard) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_InitCard) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_InitCard) GetNextUser() int32 {
	if m != nil && m.NextUser != nil {
		return *m.NextUser
	}
	return 0
}

func (m *Game_InitCard) GetHandCard() []*Game_CardInfo {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Game_InitCard) GetPengCard() []*Game_CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_InitCard) GetGangCard() []*Game_CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_InitCard) GetMoCard() *Game_CardInfo {
	if m != nil {
		return m.MoCard
	}
	return nil
}

func (m *Game_InitCard) GetActionTime() int32 {
	if m != nil && m.ActionTime != nil {
		return *m.ActionTime
	}
	return 0
}

func (m *Game_InitCard) GetDelayTime() int32 {
	if m != nil && m.DelayTime != nil {
		return *m.DelayTime
	}
	return 0
}

func (m *Game_InitCard) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *Game_InitCard) GetTotalPlayCount() int32 {
	if m != nil && m.TotalPlayCount != nil {
		return *m.TotalPlayCount
	}
	return 0
}

func (m *Game_InitCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 离开房间
type Game_LeaveRoom struct {
	MatchId          *string      `protobuf:"bytes,1,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,2,opt,name=tableId" json:"tableId,omitempty"`
	Seat             *int32       `protobuf:"varint,3,opt,name=seat" json:"seat,omitempty"`
	Header           *ProtoHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_LeaveRoom) Reset()                    { *m = Game_LeaveRoom{} }
func (m *Game_LeaveRoom) String() string            { return proto.CompactTextString(m) }
func (*Game_LeaveRoom) ProtoMessage()               {}
func (*Game_LeaveRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Game_LeaveRoom) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_LeaveRoom) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_LeaveRoom) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Game_LeaveRoom) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 换桌（【用户主动换桌】或【锦标赛合并换桌】）
type Game_ChangeTable struct {
	MatchId          *string      `protobuf:"bytes,1,opt,name=matchId" json:"matchId,omitempty"`
	NewTableId       *int32       `protobuf:"varint,2,opt,name=newTableId" json:"newTableId,omitempty"`
	TableId          *int32       `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	UserName         *string      `protobuf:"bytes,4,opt,name=userName" json:"userName,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	Header           *ProtoHeader `protobuf:"bytes,6,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangeTable) Reset()                    { *m = Game_ChangeTable{} }
func (m *Game_ChangeTable) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangeTable) ProtoMessage()               {}
func (*Game_ChangeTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *Game_ChangeTable) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_ChangeTable) GetNewTableId() int32 {
	if m != nil && m.NewTableId != nil {
		return *m.NewTableId
	}
	return 0
}

func (m *Game_ChangeTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_ChangeTable) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *Game_ChangeTable) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ChangeTable) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 离桌消息，当用户离开桌子时，给该桌用户发送该消息
type Game_LeaveTable struct {
	MatchId          *string                 `protobuf:"bytes,1,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32                  `protobuf:"varint,2,opt,name=tableId" json:"tableId,omitempty"`
	UserId           *uint32                 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	Username         *string                 `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Reason           *Game_LeaveTable_Reason `protobuf:"varint,5,opt,name=reason,enum=bbproto.Game_LeaveTable_Reason" json:"reason,omitempty"`
	Header           *ProtoHeader            `protobuf:"bytes,6,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Game_LeaveTable) Reset()                    { *m = Game_LeaveTable{} }
func (m *Game_LeaveTable) String() string            { return proto.CompactTextString(m) }
func (*Game_LeaveTable) ProtoMessage()               {}
func (*Game_LeaveTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Game_LeaveTable) GetMatchId() string {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return ""
}

func (m *Game_LeaveTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_LeaveTable) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_LeaveTable) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *Game_LeaveTable) GetReason() Game_LeaveTable_Reason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return Game_LeaveTable_quit_mormal
}

func (m *Game_LeaveTable) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 防沉迷消息
type Game_NowelterInfo struct {
	Reusername       *string      `protobuf:"bytes,1,opt,name=reusername" json:"reusername,omitempty"`
	NType            *int32       `protobuf:"varint,2,opt,name=nType" json:"nType,omitempty"`
	NReason          *int32       `protobuf:"varint,3,opt,name=nReason" json:"nReason,omitempty"`
	Header           *ProtoHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_NowelterInfo) Reset()                    { *m = Game_NowelterInfo{} }
func (m *Game_NowelterInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_NowelterInfo) ProtoMessage()               {}
func (*Game_NowelterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *Game_NowelterInfo) GetReusername() string {
	if m != nil && m.Reusername != nil {
		return *m.Reusername
	}
	return ""
}

func (m *Game_NowelterInfo) GetNType() int32 {
	if m != nil && m.NType != nil {
		return *m.NType
	}
	return 0
}

func (m *Game_NowelterInfo) GetNReason() int32 {
	if m != nil && m.NReason != nil {
		return *m.NReason
	}
	return 0
}

func (m *Game_NowelterInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 显示大厅时请求
type Game_Login struct {
	UserId           *uint32      `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	ProtoVersion     *int32       `protobuf:"varint,2,opt,name=protoVersion" json:"protoVersion,omitempty"`
	Header           *ProtoHeader `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Login) Reset()                    { *m = Game_Login{} }
func (m *Game_Login) String() string            { return proto.CompactTextString(m) }
func (*Game_Login) ProtoMessage()               {}
func (*Game_Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *Game_Login) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Login) GetProtoVersion() int32 {
	if m != nil && m.ProtoVersion != nil {
		return *m.ProtoVersion
	}
	return 0
}

func (m *Game_Login) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 大厅回复
type Game_AckLogin struct {
	Notice           *string      `protobuf:"bytes,1,opt,name=notice" json:"notice,omitempty"`
	GameStatus       *int32       `protobuf:"varint,2,opt,name=gameStatus" json:"gameStatus,omitempty"`
	MatchId          *int32       `protobuf:"varint,3,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32       `protobuf:"varint,4,opt,name=tableId" json:"tableId,omitempty"`
	RoomPassword     *string      `protobuf:"bytes,5,opt,name=roomPassword" json:"roomPassword,omitempty"`
	CostCreateRoom   *int64       `protobuf:"varint,6,opt,name=costCreateRoom" json:"costCreateRoom,omitempty"`
	CostRebuy        *int64       `protobuf:"varint,7,opt,name=costRebuy" json:"costRebuy,omitempty"`
	Championship     *bool        `protobuf:"varint,8,opt,name=championship" json:"championship,omitempty"`
	Chip             *int64       `protobuf:"varint,9,opt,name=chip" json:"chip,omitempty"`
	MailCount        *int32       `protobuf:"varint,10,opt,name=mailCount" json:"mailCount,omitempty"`
	Header           *ProtoHeader `protobuf:"bytes,11,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckLogin) Reset()                    { *m = Game_AckLogin{} }
func (m *Game_AckLogin) String() string            { return proto.CompactTextString(m) }
func (*Game_AckLogin) ProtoMessage()               {}
func (*Game_AckLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Game_AckLogin) GetNotice() string {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return ""
}

func (m *Game_AckLogin) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *Game_AckLogin) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *Game_AckLogin) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Game_AckLogin) GetRoomPassword() string {
	if m != nil && m.RoomPassword != nil {
		return *m.RoomPassword
	}
	return ""
}

func (m *Game_AckLogin) GetCostCreateRoom() int64 {
	if m != nil && m.CostCreateRoom != nil {
		return *m.CostCreateRoom
	}
	return 0
}

func (m *Game_AckLogin) GetCostRebuy() int64 {
	if m != nil && m.CostRebuy != nil {
		return *m.CostRebuy
	}
	return 0
}

func (m *Game_AckLogin) GetChampionship() bool {
	if m != nil && m.Championship != nil {
		return *m.Championship
	}
	return false
}

func (m *Game_AckLogin) GetChip() int64 {
	if m != nil && m.Chip != nil {
		return *m.Chip
	}
	return 0
}

func (m *Game_AckLogin) GetMailCount() int32 {
	if m != nil && m.MailCount != nil {
		return *m.MailCount
	}
	return 0
}

func (m *Game_AckLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type Game_Notice struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,2,opt,name=noticeType" json:"noticeType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Notice) Reset()                    { *m = Game_Notice{} }
func (m *Game_Notice) String() string            { return proto.CompactTextString(m) }
func (*Game_Notice) ProtoMessage()               {}
func (*Game_Notice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *Game_Notice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Notice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

// 公告的内容
type Game_AckNotice struct {
	Header           *ProtoHeader `protobuf:"bytes,7,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,1,opt,name=noticeType" json:"noticeType,omitempty"`
	NoticeTitle      *string      `protobuf:"bytes,2,opt,name=noticeTitle" json:"noticeTitle,omitempty"`
	NoticeContent    *string      `protobuf:"bytes,3,opt,name=noticeContent" json:"noticeContent,omitempty"`
	NoticeMemo       *string      `protobuf:"bytes,4,opt,name=noticeMemo" json:"noticeMemo,omitempty"`
	Id               *int32       `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	Fileds           []string     `protobuf:"bytes,6,rep,name=fileds" json:"fileds,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckNotice) Reset()                    { *m = Game_AckNotice{} }
func (m *Game_AckNotice) String() string            { return proto.CompactTextString(m) }
func (*Game_AckNotice) ProtoMessage()               {}
func (*Game_AckNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *Game_AckNotice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *Game_AckNotice) GetNoticeTitle() string {
	if m != nil && m.NoticeTitle != nil {
		return *m.NoticeTitle
	}
	return ""
}

func (m *Game_AckNotice) GetNoticeContent() string {
	if m != nil && m.NoticeContent != nil {
		return *m.NoticeContent
	}
	return ""
}

func (m *Game_AckNotice) GetNoticeMemo() string {
	if m != nil && m.NoticeMemo != nil {
		return *m.NoticeMemo
	}
	return ""
}

func (m *Game_AckNotice) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_AckNotice) GetFileds() []string {
	if m != nil {
		return m.Fileds
	}
	return nil
}

// 游戏战绩
type Game_GameRecord struct {
	Header           *ProtoHeader `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	Id               *int32       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_GameRecord) Reset()                    { *m = Game_GameRecord{} }
func (m *Game_GameRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_GameRecord) ProtoMessage()               {}
func (*Game_GameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *Game_GameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_GameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_GameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// message
type Game_BeanUserRecord struct {
	Header           *ProtoHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	NickName         *string      `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	WinAmount        *int64       `protobuf:"varint,3,opt,name=WinAmount" json:"WinAmount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_BeanUserRecord) Reset()                    { *m = Game_BeanUserRecord{} }
func (m *Game_BeanUserRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_BeanUserRecord) ProtoMessage()               {}
func (*Game_BeanUserRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *Game_BeanUserRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BeanUserRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_BeanUserRecord) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *Game_BeanUserRecord) GetWinAmount() int64 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

// message
type Game_BeanGameRecord struct {
	Header           *ProtoHeader           `protobuf:"bytes,5,opt,name=header" json:"header,omitempty"`
	Id               *int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DeskId           *int32                 `protobuf:"varint,2,opt,name=deskId" json:"deskId,omitempty"`
	BeginTime        *string                `protobuf:"bytes,3,opt,name=beginTime" json:"beginTime,omitempty"`
	Users            []*Game_BeanUserRecord `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Game_BeanGameRecord) Reset()                    { *m = Game_BeanGameRecord{} }
func (m *Game_BeanGameRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_BeanGameRecord) ProtoMessage()               {}
func (*Game_BeanGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *Game_BeanGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BeanGameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_BeanGameRecord) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *Game_BeanGameRecord) GetBeginTime() string {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return ""
}

func (m *Game_BeanGameRecord) GetUsers() []*Game_BeanUserRecord {
	if m != nil {
		return m.Users
	}
	return nil
}

//
type Game_AckGameRecord struct {
	Header           *ProtoHeader           `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32                `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Records          []*Game_BeanGameRecord `protobuf:"bytes,3,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Game_AckGameRecord) Reset()                    { *m = Game_AckGameRecord{} }
func (m *Game_AckGameRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_AckGameRecord) ProtoMessage()               {}
func (*Game_AckGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *Game_AckGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckGameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckGameRecord) GetRecords() []*Game_BeanGameRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 微信信息
type WeixinInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	OpenId           *string      `protobuf:"bytes,1,opt,name=openId" json:"openId,omitempty"`
	NickName         *string      `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	HeadUrl          *string      `protobuf:"bytes,3,opt,name=headUrl" json:"headUrl,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WeixinInfo) Reset()                    { *m = WeixinInfo{} }
func (m *WeixinInfo) String() string            { return proto.CompactTextString(m) }
func (*WeixinInfo) ProtoMessage()               {}
func (*WeixinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *WeixinInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WeixinInfo) GetOpenId() string {
	if m != nil && m.OpenId != nil {
		return *m.OpenId
	}
	return ""
}

func (m *WeixinInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *WeixinInfo) GetHeadUrl() string {
	if m != nil && m.HeadUrl != nil {
		return *m.HeadUrl
	}
	return ""
}

// 聊天的内容
type Game_Message struct {
	Header           *ProtoHeader `protobuf:"bytes,6,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,1,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,5,opt,name=deskId" json:"deskId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Message) Reset()                    { *m = Game_Message{} }
func (m *Game_Message) String() string            { return proto.CompactTextString(m) }
func (*Game_Message) ProtoMessage()               {}
func (*Game_Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *Game_Message) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Message) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *Game_Message) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_Message) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Game_Message) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_Message) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

// 消息广播
type Game_SendMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,6,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SendMessage) Reset()                    { *m = Game_SendMessage{} }
func (m *Game_SendMessage) String() string            { return proto.CompactTextString(m) }
func (*Game_SendMessage) ProtoMessage()               {}
func (*Game_SendMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *Game_SendMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *Game_SendMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_SendMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Game_SendMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_Rebuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Type             *int32       `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Rebuy) Reset()                    { *m = Game_Rebuy{} }
func (m *Game_Rebuy) String() string            { return proto.CompactTextString(m) }
func (*Game_Rebuy) ProtoMessage()               {}
func (*Game_Rebuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *Game_Rebuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Rebuy) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type Game_AckRebuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RemainCount      *int32       `protobuf:"varint,2,opt,name=remainCount" json:"remainCount,omitempty"`
	CurrChip         *int64       `protobuf:"varint,3,opt,name=currChip" json:"currChip,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckRebuy) Reset()                    { *m = Game_AckRebuy{} }
func (m *Game_AckRebuy) String() string            { return proto.CompactTextString(m) }
func (*Game_AckRebuy) ProtoMessage()               {}
func (*Game_AckRebuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *Game_AckRebuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckRebuy) GetRemainCount() int32 {
	if m != nil && m.RemainCount != nil {
		return *m.RemainCount
	}
	return 0
}

func (m *Game_AckRebuy) GetCurrChip() int64 {
	if m != nil && m.CurrChip != nil {
		return *m.CurrChip
	}
	return 0
}

type Game_NotRebuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Type             *int32       `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_NotRebuy) Reset()                    { *m = Game_NotRebuy{} }
func (m *Game_NotRebuy) String() string            { return proto.CompactTextString(m) }
func (*Game_NotRebuy) ProtoMessage()               {}
func (*Game_NotRebuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *Game_NotRebuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_NotRebuy) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type Game_AckNotRebuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckNotRebuy) Reset()                    { *m = Game_AckNotRebuy{} }
func (m *Game_AckNotRebuy) String() string            { return proto.CompactTextString(m) }
func (*Game_AckNotRebuy) ProtoMessage()               {}
func (*Game_AckNotRebuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Game_AckNotRebuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 反馈信息的协议
type Game_Feedback struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Message          *string      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_Feedback) Reset()                    { *m = Game_Feedback{} }
func (m *Game_Feedback) String() string            { return proto.CompactTextString(m) }
func (*Game_Feedback) ProtoMessage()               {}
func (*Game_Feedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *Game_Feedback) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Feedback) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Game_Opening)(nil), "bbproto.game_Opening")
	proto.RegisterType((*Game_ExchangeCards)(nil), "bbproto.game_ExchangeCards")
	proto.RegisterType((*Game_AckExchangeCards)(nil), "bbproto.game_AckExchangeCards")
	proto.RegisterType((*Game_DingQue)(nil), "bbproto.game_DingQue")
	proto.RegisterType((*Game_ActPeng)(nil), "bbproto.game_ActPeng")
	proto.RegisterType((*Game_AckActPeng)(nil), "bbproto.game_AckActPeng")
	proto.RegisterType((*Game_ActGang)(nil), "bbproto.game_ActGang")
	proto.RegisterType((*Game_AckActGang)(nil), "bbproto.game_AckActGang")
	proto.RegisterType((*Game_ActHu)(nil), "bbproto.game_ActHu")
	proto.RegisterType((*Game_AckActHu)(nil), "bbproto.game_AckActHu")
	proto.RegisterType((*Game_ActGuo)(nil), "bbproto.game_ActGuo")
	proto.RegisterType((*Game_AckActGuo)(nil), "bbproto.game_AckActGuo")
	proto.RegisterType((*Game_OverTurn)(nil), "bbproto.game_OverTurn")
	proto.RegisterType((*Game_CardType)(nil), "bbproto.game_CardType")
	proto.RegisterType((*Game_WinCoin)(nil), "bbproto.game_WinCoin")
	proto.RegisterType((*Game_OverCurrentBoard)(nil), "bbproto.game_OverCurrentBoard")
	proto.RegisterType((*Game_EndLottery)(nil), "bbproto.game_EndLottery")
	proto.RegisterType((*Game_SendDeskEndLottery)(nil), "bbproto.game_SendDeskEndLottery")
	proto.RegisterType((*Game_EnterRoom)(nil), "bbproto.game_EnterRoom")
	proto.RegisterType((*Game_AckEnterRoom)(nil), "bbproto.game_AckEnterRoom")
	proto.RegisterType((*Game_SendGameInfo)(nil), "bbproto.game_SendGameInfo")
	proto.RegisterType((*Game_How2Play)(nil), "bbproto.game_How2Play")
	proto.RegisterType((*Game_RoomTypeInfo)(nil), "bbproto.game_RoomTypeInfo")
	proto.RegisterType((*Game_CreateRoom)(nil), "bbproto.game_CreateRoom")
	proto.RegisterType((*Game_AckCreateRoom)(nil), "bbproto.game_AckCreateRoom")
	proto.RegisterType((*Game_DissolveDesk)(nil), "bbproto.game_DissolveDesk")
	proto.RegisterType((*Game_AckDissolveDesk)(nil), "bbproto.game_AckDissolveDesk")
	proto.RegisterType((*Game_LeaveDesk)(nil), "bbproto.game_LeaveDesk")
	proto.RegisterType((*Game_ACKLeaveDesk)(nil), "bbproto.game_ACKLeaveDesk")
	proto.RegisterType((*Game_Ready)(nil), "bbproto.game_Ready")
	proto.RegisterType((*Game_AckReady)(nil), "bbproto.game_AckReady")
	proto.RegisterType((*Game_Begin)(nil), "bbproto.game_Begin")
	proto.RegisterType((*Game_CardInfo)(nil), "bbproto.game_CardInfo")
	proto.RegisterType((*Game_InitCard)(nil), "bbproto.game_InitCard")
	proto.RegisterType((*Game_LeaveRoom)(nil), "bbproto.game_LeaveRoom")
	proto.RegisterType((*Game_ChangeTable)(nil), "bbproto.game_ChangeTable")
	proto.RegisterType((*Game_LeaveTable)(nil), "bbproto.game_LeaveTable")
	proto.RegisterType((*Game_NowelterInfo)(nil), "bbproto.game_NowelterInfo")
	proto.RegisterType((*Game_Login)(nil), "bbproto.game_Login")
	proto.RegisterType((*Game_AckLogin)(nil), "bbproto.game_AckLogin")
	proto.RegisterType((*Game_Notice)(nil), "bbproto.game_Notice")
	proto.RegisterType((*Game_AckNotice)(nil), "bbproto.game_AckNotice")
	proto.RegisterType((*Game_GameRecord)(nil), "bbproto.game_GameRecord")
	proto.RegisterType((*Game_BeanUserRecord)(nil), "bbproto.game_BeanUserRecord")
	proto.RegisterType((*Game_BeanGameRecord)(nil), "bbproto.game_BeanGameRecord")
	proto.RegisterType((*Game_AckGameRecord)(nil), "bbproto.game_AckGameRecord")
	proto.RegisterType((*WeixinInfo)(nil), "bbproto.WeixinInfo")
	proto.RegisterType((*Game_Message)(nil), "bbproto.game_Message")
	proto.RegisterType((*Game_SendMessage)(nil), "bbproto.game_SendMessage")
	proto.RegisterType((*Game_Rebuy)(nil), "bbproto.game_Rebuy")
	proto.RegisterType((*Game_AckRebuy)(nil), "bbproto.game_AckRebuy")
	proto.RegisterType((*Game_NotRebuy)(nil), "bbproto.game_NotRebuy")
	proto.RegisterType((*Game_AckNotRebuy)(nil), "bbproto.game_AckNotRebuy")
	proto.RegisterType((*Game_Feedback)(nil), "bbproto.game_Feedback")
	proto.RegisterEnum("bbproto.MJRoomType", MJRoomType_name, MJRoomType_value)
	proto.RegisterEnum("bbproto.Game_LeaveTable_Reason", Game_LeaveTable_Reason_name, Game_LeaveTable_Reason_value)
}

var fileDescriptor0 = []byte{
	// 2092 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x58, 0xcb, 0x6f, 0x23, 0x49,
	0x19, 0xdf, 0xee, 0xb6, 0x1d, 0xa7, 0x9c, 0x87, 0xc7, 0x33, 0x99, 0x78, 0xb3, 0x23, 0xb1, 0x6a,
	0xf1, 0x18, 0x0d, 0x22, 0xbb, 0xca, 0x01, 0xc1, 0x8d, 0x89, 0x33, 0x33, 0xc9, 0x6e, 0x9c, 0x09,
	0x99, 0x64, 0x03, 0x08, 0x69, 0x28, 0xb7, 0x2b, 0x76, 0x6f, 0xda, 0x55, 0xa6, 0x1f, 0x93, 0x84,
	0x03, 0x57, 0x24, 0x56, 0x5a, 0x71, 0x40, 0xe2, 0x84, 0xe0, 0xc4, 0x89, 0x0b, 0x17, 0xfe, 0x14,
	0xf8, 0x0b, 0x90, 0xb8, 0xcf, 0x3f, 0xc0, 0x57, 0x5f, 0x55, 0x75, 0xb7, 0x1d, 0xc7, 0x69, 0x07,
	0x47, 0x88, 0x43, 0x22, 0x77, 0x3d, 0xbe, 0xc7, 0xef, 0x7b, 0x17, 0x59, 0x6e, 0xd3, 0xfe, 0x97,
	0x82, 0xf7, 0x36, 0x87, 0xa1, 0x88, 0x45, 0x63, 0xa1, 0xd3, 0xc1, 0x1f, 0x1b, 0xa4, 0x43, 0x23,
	0xa6, 0x16, 0xdd, 0x2f, 0xc8, 0x52, 0x8f, 0x0e, 0xd8, 0xdb, 0xd7, 0x43, 0xc6, 0x7d, 0xde, 0x6b,
	0x7c, 0x93, 0x54, 0xfa, 0x8c, 0x76, 0x59, 0xd8, 0xb4, 0x3e, 0xb6, 0x9e, 0xd6, 0xb6, 0x1e, 0x6d,
	0xea, 0x5b, 0x9b, 0x87, 0xf2, 0xff, 0x2e, 0xee, 0x35, 0x56, 0xc9, 0xc2, 0x80, 0xc6, 0x5e, 0x7f,
	0xaf, 0xdb, 0xb4, 0xe1, 0xd8, 0xa2, 0x5c, 0x88, 0x69, 0x27, 0x60, 0xb0, 0xe0, 0xc0, 0x42, 0xd9,
	0xfd, 0xab, 0x45, 0x1a, 0x48, 0xf8, 0xc5, 0xa5, 0xd7, 0xa7, 0xbc, 0xc7, 0x5a, 0x34, 0xec, 0x46,
	0xf3, 0x22, 0xdf, 0x58, 0x22, 0xa5, 0x88, 0xd1, 0xb8, 0x59, 0xc2, 0xaf, 0x15, 0x52, 0x49, 0x22,
	0x16, 0xc2, 0x6e, 0x19, 0xbe, 0x97, 0x1b, 0x9f, 0x92, 0x3a, 0xd3, 0x6c, 0x5f, 0x27, 0x31, 0x72,
	0x6e, 0x56, 0x3e, 0x76, 0x80, 0xdf, 0xe3, 0x94, 0x1f, 0x0a, 0x27, 0xb7, 0xf6, 0xf8, 0x99, 0x70,
	0xff, 0x64, 0x93, 0x35, 0x5c, 0x79, 0xee, 0x9d, 0xff, 0x5f, 0x48, 0xdc, 0x58, 0x27, 0xab, 0xb9,
	0x1b, 0x48, 0x7a, 0x01, 0x49, 0x7f, 0x92, 0x6d, 0xec, 0x71, 0x45, 0xa9, 0x3a, 0x95, 0xd2, 0x63,
	0xb2, 0x92, 0x5d, 0x40, 0x42, 0x8b, 0x46, 0xe2, 0xae, 0xef, 0xb1, 0x26, 0x41, 0x83, 0x26, 0xda,
	0x51, 0x76, 0xc0, 0x4b, 0x7e, 0x9c, 0xb0, 0xb9, 0xe1, 0xb2, 0x4c, 0xca, 0x9e, 0x08, 0x44, 0x38,
	0x19, 0x18, 0xf7, 0x6b, 0x4b, 0xf3, 0x7d, 0xee, 0xc5, 0x87, 0x6c, 0x7e, 0x0e, 0x3a, 0x66, 0x8f,
	0xa7, 0xa4, 0x0a, 0x01, 0xd0, 0x93, 0x98, 0x20, 0xe3, 0x9b, 0x3d, 0xe5, 0x9f, 0x16, 0x59, 0x35,
	0x9e, 0x32, 0x6f, 0x99, 0xf2, 0x52, 0x94, 0xa6, 0xda, 0x0c, 0x4e, 0xee, 0x52, 0xde, 0xd5, 0xf2,
	0xde, 0x72, 0xf2, 0x15, 0xd5, 0x34, 0xa7, 0xc7, 0x40, 0x1e, 0x6a, 0x79, 0xe5, 0xfe, 0xa0, 0xee,
	0xd1, 0x42, 0x50, 0xff, 0x6b, 0x14, 0xea, 0xfb, 0x95, 0x29, 0x67, 0xfe, 0xa2, 0xc0, 0x57, 0x0a,
	0x03, 0xbf, 0x30, 0x15, 0xf8, 0xdf, 0x5a, 0x84, 0x18, 0xe0, 0x77, 0x93, 0x7b, 0x52, 0xf1, 0xdb,
	0x40, 0x35, 0x29, 0x00, 0xfa, 0x57, 0x36, 0x59, 0xce, 0x81, 0x7e, 0x6f, 0xf2, 0xfc, 0x4f, 0x21,
	0xcf, 0xa1, 0x51, 0x9d, 0x8a, 0x86, 0x47, 0x6a, 0x69, 0x48, 0x24, 0xe2, 0x7e, 0xa0, 0x70, 0xcf,
	0xc8, 0x4a, 0xde, 0xcd, 0xef, 0x8d, 0xcf, 0x9f, 0x2d, 0x6d, 0xda, 0xd7, 0xef, 0x58, 0x78, 0x9c,
	0x84, 0xfc, 0x9e, 0x4c, 0x5b, 0x27, 0x55, 0xce, 0x2e, 0x55, 0x4d, 0x2a, 0xe3, 0xca, 0x77, 0xc8,
	0x82, 0xa7, 0xf1, 0xae, 0x4c, 0xc5, 0x9b, 0x6b, 0x09, 0xe5, 0xc2, 0xf1, 0xd5, 0xb0, 0x68, 0x99,
	0xf9, 0x16, 0x14, 0x11, 0xac, 0x74, 0xf6, 0x54, 0xab, 0x83, 0x60, 0x9e, 0x26, 0xac, 0xdb, 0x94,
	0x3f, 0x9a, 0x9c, 0x77, 0xea, 0xf3, 0x96, 0xf0, 0x8b, 0x22, 0x62, 0xf4, 0xb5, 0x51, 0x3b, 0x80,
	0xe3, 0x42, 0x5d, 0x47, 0xaa, 0x8e, 0xdc, 0xf6, 0xe4, 0x57, 0x09, 0xbf, 0x9e, 0xe6, 0xb8, 0xde,
	0x18, 0x7b, 0xa8, 0x2c, 0xc8, 0x17, 0x8a, 0x80, 0x1d, 0xc0, 0x22, 0xe2, 0xb4, 0xe8, 0xfe, 0xc3,
	0xd2, 0x7d, 0x89, 0x34, 0x59, 0x2b, 0x09, 0x43, 0xc6, 0xe3, 0x6d, 0x01, 0xe7, 0xe7, 0x66, 0xba,
	0x67, 0xa4, 0xa6, 0x85, 0x97, 0x10, 0xe9, 0xb2, 0xb3, 0x36, 0x2a, 0xa0, 0x01, 0x07, 0xf4, 0x0a,
	0x29, 0x3f, 0xd7, 0x46, 0x5d, 0x23, 0xcb, 0xf2, 0xeb, 0x04, 0xca, 0x75, 0x4b, 0x24, 0x3c, 0x46,
	0x91, 0xcb, 0x0a, 0x64, 0x7e, 0xc4, 0x3a, 0xc9, 0x15, 0x76, 0x24, 0xd5, 0x46, 0x83, 0x90, 0x50,
	0x7e, 0xaa, 0x53, 0x55, 0x04, 0xfe, 0xf7, 0x26, 0xb7, 0xbf, 0xe0, 0xdd, 0x7d, 0x11, 0xc7, 0x2c,
	0xbc, 0x2a, 0x8e, 0x3d, 0x82, 0x6b, 0x23, 0xb8, 0xd0, 0x2f, 0x74, 0xfc, 0xde, 0xa9, 0x86, 0xbe,
	0x2a, 0xdb, 0x09, 0x71, 0xc1, 0x99, 0x6a, 0x27, 0xaa, 0x06, 0x51, 0x2e, 0x11, 0x2d, 0x23, 0x00,
	0x59, 0x83, 0x51, 0xc1, 0xce, 0xcb, 0x98, 0x12, 0x9b, 0x27, 0xf7, 0x9c, 0xac, 0xa3, 0x54, 0x6f,
	0x18, 0xef, 0xee, 0xb0, 0xe8, 0x7c, 0x66, 0xe9, 0x9e, 0x81, 0xf6, 0x06, 0x4b, 0xe5, 0x8c, 0xcd,
	0x51, 0x2c, 0x33, 0x8a, 0xb2, 0xe0, 0xae, 0xe8, 0x35, 0xf8, 0x3e, 0x12, 0x62, 0x30, 0x37, 0xab,
	0x82, 0xde, 0x87, 0x34, 0x8a, 0x4e, 0x05, 0x76, 0x12, 0xa3, 0x7a, 0xab, 0x8e, 0x13, 0x8c, 0xa2,
	0x69, 0xec, 0x19, 0xd3, 0xb9, 0x01, 0x79, 0x90, 0x36, 0xc1, 0x73, 0x17, 0x09, 0x16, 0xc0, 0x2b,
	0x68, 0x24, 0xb8, 0x4e, 0x47, 0xff, 0x2e, 0x69, 0x76, 0x12, 0xec, 0x57, 0xf0, 0x03, 0x63, 0x74,
	0x5e, 0xec, 0x40, 0x3f, 0x49, 0xf3, 0x4d, 0x4c, 0xe3, 0x24, 0xd2, 0x89, 0x09, 0xd6, 0x3a, 0xe0,
	0xb1, 0x2c, 0xcc, 0xa5, 0x26, 0xb0, 0xbf, 0x1c, 0x87, 0x10, 0x01, 0x74, 0x27, 0x8f, 0x0e, 0xdb,
	0xf4, 0x12, 0xfd, 0xc1, 0x51, 0xfe, 0x23, 0x06, 0x18, 0xbb, 0xe8, 0xb8, 0x8d, 0x07, 0x64, 0x71,
	0x18, 0xd0, 0x2b, 0x16, 0x1e, 0x24, 0x03, 0xdd, 0x28, 0x43, 0x80, 0xf7, 0x4d, 0x81, 0x22, 0xb7,
	0x25, 0x20, 0x2c, 0x65, 0xd2, 0x7f, 0x6b, 0x70, 0xd2, 0x91, 0x22, 0x41, 0xce, 0xf7, 0x05, 0x3f,
	0xf6, 0xc1, 0x45, 0x97, 0x0c, 0x52, 0x9d, 0x17, 0x5c, 0x6a, 0xd3, 0x5c, 0x86, 0x43, 0xc8, 0x73,
	0x87, 0x01, 0x53, 0x3c, 0xb3, 0x82, 0x67, 0x1e, 0x92, 0x9a, 0x8a, 0x31, 0x15, 0x54, 0xab, 0xb8,
	0x08, 0x33, 0x01, 0x78, 0x9e, 0x1f, 0xe7, 0x28, 0xd6, 0x71, 0x03, 0x5a, 0x7c, 0xdc, 0xc8, 0xa8,
	0x3c, 0x48, 0x33, 0xb5, 0xef, 0x9d, 0x63, 0xc2, 0x69, 0x00, 0x2b, 0x74, 0x13, 0x09, 0x0e, 0xc0,
	0xf8, 0x10, 0x59, 0x9b, 0xf0, 0x78, 0x64, 0xba, 0xf3, 0x90, 0x45, 0x49, 0x10, 0x37, 0xd7, 0xb4,
	0xe6, 0xb5, 0x0b, 0xe6, 0x5f, 0x2a, 0x7f, 0x8f, 0x9a, 0x8f, 0x51, 0xf9, 0x87, 0xa9, 0xf2, 0xa7,
	0xe9, 0x9e, 0x54, 0x01, 0xe3, 0x12, 0x89, 0xad, 0xe3, 0xe5, 0x47, 0x64, 0xc9, 0x07, 0x99, 0xa4,
	0x93, 0x21, 0x20, 0x4d, 0x44, 0x1c, 0xb2, 0x8a, 0x07, 0x79, 0xee, 0x10, 0x04, 0x55, 0xaa, 0x7d,
	0x68, 0x34, 0x88, 0x45, 0x4c, 0x83, 0x6c, 0x7d, 0xc3, 0x48, 0xd4, 0x01, 0xaf, 0xea, 0x5e, 0x35,
	0x3f, 0x42, 0x79, 0x81, 0x68, 0x04, 0xee, 0xc4, 0xc2, 0x13, 0xe5, 0xec, 0x4f, 0x70, 0x8a, 0x60,
	0xba, 0xac, 0xec, 0x8a, 0x8b, 0x2d, 0x49, 0x41, 0x8a, 0xf3, 0x2b, 0xbf, 0x2d, 0x8e, 0x68, 0xd7,
	0x17, 0xe8, 0x68, 0xe5, 0x46, 0x93, 0xd4, 0xbb, 0x3e, 0xe5, 0xb2, 0x81, 0xd8, 0x4d, 0xa8, 0xda,
	0xb1, 0x0d, 0x6f, 0x11, 0xf7, 0x41, 0xf6, 0x56, 0x9f, 0x79, 0xe7, 0xdb, 0xe2, 0x12, 0x5c, 0xcc,
	0x51, 0x76, 0xea, 0x27, 0xea, 0xa0, 0xf2, 0xe8, 0xdf, 0x58, 0xda, 0xa3, 0x8f, 0xb4, 0xcf, 0xa0,
	0xea, 0xd2, 0xeb, 0x64, 0xca, 0x8e, 0x40, 0xee, 0x58, 0x33, 0xcb, 0xfc, 0xcc, 0x36, 0x35, 0xa2,
	0xaf, 0x65, 0x43, 0xff, 0xbd, 0xe6, 0x42, 0xa9, 0xe4, 0xba, 0x86, 0x45, 0xd2, 0xfd, 0x52, 0xaf,
	0x8e, 0x58, 0x1c, 0x07, 0x6c, 0x00, 0xc5, 0x41, 0x79, 0xb5, 0xfb, 0x95, 0x49, 0xaf, 0xad, 0x10,
	0x00, 0x67, 0x33, 0x04, 0x72, 0x96, 0x27, 0x6c, 0xcc, 0x13, 0xc0, 0x6f, 0x08, 0x99, 0xe4, 0x42,
	0x66, 0x12, 0x07, 0x43, 0xed, 0x53, 0xb2, 0x14, 0xe6, 0xf4, 0x43, 0x29, 0x6a, 0x5b, 0x1b, 0xa3,
	0xf2, 0xe6, 0x11, 0x70, 0xff, 0x6e, 0x1e, 0x03, 0x20, 0xb1, 0xdc, 0x45, 0xa0, 0x2e, 0x64, 0x62,
	0x2d, 0x50, 0x79, 0x82, 0x40, 0x10, 0x0b, 0x52, 0xe4, 0x6d, 0x1a, 0x50, 0x0e, 0xf3, 0xaa, 0xaa,
	0xba, 0x60, 0x61, 0x0f, 0x59, 0xbd, 0x64, 0x2a, 0xf5, 0x3b, 0xd7, 0x04, 0xaf, 0xdc, 0x2a, 0xf8,
	0x9e, 0xb6, 0xe7, 0x8e, 0x1f, 0x45, 0x22, 0x78, 0xc7, 0x64, 0x49, 0xb8, 0x1b, 0x8e, 0xd0, 0xd9,
	0x3c, 0x32, 0x10, 0xfc, 0xf7, 0xd4, 0x72, 0xa0, 0x38, 0x79, 0x50, 0xb2, 0x7c, 0xef, 0x7e, 0x5f,
	0xd7, 0x96, 0x7d, 0x46, 0x67, 0xe1, 0xe4, 0xfe, 0xd0, 0xd4, 0x80, 0xd6, 0xe7, 0xb3, 0x5e, 0xdd,
	0xd2, 0x63, 0x0c, 0xc6, 0x63, 0xc1, 0x3b, 0xdb, 0xd9, 0xb4, 0x31, 0xc3, 0xb5, 0x46, 0x8d, 0x38,
	0x83, 0xa8, 0xa7, 0x72, 0x7f, 0xca, 0x77, 0x9b, 0xf5, 0x8a, 0x76, 0x70, 0xee, 0x9b, 0x5c, 0xa3,
	0x39, 0x43, 0xdd, 0x49, 0x5f, 0x2b, 0x6c, 0xf3, 0x78, 0xf1, 0x8e, 0x06, 0x89, 0xe9, 0x26, 0xdf,
	0x9b, 0xd9, 0x49, 0xe6, 0x5a, 0x49, 0x39, 0x5f, 0xa7, 0xac, 0xf1, 0x3a, 0x65, 0x8f, 0xb4, 0xce,
	0xa9, 0x1d, 0x0f, 0xa0, 0x75, 0x96, 0xc9, 0x2b, 0x9b, 0x93, 0x8a, 0x4f, 0xfa, 0x87, 0xac, 0xc8,
	0xa4, 0x3f, 0xdb, 0x9c, 0xd4, 0x16, 0xb7, 0xcf, 0x49, 0x63, 0x65, 0x6c, 0xd1, 0x54, 0xca, 0xac,
	0xde, 0x10, 0xd3, 0x32, 0x8e, 0x26, 0xf7, 0xda, 0x0d, 0xc9, 0x5d, 0x15, 0xc2, 0xcc, 0x26, 0xcb,
	0x53, 0x4c, 0x79, 0x96, 0xf7, 0x74, 0x4c, 0x2c, 0xb3, 0xa2, 0x9e, 0xf1, 0x29, 0x4d, 0xe1, 0xf3,
	0x3b, 0x8b, 0xd4, 0x95, 0xd6, 0xf8, 0x56, 0x76, 0x2c, 0x09, 0x5e, 0x67, 0x05, 0x48, 0x70, 0x76,
	0x71, 0x3c, 0xc2, 0x6d, 0x52, 0x7b, 0x26, 0xc3, 0x19, 0xeb, 0xee, 0xe4, 0xf6, 0x2c, 0x13, 0xa9,
	0x32, 0x45, 0xa4, 0xaf, 0x6d, 0x9d, 0xe6, 0x51, 0xf7, 0x1b, 0x24, 0xba, 0xa6, 0x7c, 0xc6, 0xcb,
	0x31, 0x29, 0x5e, 0x7e, 0xf3, 0x4c, 0x9a, 0x4f, 0x64, 0x9d, 0xc7, 0x56, 0x4d, 0x4a, 0xb3, 0xb2,
	0xf5, 0x8d, 0x51, 0xb3, 0x67, 0xdc, 0x36, 0x55, 0x47, 0x57, 0x50, 0xdc, 0x5f, 0x90, 0x8a, 0x3e,
	0xbf, 0x4a, 0x6a, 0xbf, 0x4c, 0xfc, 0xf8, 0xed, 0x40, 0x84, 0x03, 0x1a, 0xd4, 0x3f, 0x80, 0x1c,
	0xbe, 0x8a, 0x0b, 0x67, 0xa1, 0x0f, 0xe5, 0xfb, 0x73, 0x68, 0x4a, 0xea, 0x16, 0x14, 0xf3, 0x3a,
	0x2e, 0xd2, 0xee, 0x97, 0x49, 0x14, 0x23, 0xc3, 0xba, 0xdd, 0xd8, 0x20, 0x8f, 0x73, 0x47, 0x71,
	0x15, 0xfc, 0x8c, 0xc5, 0xac, 0xee, 0xb8, 0x03, 0x9d, 0xbd, 0x0e, 0xc4, 0x05, 0x0b, 0xa0, 0x83,
	0x35, 0xce, 0x19, 0xb2, 0x54, 0x43, 0x05, 0x0a, 0x44, 0x2e, 0xc7, 0xae, 0xce, 0x1e, 0x6f, 0x4e,
	0x67, 0x71, 0x89, 0x9f, 0xe8, 0xcc, 0xb3, 0x2f, 0x64, 0xe6, 0xc9, 0x70, 0xb5, 0x10, 0x57, 0xe8,
	0x45, 0xf0, 0xca, 0x17, 0xd0, 0x3a, 0x40, 0x68, 0x68, 0x56, 0x19, 0x65, 0x67, 0x0a, 0xe5, 0xf7,
	0x56, 0x96, 0x18, 0x53, 0xea, 0x5c, 0xc4, 0xf2, 0x41, 0x36, 0x75, 0xb4, 0x5e, 0xd6, 0xe0, 0xa6,
	0x6a, 0x18, 0xdb, 0x3b, 0xe3, 0x9e, 0x57, 0x32, 0x4d, 0x97, 0xac, 0x81, 0x87, 0xa6, 0x82, 0xaa,
	0xa1, 0x08, 0x02, 0xd0, 0x13, 0x51, 0x9c, 0xd5, 0x66, 0xdd, 0x0e, 0xcb, 0x22, 0x0a, 0xeb, 0xd9,
	0x30, 0xe7, 0x48, 0x02, 0x5e, 0x9f, 0x0e, 0x86, 0xa0, 0x50, 0xd4, 0xf7, 0x87, 0x98, 0x17, 0xaa,
	0x38, 0x94, 0xc9, 0xaf, 0x45, 0x73, 0x6d, 0x40, 0xfd, 0x40, 0x85, 0x32, 0x19, 0xd3, 0xba, 0x36,
	0x45, 0xeb, 0x57, 0xfa, 0xb9, 0xe5, 0x00, 0x15, 0x2d, 0x98, 0x93, 0x65, 0xc4, 0xe1, 0xf9, 0xcc,
	0x9e, 0xee, 0x5f, 0xac, 0xec, 0x4d, 0xe5, 0x1a, 0xb1, 0x85, 0xc2, 0xc4, 0xac, 0xb4, 0xd7, 0x56,
	0x6b, 0x3e, 0x74, 0x59, 0x7a, 0xe0, 0x80, 0x54, 0xa6, 0x16, 0x5b, 0x02, 0x46, 0x25, 0x1e, 0xeb,
	0x5e, 0x24, 0xbd, 0xdf, 0x66, 0x03, 0xa1, 0xa3, 0x89, 0x10, 0xdb, 0xef, 0xea, 0x71, 0x03, 0xac,
	0x78, 0xe6, 0x07, 0x4c, 0x3f, 0xef, 0x2f, 0x42, 0x1d, 0x52, 0x01, 0x2c, 0x67, 0x95, 0x23, 0xe6,
	0x89, 0x91, 0xc9, 0x7e, 0x8a, 0x83, 0x68, 0xa2, 0xd6, 0x58, 0x40, 0xab, 0x5e, 0x63, 0x48, 0x1e,
	0xea, 0x82, 0x48, 0xb9, 0x2c, 0x25, 0xd7, 0x08, 0x97, 0xa6, 0xb7, 0x1a, 0x27, 0x79, 0x2f, 0x96,
	0x25, 0xc9, 0xcc, 0x08, 0x4a, 0x75, 0x30, 0x2f, 0x0c, 0xdc, 0xcf, 0x07, 0x68, 0x5e, 0x7c, 0xf1,
	0x70, 0xff, 0x60, 0xe5, 0x58, 0x4e, 0xd4, 0xa5, 0x5c, 0x5c, 0x97, 0x91, 0x76, 0x0f, 0x98, 0x75,
	0x64, 0x5d, 0xc7, 0x2a, 0xa2, 0x30, 0xfe, 0x2e, 0x29, 0x4b, 0x75, 0x23, 0xfd, 0x58, 0xf1, 0x64,
	0x34, 0x39, 0x8d, 0x2a, 0xed, 0x5e, 0x65, 0xad, 0xe7, 0x44, 0xb9, 0x66, 0xe9, 0xba, 0xbe, 0x47,
	0x16, 0x42, 0xbc, 0x1f, 0xe1, 0x04, 0x30, 0x91, 0x75, 0xc6, 0x04, 0xa6, 0x0e, 0x92, 0x9b, 0x80,
	0x0a, 0xa3, 0x2f, 0x86, 0x8c, 0xa7, 0xc9, 0x3b, 0x3f, 0xa1, 0xa5, 0x93, 0xae, 0xa4, 0x73, 0x12,
	0x06, 0x0a, 0x0e, 0xf7, 0xd7, 0xfa, 0x09, 0xab, 0xcd, 0xa2, 0x88, 0xf6, 0x58, 0xb1, 0x5c, 0x8c,
	0xa9, 0x22, 0xea, 0xe5, 0xbc, 0x5c, 0x19, 0x41, 0x81, 0xae, 0xdb, 0x2b, 0x67, 0xac, 0x34, 0x95,
	0xc6, 0x7a, 0x4f, 0x35, 0x6b, 0x84, 0xba, 0x2c, 0xca, 0x31, 0xfe, 0xce, 0x32, 0xd8, 0x39, 0x19,
	0x9c, 0xbc, 0x0c, 0x13, 0xcb, 0xa3, 0xfb, 0xa3, 0xb4, 0xd5, 0x84, 0xcc, 0x54, 0xfc, 0xe1, 0x28,
	0xce, 0x32, 0xc4, 0xcf, 0xf3, 0x8d, 0x67, 0x71, 0x22, 0x90, 0x0b, 0x42, 0x06, 0xc9, 0x8d, 0xab,
	0xe4, 0x96, 0x8e, 0x24, 0xb2, 0xad, 0x69, 0xc9, 0x0c, 0xa8, 0xe2, 0xa1, 0xa5, 0xa9, 0x43, 0xee,
	0xb9, 0xbb, 0x88, 0x3f, 0xd0, 0xc0, 0xaa, 0x1c, 0x36, 0x03, 0x1d, 0xf7, 0xa5, 0x66, 0x0f, 0xb3,
	0x4f, 0xb7, 0x43, 0xbd, 0xf3, 0x19, 0x5e, 0x55, 0x94, 0x01, 0x95, 0xaf, 0x3d, 0xfb, 0x9b, 0x45,
	0x48, 0xfb, 0x33, 0x33, 0x12, 0x35, 0x3e, 0x24, 0x6b, 0x66, 0x80, 0x7a, 0x7b, 0x99, 0xb0, 0x9f,
	0x41, 0x1f, 0xb4, 0x43, 0xc5, 0x8e, 0x0f, 0xf5, 0xfb, 0x09, 0x69, 0xa6, 0x5b, 0x91, 0x7c, 0xfe,
	0xe3, 0xfb, 0x30, 0x4c, 0xf7, 0x5e, 0xc2, 0x1f, 0x14, 0xf2, 0x8f, 0xc8, 0x7a, 0xb6, 0xeb, 0x8f,
	0x6c, 0x62, 0x3d, 0x4f, 0x37, 0xbb, 0xec, 0xa7, 0xb0, 0xd8, 0xa6, 0x9f, 0xc9, 0xfd, 0xba, 0x7c,
	0x0d, 0x78, 0x90, 0xed, 0x01, 0x2b, 0x2a, 0x76, 0x93, 0x7a, 0x69, 0xe4, 0x0a, 0x08, 0xb2, 0xef,
	0x27, 0x30, 0x9a, 0xc3, 0xdc, 0xce, 0xea, 0xe5, 0x6d, 0x7b, 0xd7, 0x39, 0xfc, 0xe0, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x6e, 0x02, 0xe6, 0xd8, 0xfc, 0x1e, 0x00, 0x00,
}
